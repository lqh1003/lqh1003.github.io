{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/butterfly-icon.png","path":"img/butterfly-icon.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.ico","path":"img/favicon.ico","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/error-page.png","path":"img/error-page.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":1,"renderable":1},{"_id":"source/images/get-post入参格式/bodyData.png","path":"images/get-post入参格式/bodyData.png","modified":1,"renderable":0},{"_id":"source/images/get-post入参格式/formdata1.png","path":"images/get-post入参格式/formdata1.png","modified":1,"renderable":0},{"_id":"source/images/get-post入参格式/formdata2.png","path":"images/get-post入参格式/formdata2.png","modified":1,"renderable":0},{"_id":"source/images/get-post入参格式/formdata3.png","path":"images/get-post入参格式/formdata3.png","modified":1,"renderable":0},{"_id":"source/images/get-post入参格式/get.png","path":"images/get-post入参格式/get.png","modified":1,"renderable":0},{"_id":"source/images/get-post入参格式/json1.png","path":"images/get-post入参格式/json1.png","modified":1,"renderable":0},{"_id":"source/images/get-post入参格式/params.png","path":"images/get-post入参格式/params.png","modified":1,"renderable":0},{"_id":"source/images/get-post入参格式/json3.png","path":"images/get-post入参格式/json3.png","modified":1,"renderable":0},{"_id":"source/images/get-post入参格式/json2.png","path":"images/get-post入参格式/json2.png","modified":1,"renderable":0},{"_id":"source/images/get-post入参格式/urlencoded1.png","path":"images/get-post入参格式/urlencoded1.png","modified":1,"renderable":0},{"_id":"source/images/get-post入参格式/urlencoded2.png","path":"images/get-post入参格式/urlencoded2.png","modified":1,"renderable":0},{"_id":"source/images/get-post入参格式/urlencoded3.png","path":"images/get-post入参格式/urlencoded3.png","modified":1,"renderable":0},{"_id":"source/images/nvm管理node/node.png","path":"images/nvm管理node/node.png","modified":1,"renderable":0},{"_id":"source/images/nvm管理node/nvms1.png","path":"images/nvm管理node/nvms1.png","modified":1,"renderable":0},{"_id":"source/images/nvm管理node/nvms2.png","path":"images/nvm管理node/nvms2.png","modified":1,"renderable":0},{"_id":"source/images/nvm管理node/nvms3.png","path":"images/nvm管理node/nvms3.png","modified":1,"renderable":0},{"_id":"source/images/nvm管理node/path2.png","path":"images/nvm管理node/path2.png","modified":1,"renderable":0},{"_id":"source/images/nvm管理node/path1.png","path":"images/nvm管理node/path1.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/_posts/2025-07-16-get-post入参格式.md","hash":"dfba48b1cf0cbe8547f1e8aaaa425bbace90d5fa","modified":1752740113393},{"_id":"source/_posts/forEach不能直接支持异步等待.md","hash":"d1e9851bb96651c6331efbc50963fb01b1299358","modified":1752740113393},{"_id":"source/_posts/git远程项目迁移.md","hash":"103b5c2c2b8c52999fe211be4a3dc157abe21473","modified":1752747805587},{"_id":"source/_posts/nvm管理node.md","hash":"86780b2d42e2137011dc146d47cbd2cc7a20ee79","modified":1752740113393},{"_id":"source/_posts/我的第一篇博客.md","hash":"e9b78c3e89b46e86dbd777120f648b11fe2bc64a","modified":1752740113394},{"_id":"source/images/nvm管理node/path1.png","hash":"370c3f1e2b766325349a380eb0a86982d639e710","modified":1752740113446},{"_id":"source/images/nvm管理node/nvms2.png","hash":"caa851110bc539dc8ffb7a3543e80f600d4ba8ba","modified":1752740113444},{"_id":"themes/butterfly/.gitignore","hash":"1e843a7254515d97ddb1d1d32ae83ebfae937f54","modified":1752742463418},{"_id":"themes/butterfly/README.md","hash":"e1b9096ae0c4e5ef0a911aec05dbad4a3aae3173","modified":1752742463419},{"_id":"themes/butterfly/LICENSE","hash":"c8bc7df08db9dd3b39c2c2259a163a36cf2f6808","modified":1752742463419},{"_id":"themes/butterfly/README_CN.md","hash":"92e45255b8725f0a00450c88fcfd51ec61e1db67","modified":1752742463419},{"_id":"themes/butterfly/_config.yml","hash":"e7e2aebec046dbeb5c8bddc9c3533a1c1f06b1ae","modified":1752742463420},{"_id":"themes/butterfly/package-lock.json","hash":"e465c189a8ab2d552fb98f62db9f9bd544c07671","modified":1752742500737},{"_id":"themes/butterfly/plugins.yml","hash":"97a55ae0f4784ca80c7862da36da22b54be41ae5","modified":1752742463468},{"_id":"themes/butterfly/package.json","hash":"a394861e4dd3c8ac366be62af0f4ad752f921ef3","modified":1752742463468},{"_id":"themes/butterfly/.github/FUNDING.yml","hash":"3b572099a992e30267f5fe4cd3c582ff7ac9f083","modified":1752742463416},{"_id":"themes/butterfly/languages/default.yml","hash":"2e3beaf7fb585d83c3e7cd1cca51573f42935f3c","modified":1752742463421},{"_id":"themes/butterfly/languages/en.yml","hash":"2e3beaf7fb585d83c3e7cd1cca51573f42935f3c","modified":1752742463421},{"_id":"themes/butterfly/languages/ja.yml","hash":"bde04a89febd0dbf320eac4da4ecd81624f2f29f","modified":1752742463421},{"_id":"themes/butterfly/languages/ko.yml","hash":"70d6df7cf6472799faf4778405b332101ea822c1","modified":1752742463422},{"_id":"themes/butterfly/languages/zh-HK.yml","hash":"c93e510c7b119173226f3b0afb87c5f553f6eea8","modified":1752742463423},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"3cdeb46ad36f3b76703b4f39c72a8aa1a15425cb","modified":1752742463422},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"b59fedd9e1e65112d6a90dc7f55179085d0f1a6a","modified":1752742463423},{"_id":"themes/butterfly/layout/archive.pug","hash":"bc77220dfc269b8faad0930e1a4142ebf68165e5","modified":1752742463423},{"_id":"themes/butterfly/layout/category.pug","hash":"a7e9805a781e34e38d27462e6ce2a5821c34bb9f","modified":1752742463424},{"_id":"themes/butterfly/layout/index.pug","hash":"a93004cc8ec8050df603d32a6e6e02cd96fd9875","modified":1752742463467},{"_id":"themes/butterfly/layout/page.pug","hash":"7ce2a49c6c41847de4ccea377ade116339984434","modified":1752742463467},{"_id":"themes/butterfly/layout/post.pug","hash":"65c4a49c65c3fc4d9dc88b9791a75710c698c3a1","modified":1752742463467},{"_id":"themes/butterfly/layout/tag.pug","hash":"ca5333bd262cb58c195c844b593a0eed0c721766","modified":1752742463468},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"10ce05c8dbde09f53bdabe40b5388de9ccc71a31","modified":1752742463417},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"63ad2249ad09fb3fe21bd5ff9adefb304a7ab24a","modified":1752742463417},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"6e0f9470b18bd37d4891282ac73d61676b040e8c","modified":1752742463417},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"e320b40c051bae1549156cd5ea4a51383cf78598","modified":1752742463418},{"_id":"themes/butterfly/.github/workflows/stale.yml","hash":"4040c76547e270aaf184e9b219a44ca41bbb1b9f","modified":1752742463418},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"d30413aa2a17bf31e4084f1096523ead7f2a6bf1","modified":1752742463425},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"e1611a30df80cbe7ecf60be2e0cdd816ecabdd03","modified":1752742463424},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"1d11e334b22dbbedcb0f751f9ee9789d4416605e","modified":1752742463425},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"e5e6c05a621483b3542f2884e8ba45e84b1e973a","modified":1752742463430},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"062137cb4d078b27680da1ae28d524a9c963eebc","modified":1752742463435},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"3617840416f26078117f760579fb544dce07e1bc","modified":1752742463436},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"3e65b7bf6bccccbba7e15349f0a44f15c64c5b5e","modified":1752742463436},{"_id":"themes/butterfly/scripts/common/postDesc.js","hash":"ba98361b9d469076bfb045e5ff42eaf764a38fb1","modified":1752742463469},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"b23108d29fff3e32384d8689c8bcd2ab306a1ae7","modified":1752742463472},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"20a6ebf63439501a4b3fc81e7a2a2ea5d103bace","modified":1752742463473},{"_id":"themes/butterfly/scripts/events/404.js","hash":"039fc75f363d79669b0b2177d929cdff6f2ef7a4","modified":1752742463470},{"_id":"themes/butterfly/scripts/events/comment.js","hash":"7b1b16e1e8e08245a345764616956be50487eb53","modified":1752742463471},{"_id":"themes/butterfly/scripts/events/cdn.js","hash":"7864ba45716c51aef8d8b04fd4bc212e0008ce3b","modified":1752742463470},{"_id":"themes/butterfly/scripts/events/init.js","hash":"ce68e84a9ccfcf91100befbaa9afc392a0cd93bb","modified":1752742463471},{"_id":"themes/butterfly/scripts/events/merge_config.js","hash":"cead7891fbc0a53ffca4d68124e68efa855354a5","modified":1752742463471},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"bac639c404588ea62e601ef0bcd368c3bd0119af","modified":1752742463471},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"f59e10305fef59ea3e62a7395106c0927582879d","modified":1752742463472},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"d2878483c160999240e969a34e3ddc51a780821b","modified":1752742463473},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"00c5742ad1c75b3c5684d02ffc6a1921399e5376","modified":1752742463474},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"0cdf781a8c14d7b50d309e69f282ec7b178804bb","modified":1752742463474},{"_id":"themes/butterfly/scripts/helpers/getArchiveLength.js","hash":"bf77635e920eaf52bceebc95f87c7c87a7ca8038","modified":1752742463474},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"b9af69d8998d748178348d93a19daccff0550c56","modified":1752742463475},{"_id":"themes/butterfly/scripts/helpers/series.js","hash":"45367c4ce827329867dbcc750ec125da9ccb2cfd","modified":1752742463476},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"950b7d0966429bf0f9e6c5e1161e50e545e320b4","modified":1752742463475},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"2f44e1b3ccd170b256eae178299d6fa933a8d490","modified":1752742463476},{"_id":"themes/butterfly/scripts/tag/chartjs.js","hash":"195ba802d7e8406c155124a9c939a2318f82938b","modified":1752742463476},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"fa3d0a64f7fce4aff7928d4ddd95548978ba001c","modified":1752742463477},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"25eefe10189caf3910a0e5d5b2f2043ae9255531","modified":1752742463477},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"f02fb085a88a2c0c82aeffacc24e1b71c74bd7c0","modified":1752742463477},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"89c6c78d2db43b190055d5690741a79bab4f3e7e","modified":1752742463477},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"cf0bc17d0180231167cc6aa8a00fc64f198cb9f9","modified":1752742463478},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"e68d8d21f3a86e3646907a3685550ee20e8d4a9f","modified":1752742463478},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"50d8d8fac5c5b6e26317028895d7d82a2cf46606","modified":1752742463478},{"_id":"themes/butterfly/scripts/tag/score.js","hash":"f589fb6646bd17cf12d77a9b251dd614e1c8b899","modified":1752742463478},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"3c486b149e28edd1a06843f05a5c355000991b82","modified":1752742463479},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"176804f07567aa80f1ed95897a968a996b155dec","modified":1752742463479},{"_id":"themes/butterfly/scripts/tag/series.js","hash":"40bc9a065e3a1423e0e66f4911e00713ca9f5e9e","modified":1752742463479},{"_id":"themes/butterfly/source/css/var.styl","hash":"d1eec577074ab7b262182885576135bf1896e12c","modified":1752742463498},{"_id":"themes/butterfly/source/css/index.styl","hash":"b13d96924a5534bff91d75566b196ac87b4fac22","modified":1752742463498},{"_id":"themes/butterfly/source/js/main.js","hash":"5a52047b8520f79864d5a4ee2379a29751aead23","modified":1752742463504},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"fdb5482d04a75bd79946ad1ed291d281d0e9362d","modified":1752742463506},{"_id":"themes/butterfly/source/js/utils.js","hash":"b2ed9937fd00459c0e569db709a26cf8738ab18d","modified":1752742463506},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1752742463499},{"_id":"themes/butterfly/source/img/favicon.ico","hash":"455ac256580bf31a45813dbbdb87219bfc8bfb04","modified":1752742463503},{"_id":"themes/butterfly/source/img/error-page.png","hash":"d2519710498a871ca3e913c57e2ba20a805b6430","modified":1752742463502},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"e93a36d3c29b5a02c7f26a23f96e1f84b063cbe8","modified":1752742463426},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1752742463503},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"56a3c32de1a15627ff38c67f1131cdd6ec5ac924","modified":1752742463426},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"9ea75b06f19bf356f340f4a3fc1bdc0713cfe445","modified":1752742463426},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"f29123e603cbbcc6ce277d4e8f600ba67498077c","modified":1752742463427},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"1e1a69aa2cbda2e621c741b3802093244b3cc04e","modified":1752742463427},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"5168caadc4cf541f5d6676a9c5e8ae47a948f9ad","modified":1752742463428},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"83ed05ef1e39f2ee70c3fba2cf96e488d8ffec66","modified":1752742463427},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"44331c9db74b281b5c5c41439d3407a9076df1a1","modified":1752742463428},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"c2156c77a011b20fafd34f03ca073397c21b099f","modified":1752742463426},{"_id":"themes/butterfly/layout/includes/head/structured_data.pug","hash":"8ef72cd688999bf3915be6724c12700a1e2724d9","modified":1752742463428},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"733184f88e3a586a5fcc9d193ad500556b6c8eed","modified":1752742463429},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"f478a82ba4c15d4f6a5db38eca5c61f7054fa71d","modified":1752742463429},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"e2d31e0f450ad42c47f7ee96375799342bf2f19b","modified":1752742463429},{"_id":"themes/butterfly/layout/includes/mixins/indexPostUI.pug","hash":"f3389fa9ae4fa32e3c16573286583bc3023e57ad","modified":1752742463432},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"7d799c4694adb6e265e3f4b975d7f7f6a7021a17","modified":1752742463429},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"ef7afe0df7a3746744ac8185da7163b7406120ca","modified":1752742463431},{"_id":"themes/butterfly/layout/includes/loading/fullpage-loading.pug","hash":"a2f7d69ca7ec58f24fe7d4e04ae21d5b62b01567","modified":1752742463430},{"_id":"themes/butterfly/layout/includes/loading/index.pug","hash":"d76ce71ba106e350670c021a3dcae57547d01830","modified":1752742463430},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"efb40388e37cca0b5e7c3c66e811a42f8d32c910","modified":1752742463433},{"_id":"themes/butterfly/layout/includes/loading/pace.pug","hash":"9d2d539555bab495959b9df734ed5c43a9f9e5a9","modified":1752742463431},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1752742463433},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"6b0fa5f048aca8e9cbe56978301af918cf7ac34a","modified":1752742463433},{"_id":"themes/butterfly/layout/includes/page/404.pug","hash":"15d32c511e4875066fcbe9cb84c3ada07b5a7c41","modified":1752742463432},{"_id":"themes/butterfly/layout/includes/page/shuoshuo.pug","hash":"b2423cfc57a5e3a0e1112ff7c18d5c5c720d89d5","modified":1752742463434},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"b96c232e5178d927987791d9ae386dd83679535a","modified":1752742463435},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"79ad31eb72a9e14007770b18a426406a25315b38","modified":1752742463435},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"a8312b527493dabbadbb1280760168d3bc909a3b","modified":1752742463461},{"_id":"themes/butterfly/layout/includes/post/outdate-notice.pug","hash":"b7ce9484bc5c97ea6154f0b78fb9b8951fafedbd","modified":1752742463435},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"73d33b6930e7944187a4b3403daf25d27077a2dd","modified":1752742463462},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"21e019bdc3b1e796bb00976bb29af2d51f873624","modified":1752742463462},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"66e383b4ef374951eb87dd1bf4cdb7a667193fb5","modified":1752742463463},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"1aba8aa7cd767dc96879d13a13b4c8ceb9023233","modified":1752742463462},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"1dba77d250eeebfb6e293d504352c7e9ea31980b","modified":1752742463463},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"db92f25ff3fd061882f81bf74ca560ff66983a0c","modified":1752742463435},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"d8753772889b5d0f4d15639ed6af5e91e53b1d03","modified":1752742463464},{"_id":"themes/butterfly/layout/includes/widget/card_post_series.pug","hash":"e0bb72fa0ce15964b11b8fe421cae3432394e35f","modified":1752742463464},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"1dd19a564320d248dbcee7f118a5b96c6466da65","modified":1752742463465},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"bb842d2aa6469d65bf06af1372f0a19a9e4ef44c","modified":1752742463465},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"842b772a387b576550fa127030e1c2e9bf65716d","modified":1752742463465},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"7b5ae404a1205546b7de4be42291315cf918f2b3","modified":1752742463466},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"45f620cd87b9ef2aa9d1e024e697ed6b4eecff34","modified":1752742463467},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"fcddd80cdeb6aa81f342cd9f0102302f6ba087a8","modified":1752742463466},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"ed79fef5b5025415ea12eaed970f3fe7f6ef9596","modified":1752742463437},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"43014bfc63583d3ee8808d526dd165848c0ed52f","modified":1752742463448},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"d29ee6a07e6716c0dc1d4533c87b19b6076fefd3","modified":1752742463456},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"88f979a0b1a19eeb0db229247833bf9c6865c3b9","modified":1752742463456},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"236c3ce26dd76e80b04d457789475c42da5ac0c8","modified":1752742463460},{"_id":"themes/butterfly/layout/includes/third-party/umami_analytics.pug","hash":"bc35a1552d26ecdeeadbf06300078dbb5128a6e5","modified":1752742463461},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"d12340a7df4601b9a23f070e16645861aeb3bb0a","modified":1752742463480},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"4fcb8222b9548e22f7b76f12d33e3698240cbae0","modified":1752742463481},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"67062d597408068e4a59e95851e98fed34b745da","modified":1752742463481},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"ba174889e770ae9f6683379b9eae9d8c94253080","modified":1752742463485},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"4cc02bcbaa4a1933a82a9ea57a603fe2d059fc77","modified":1752742463485},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"a51edfd3e499e7d38c32241c40e8e4d371efca73","modified":1752742463484},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"fbfce4d67cacd1df22fb73d89d008693f59d9d91","modified":1752742463485},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"5692bcf8929f7ef12b10d860da6cb90ca55752c0","modified":1752742463486},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"7536c44e78115559a996d0384adec38b78d8dc25","modified":1752742463486},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"f0b01bbf321c2c24fdccaee367dd9fd448031a72","modified":1752742463486},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"7d7554573c005399bc8c2264a85896d2d51be1e1","modified":1752742463487},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"543eaf9c7df7e0db841e5946ee5f9082c3c46290","modified":1752742463487},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"ef8e8549fe7ad4b99793844a93b4a89f77f417d5","modified":1752742463488},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"d9cdf564a822a585e67fd5bac8573ba87eeb3743","modified":1752742463488},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"a0f5835f04358122e8b1d38dd3e8da09a1b5b431","modified":1752742463488},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"084dc4dfb41f55e237a9d6cf8c2f5dba729b83be","modified":1752742463488},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"0af7c8754f04bdd9a02a14d880774753bd2e35ee","modified":1752742463489},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"4c9849df9c68d892c7df0ca28123aeb0dc9dc424","modified":1752742463489},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"ad66212554468b7067590308ed4cf40524fea662","modified":1752742463490},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"205ccc7d0ec6ce1193b46bc0c9ce0385594581fb","modified":1752742463490},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"5abe5480d83ff8b452a780a484d50a44091475bf","modified":1752742463490},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"c4cda7b0c99015df29ce00fdfddd2f7679653754","modified":1752742463491},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"dcff804c4c237e1e908481b44c1ac4e39ac0da34","modified":1752742463491},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"1f8d715faf3b91b53426e38195c0920afb3bfa1c","modified":1752742463491},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"7543bb688876a946538d66b991c71b94b5216277","modified":1752742463492},{"_id":"themes/butterfly/source/css/_page/shuoshuo.styl","hash":"79bb1d9a27822ed5675d1e52f5dbd0e2f5d5010a","modified":1752742463492},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"fc26e980fedde31644ebf878967f66ef9ba32be2","modified":1752742463492},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"d8a8275a68a1421c4c09b604cf78bea16c1d0463","modified":1752742463493},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"6c4cbdadd9a49029fe0c59e29808d873e5b6b6ee","modified":1752742463493},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"1f2b86df86df81c3a59377b29102314ffc73dfa6","modified":1752742463493},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"de8437a058a315d14d7e7034066f095b7b3ed4b4","modified":1752742463494},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"30d1f809efd252ed0233d96d4374efd2b01d2292","modified":1752742463494},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"985b183db7b7bfd8f9bdb60494549fb7f850348b","modified":1752742463495},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"d27dbccaf3de1c9158d19e4fd49a25953cb5778d","modified":1752742463495},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"3be8d0a75e7cc96548667cae0cb6a474279bd0b5","modified":1752742463495},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"216f52fefc2274b542b549d8470503e6f1a308fb","modified":1752742463495},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"4929382bd60788d34752a66e2fe764ef797a72a0","modified":1752742463496},{"_id":"themes/butterfly/source/css/_tags/series.styl","hash":"0657169849bc4bf4d93b5492ade040c8f58c1901","modified":1752742463496},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"3a88eedcb694da79e92581ce50cb1a430b1fb615","modified":1752742463497},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"e846ddaef494d46cdfa2379deacfe74fa1cc5264","modified":1752742463497},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"8549829fb7d3c21cd9e119884962e8c463a4a267","modified":1752742463498},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"7119f2f2943de71999d3dd6ba5c60cde846f114b","modified":1752742463505},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/abcjs.pug","hash":"7df4d27cf9e576c6b9c1e4f76a100a41749ca8bb","modified":1752742463437},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/index.pug","hash":"f0a90d8e39915a74b16ef22e851f179415cd7eaa","modified":1752742463437},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"b03ee8625149191f9d5d057bbc9824b68d8dd0c4","modified":1752742463438},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"d6fff5a7f84c8b09f282f9ddc0020a68a8aac9ea","modified":1752742463438},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"cbfbcf34a24d21ba2b21cf9eedb76f4c3c563c5a","modified":1752742463439},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"846cabae287ae31b3bbfac3da022475713dd5ecc","modified":1752742463439},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"716dc463fe4ef5112e7018ed60804125fdfa5cad","modified":1752742463440},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"7884883ec15792f7e54daacb3c62b851dde2b66a","modified":1752742463441},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"fd2320ee25507bb8ef49f932c2d170586b44ea4d","modified":1752742463441},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"f2ea5249b3e6670f6c8c77868f4f42c502e43830","modified":1752742463444},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"c81fa7d8a5cb96d1ae07bfa8c46b84a58161add1","modified":1752742463444},{"_id":"themes/butterfly/layout/includes/third-party/comments/artalk.pug","hash":"89c63a5f0c0ab6314de7158fbc8fcbc84997fc55","modified":1752742463444},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"592b2251db6c1abeb8b0eebe3b2e6d9aa0dec445","modified":1752742463445},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"be45b522286bbc64724341f23a5056ad24d3f796","modified":1752742463440},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"8af585e6d6f73ee57114eefad574dc6e8ea9f570","modified":1752742463445},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"58914c58a190e3bc0aa37cb581e77e442b563501","modified":1752742463445},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"332b532bafbaf369fde840883b77e5a23d050a39","modified":1752742463446},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"3abbaaa4ea575c45b3cebffd40bad1acc6ffce84","modified":1752742463446},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"9d84a681289175dec75a85f301d2fc9ce1b2bb7a","modified":1752742463446},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"53d99831f29aeb2e336ed1407d79590041f77002","modified":1752742463447},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"30a7d157890de69deab28baa47fb7bb28b040efd","modified":1752742463448},{"_id":"themes/butterfly/layout/includes/third-party/comments/remark42.pug","hash":"ea9766439b6b1936306916a8b08d2681afbc8ea9","modified":1752742463447},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"24f18b0c67803210d53abbf9c1d454c000b06eee","modified":1752742463448},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"e2bf15357485cd502414b3b20f5b1f762a2fd014","modified":1752742463448},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"5b29badecbbe828112c001156023fc0566045cf6","modified":1752742463442},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"a2b783230a9143de69004cfc914d9f55e6fc1660","modified":1752742463505},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"62466b251052cae609b6369d4cb4b6a85320757d","modified":1752742463443},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"24d094fd917947c0ca7492fa094328b1a183b873","modified":1752742463442},{"_id":"themes/butterfly/layout/includes/third-party/math/chartjs.pug","hash":"732eb1118ea1a73aa5c164d639097c614f8e9953","modified":1752742463449},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"e8438941085def0591a72fc9b0d705dbf107f54f","modified":1752742463442},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"b83db9fa64d42a0bfd97efb660e09be3f166a144","modified":1752742463450},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"af66d13204030d47537b9e31a6173e63589ce7ff","modified":1752742463449},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"db2f4fff80a1166476ea76ae004aa186df11bad3","modified":1752742463450},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"ca2fc5928ca292f29fd8333c73733344994096fb","modified":1752742463450},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"187302dbc916852ff2fdf47061e272c061611dda","modified":1752742463451},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"fa4b4194749d05f7249f365f2b89c0281057ce54","modified":1752742463453},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"72e2970b23570e308f8af5d8ba8e5e3321d01bbf","modified":1752742463453},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"a7c07dbc1e970a5b247091458e1ee9b144a3366d","modified":1752742463454},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"34edfebf0cace0852806be774910ccb0e0914650","modified":1752742463454},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"d2e12a9fc302a4efe52c90d44896fbd73e193a1f","modified":1752742463455},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"d376ec17fb19fcdcf0d2ad71330190146d3af879","modified":1752742463455},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"ec6c685080634ac46ffbea1b8f10313388888f43","modified":1752742463455},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/common.pug","hash":"27fa75affebc6e84a487c62bceff783bde595256","modified":1752742463452},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"5c944052280c5ed046d2cfeb54b0da8876af0ec6","modified":1752742463459},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"e51e896ccb13900de38dc81cf44dc789e2418a12","modified":1752742463460},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"efef352c1d122409575386bf3894dce8e87032e2","modified":1752742463460},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"7f0ede1cd3fed2669c94a8e1b21bc0b183f310b8","modified":1752742463457},{"_id":"themes/butterfly/layout/includes/third-party/search/docsearch.pug","hash":"013756ff3363344987cc00fc9bd833baf193c341","modified":1752742463458},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"f8557548d2ad8dd149c562193991c6c6cda02415","modified":1752742463458},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"2622b4cf9189fa23e4a422aaf9ef272e4f2c6137","modified":1752742463458},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"9f02598b5e4296aec6470639d4bac4c9ac46392e","modified":1752742463482},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"ef52ebf1e8e751a412f9456fdaeee7d88afd9a72","modified":1752742463482},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"077ec530831be1d80e93da380406b9f5abd0918a","modified":1752742463483},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"1883c91d43bff10aae55122a21e0b064b6f5c9dd","modified":1752742463484},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"de4bb5fc2dfca368b35e4c1109c92f7abc9e2245","modified":1752742463484},{"_id":"source/images/nvm管理node/path2.png","hash":"1fac019c4c8dfa26f0c9709f151f169d93ce9809","modified":1752740113447},{"_id":"source/images/nvm管理node/nvms1.png","hash":"f169117474fb7cd1e4d920463de12d422c2b8515","modified":1752740113442},{"_id":"themes/butterfly/source/img/butterfly-icon.png","hash":"f5dd732fed5c3bcd4aa76bac3441bac8485fb432","modified":1752742463502},{"_id":"source/images/nvm管理node/nvms3.png","hash":"0c73472eb0c85930408c73c5d54ad9de26137a6a","modified":1752740113445},{"_id":"source/images/get-post入参格式/formdata2.png","hash":"4b81f95c2973b0eee32a64b326457941728b0913","modified":1752740113406},{"_id":"source/images/get-post入参格式/json3.png","hash":"a12672497f18d3c885ec49b138baf7a634a67835","modified":1752740113422},{"_id":"source/images/get-post入参格式/json2.png","hash":"28a202124a408fda87884e3e7d86d04b633cf486","modified":1752740113419},{"_id":"source/images/nvm管理node/node.png","hash":"39591bfcd56fce198d8869950ef82d12059e73a1","modified":1752740113439},{"_id":"source/images/get-post入参格式/get.png","hash":"e80e11cf83ec2d0fd3272a675fd08f80cfae09f7","modified":1752740113413},{"_id":"source/images/get-post入参格式/urlencoded2.png","hash":"d84defda37236e452b69f0a37f12597b8bb205cc","modified":1752740113432},{"_id":"source/images/get-post入参格式/bodyData.png","hash":"9b2d1fb6ab98fbd838f92bd80f5a0881272461d1","modified":1752740113399},{"_id":"source/images/get-post入参格式/params.png","hash":"a5f99846ed6b97f347a3d3a06235a9c2c40d2bc2","modified":1752740113425},{"_id":"source/images/get-post入参格式/urlencoded3.png","hash":"39bde66360fd7ea74188183282d1ef101b851a55","modified":1752740113435},{"_id":"source/images/get-post入参格式/formdata1.png","hash":"3a13289c4f5fdd3201be8a958b38a504c2882695","modified":1752740113403},{"_id":"source/images/get-post入参格式/json1.png","hash":"548c6dd7378c72106e381f4c43c33f5da5831ff8","modified":1752740113417},{"_id":"source/images/get-post入参格式/urlencoded1.png","hash":"394c63d5666b1361998254a248ab155ad7fdaf84","modified":1752740113429},{"_id":"source/images/get-post入参格式/formdata3.png","hash":"5fac213bafaf2106eb4d007c8295b1cee5e91f29","modified":1752740113410},{"_id":"public/archives/index.html","hash":"d091247c42377b7019a0e52fd825202d1e2b1076","modified":1752827535121},{"_id":"public/archives/2025/index.html","hash":"030b4327d04e8024711fca87da166b83b231beef","modified":1752827535121},{"_id":"public/archives/2025/07/index.html","hash":"c2a34f9abce88d2710ecb41d5e3359600d7e330a","modified":1752827535121},{"_id":"public/tags/forEach/index.html","hash":"62f8afd4bf03065a3f49bbf3b7d7f7035f123e21","modified":1752827535121},{"_id":"public/tags/axios/index.html","hash":"0ac16ebfedf0545e780d2cfdb8609a3034da989b","modified":1752827535121},{"_id":"public/tags/post/index.html","hash":"3f1babb5529a27b197fffa71318c92e4f412a2a2","modified":1752827535121},{"_id":"public/2025/07/11/我的第一篇博客/index.html","hash":"826546ab26edd535718ed1869bfca11128214908","modified":1752827535121},{"_id":"public/2025/07/11/git远程项目迁移/index.html","hash":"addbb44d891b1bfbad7a71ac4b1ac32a96bc1c4d","modified":1752827535121},{"_id":"public/2025/07/14/nvm管理node/index.html","hash":"f37a07ae437ba50a45691d06164d3db4f25e7c1e","modified":1752827535121},{"_id":"public/2025/07/16/get-post入参格式/index.html","hash":"bccbe52a59108ec168c2a9b9f5ab749f6974a993","modified":1752827535121},{"_id":"public/2025/07/14/forEach不能直接支持异步等待/index.html","hash":"420bc825d7b8bfda427cbf57feb5153d7b12fc27","modified":1752827535121},{"_id":"public/index.html","hash":"b324951a482be302af82f3c1394c0c799d82c90f","modified":1752827535121},{"_id":"public/tags/get/index.html","hash":"17e69b31a8d8315c476dc635b174ccb4c7b91f2d","modified":1752827535121},{"_id":"public/tags/async-await/index.html","hash":"60502b01507664162a9a0c69a2736d5f3a07d45a","modified":1752827535121},{"_id":"public/tags/nvm/index.html","hash":"2226f5cab57a09cb8439e2dbddb8cca17e847eee","modified":1752827535121},{"_id":"public/tags/git/index.html","hash":"ae35fedbaca5954121d9fde7d5c1737e994c955b","modified":1752827535121},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1752827535121},{"_id":"public/img/favicon.ico","hash":"455ac256580bf31a45813dbbdb87219bfc8bfb04","modified":1752827535121},{"_id":"public/img/error-page.png","hash":"d2519710498a871ca3e913c57e2ba20a805b6430","modified":1752827535121},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1752827535121},{"_id":"public/images/nvm管理node/path1.png","hash":"370c3f1e2b766325349a380eb0a86982d639e710","modified":1752827535121},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1752827535121},{"_id":"public/js/utils.js","hash":"ce898acc9081131cdc3a97baf43cb7b1a25da47f","modified":1752827535121},{"_id":"public/js/search/algolia.js","hash":"e5821f78381af9f0f646952a7dd118daab2a79a6","modified":1752827535121},{"_id":"public/js/search/local-search.js","hash":"4e11d033fb58563f5e1b497f1a6f1c62d3501ee6","modified":1752827535121},{"_id":"public/css/index.css","hash":"d08f78105a6e4a7def950e193b7148d09d9e49b1","modified":1752827535121},{"_id":"public/js/main.js","hash":"fb746a3e67d0373deea8481110dd436fea4ca38c","modified":1752827535121},{"_id":"public/js/tw_cn.js","hash":"7ef59df188ea523da89f4caf69c5c0f14e78da69","modified":1752827535121},{"_id":"public/img/butterfly-icon.png","hash":"f5dd732fed5c3bcd4aa76bac3441bac8485fb432","modified":1752827535121},{"_id":"public/images/nvm管理node/nvms2.png","hash":"caa851110bc539dc8ffb7a3543e80f600d4ba8ba","modified":1752827535121},{"_id":"public/images/nvm管理node/path2.png","hash":"1fac019c4c8dfa26f0c9709f151f169d93ce9809","modified":1752827535121},{"_id":"public/images/nvm管理node/nvms1.png","hash":"f169117474fb7cd1e4d920463de12d422c2b8515","modified":1752827535121},{"_id":"public/images/nvm管理node/nvms3.png","hash":"0c73472eb0c85930408c73c5d54ad9de26137a6a","modified":1752827535121},{"_id":"public/images/get-post入参格式/formdata2.png","hash":"4b81f95c2973b0eee32a64b326457941728b0913","modified":1752827535121},{"_id":"public/images/get-post入参格式/json3.png","hash":"a12672497f18d3c885ec49b138baf7a634a67835","modified":1752827535121},{"_id":"public/images/get-post入参格式/json2.png","hash":"28a202124a408fda87884e3e7d86d04b633cf486","modified":1752827535121},{"_id":"public/images/nvm管理node/node.png","hash":"39591bfcd56fce198d8869950ef82d12059e73a1","modified":1752827535121},{"_id":"public/images/get-post入参格式/get.png","hash":"e80e11cf83ec2d0fd3272a675fd08f80cfae09f7","modified":1752827535121},{"_id":"public/images/get-post入参格式/urlencoded2.png","hash":"d84defda37236e452b69f0a37f12597b8bb205cc","modified":1752827535121},{"_id":"public/images/get-post入参格式/bodyData.png","hash":"9b2d1fb6ab98fbd838f92bd80f5a0881272461d1","modified":1752827535121},{"_id":"public/images/get-post入参格式/params.png","hash":"a5f99846ed6b97f347a3d3a06235a9c2c40d2bc2","modified":1752827535121},{"_id":"public/images/get-post入参格式/urlencoded3.png","hash":"39bde66360fd7ea74188183282d1ef101b851a55","modified":1752827535121},{"_id":"public/images/get-post入参格式/formdata1.png","hash":"3a13289c4f5fdd3201be8a958b38a504c2882695","modified":1752827535121},{"_id":"public/images/get-post入参格式/json1.png","hash":"548c6dd7378c72106e381f4c43c33f5da5831ff8","modified":1752827535121},{"_id":"public/images/get-post入参格式/urlencoded1.png","hash":"394c63d5666b1361998254a248ab155ad7fdaf84","modified":1752827535121},{"_id":"public/images/get-post入参格式/formdata3.png","hash":"5fac213bafaf2106eb4d007c8295b1cee5e91f29","modified":1752827535121}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"get/post入参格式","date":"2025-07-16T02:47:10.000Z","_content":"\n#### 1、get 请求：\n\n- 用 params 入参\n\n- 数据传递方式：通过 URL 形式参数传递，拼接在请求地址上\n\n- GET 请求是否可以设置  Content-Type？\n  - 可以设置，但通常没有意义，因为 GET 请求的请求体通常为空。\n  - 如果强行设置  Content-Type，浏览器和服务器可能会忽略它。\n\n    ![](/images/get-post入参格式/get.png)\n\n### 2、post 请求：\n\n（1）用 data 传参，data：普通对象、FormData 表单对象\n\n（2）在前端开发中，发送 POST 请求时，正确设置 Content-Type 是非常重要的，因为它告诉服务器请求体的数据格式。\n\n- `application/json` 发送 JSON 格式的数据\n\n```javascript\nexport function submitCollectRecordDetail() {\n\tconst data = {\n\t\tsessionId: 'xzdfsd',\n\t\tlanguageCode: 'CH',\n\t\titemCode: 'AMC',\n\t}\n\treturn request({\n\t\turl: '/apiGlobal/submitCollectRecordDetail',\n\t\tmethod: 'post',\n\t\tdata: data,\n\t\theaders: {\n\t\t\t'Content-Type': 'application/josn;charset=UTF-8',\n\t\t},\n\t})\n}\n```\n\n![](/images/get-post入参格式/json1.png)\n![](/images/get-post入参格式/json2.png)\n![](/images/get-post入参格式/json3.png)\n\n- `application/x-www-form-urlencoded` 发送表单数据，键值对格式【`URLSearchParams`】 key1=value1&key2=value2\n\n```javascript\nexport function submitCollectRecordDetail(data) {\n\tdata = {\n\t\tsessionId: store.state.MyToken,\n\t\tlanguageCode: store.state.lKey,\n\t\titemCode: store.state.itemCode,\n\t\t...data,\n\t}\n\tdata = new URLSearchParams(data).toString()\n\treturn request({\n\t\turl: '/apiGlobal/submitCollectRecordDetail',\n\t\tmethod: 'post',\n\t\tdata: data,\n\t\theaders: {\n\t\t\t'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\n\t\t},\n\t})\n}\n```\n\n![](/images/get-post入参格式/urlencoded1.png)\n![](/images/get-post入参格式/urlencoded2.png)\n![](/images/get-post入参格式/urlencoded3.png)\n\n- `multipart/form-data` 发送表单数据，支持文件上传\n\n```javascript\nexport function submitCollectRecordDetail(data) {\n\tdata = {\n\t\tsessionId: store.state.MyToken,\n\t\tlanguageCode: store.state.lKey,\n\t\titemCode: store.state.itemCode,\n\t\t...data,\n\t}\n\tlet obj = new FormData()\n\tObject.keys(data).forEach((key) => {\n\t\tobj.append(key, data[key])\n\t})\n\treturn request({\n\t\turl: '/apiGlobal/submitCollectRecordDetail',\n\t\tmethod: 'post',\n\t\tdata: obj,\n\t\theaders: {\n\t\t\t'Content-Type': 'multipart/form-data',\n\t\t},\n\t})\n}\n```\n\n![](/images/get-post入参格式/formdata1.png)\n![](/images/get-post入参格式/formdata2.png)\n![](/images/get-post入参格式/formdata3.png)\n\n#### 注意事项：\n\n- `multipart/form-data`  的  Content-Type：\n  使用  FormData  时，不要手动设置  Content-Type，浏览器会自动添加正确的  Content-Type  和边界（boundary）。\n\n- 字符编码：如果需要指定字符编码，可以在  Content-Type  中添加  charset\n  例如：`Content-Type: application/json;charset=UTF-8`\n\n- CORS 请求：\n  如果跨域请求，确保服务器支持  Content-Type，并在响应头中设置  `Access-Control-Allow-Headers`\n\n- Postman 中看数据：\n  Get 请求，params 入参，在 params 中查看数据\n  ![](/images/get-post入参格式/params.png)\n  Post 请求，data 入参，在 body 中查看数据，还有数据格式(Content-Type 决定数据格式)\n  ![](/images/get-post入参格式/bodyData.png)\n","source":"_posts/2025-07-16-get-post入参格式.md","raw":"---\ntitle: get/post入参格式\ndate: 2025-07-16 10:47:10\ntags:\n  - axios\n  - get\n  - post\n---\n\n#### 1、get 请求：\n\n- 用 params 入参\n\n- 数据传递方式：通过 URL 形式参数传递，拼接在请求地址上\n\n- GET 请求是否可以设置  Content-Type？\n  - 可以设置，但通常没有意义，因为 GET 请求的请求体通常为空。\n  - 如果强行设置  Content-Type，浏览器和服务器可能会忽略它。\n\n    ![](/images/get-post入参格式/get.png)\n\n### 2、post 请求：\n\n（1）用 data 传参，data：普通对象、FormData 表单对象\n\n（2）在前端开发中，发送 POST 请求时，正确设置 Content-Type 是非常重要的，因为它告诉服务器请求体的数据格式。\n\n- `application/json` 发送 JSON 格式的数据\n\n```javascript\nexport function submitCollectRecordDetail() {\n\tconst data = {\n\t\tsessionId: 'xzdfsd',\n\t\tlanguageCode: 'CH',\n\t\titemCode: 'AMC',\n\t}\n\treturn request({\n\t\turl: '/apiGlobal/submitCollectRecordDetail',\n\t\tmethod: 'post',\n\t\tdata: data,\n\t\theaders: {\n\t\t\t'Content-Type': 'application/josn;charset=UTF-8',\n\t\t},\n\t})\n}\n```\n\n![](/images/get-post入参格式/json1.png)\n![](/images/get-post入参格式/json2.png)\n![](/images/get-post入参格式/json3.png)\n\n- `application/x-www-form-urlencoded` 发送表单数据，键值对格式【`URLSearchParams`】 key1=value1&key2=value2\n\n```javascript\nexport function submitCollectRecordDetail(data) {\n\tdata = {\n\t\tsessionId: store.state.MyToken,\n\t\tlanguageCode: store.state.lKey,\n\t\titemCode: store.state.itemCode,\n\t\t...data,\n\t}\n\tdata = new URLSearchParams(data).toString()\n\treturn request({\n\t\turl: '/apiGlobal/submitCollectRecordDetail',\n\t\tmethod: 'post',\n\t\tdata: data,\n\t\theaders: {\n\t\t\t'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\n\t\t},\n\t})\n}\n```\n\n![](/images/get-post入参格式/urlencoded1.png)\n![](/images/get-post入参格式/urlencoded2.png)\n![](/images/get-post入参格式/urlencoded3.png)\n\n- `multipart/form-data` 发送表单数据，支持文件上传\n\n```javascript\nexport function submitCollectRecordDetail(data) {\n\tdata = {\n\t\tsessionId: store.state.MyToken,\n\t\tlanguageCode: store.state.lKey,\n\t\titemCode: store.state.itemCode,\n\t\t...data,\n\t}\n\tlet obj = new FormData()\n\tObject.keys(data).forEach((key) => {\n\t\tobj.append(key, data[key])\n\t})\n\treturn request({\n\t\turl: '/apiGlobal/submitCollectRecordDetail',\n\t\tmethod: 'post',\n\t\tdata: obj,\n\t\theaders: {\n\t\t\t'Content-Type': 'multipart/form-data',\n\t\t},\n\t})\n}\n```\n\n![](/images/get-post入参格式/formdata1.png)\n![](/images/get-post入参格式/formdata2.png)\n![](/images/get-post入参格式/formdata3.png)\n\n#### 注意事项：\n\n- `multipart/form-data`  的  Content-Type：\n  使用  FormData  时，不要手动设置  Content-Type，浏览器会自动添加正确的  Content-Type  和边界（boundary）。\n\n- 字符编码：如果需要指定字符编码，可以在  Content-Type  中添加  charset\n  例如：`Content-Type: application/json;charset=UTF-8`\n\n- CORS 请求：\n  如果跨域请求，确保服务器支持  Content-Type，并在响应头中设置  `Access-Control-Allow-Headers`\n\n- Postman 中看数据：\n  Get 请求，params 入参，在 params 中查看数据\n  ![](/images/get-post入参格式/params.png)\n  Post 请求，data 入参，在 body 中查看数据，还有数据格式(Content-Type 决定数据格式)\n  ![](/images/get-post入参格式/bodyData.png)\n","slug":"get-post入参格式","published":1,"updated":"2025-07-17T08:15:13.393Z","comments":1,"layout":"post","photos":[],"_id":"cmd8k9cgu0000a8nchfpm56ul","content":"<h4 id=\"1、get-请求：\"><a href=\"#1、get-请求：\" class=\"headerlink\" title=\"1、get 请求：\"></a>1、get 请求：</h4><ul>\n<li><p>用 params 入参</p>\n</li>\n<li><p>数据传递方式：通过 URL 形式参数传递，拼接在请求地址上</p>\n</li>\n<li><p>GET 请求是否可以设置  Content-Type？</p>\n<ul>\n<li><p>可以设置，但通常没有意义，因为 GET 请求的请求体通常为空。</p>\n</li>\n<li><p>如果强行设置  Content-Type，浏览器和服务器可能会忽略它。</p>\n<p><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/get.png\"></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2、post-请求：\"><a href=\"#2、post-请求：\" class=\"headerlink\" title=\"2、post 请求：\"></a>2、post 请求：</h3><p>（1）用 data 传参，data：普通对象、FormData 表单对象</p>\n<p>（2）在前端开发中，发送 POST 请求时，正确设置 Content-Type 是非常重要的，因为它告诉服务器请求体的数据格式。</p>\n<ul>\n<li><code>application/json</code> 发送 JSON 格式的数据</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">submitCollectRecordDetail</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> data = &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">sessionId</span>: <span class=\"string\">&#x27;xzdfsd&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">languageCode</span>: <span class=\"string\">&#x27;CH&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">itemCode</span>: <span class=\"string\">&#x27;AMC&#x27;</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"title function_\">request</span>(&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">url</span>: <span class=\"string\">&#x27;/apiGlobal/submitCollectRecordDetail&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">method</span>: <span class=\"string\">&#x27;post&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">data</span>: data,</span><br><span class=\"line\">\t\t<span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/josn;charset=UTF-8&#x27;</span>,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/json1.png\"><br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/json2.png\"><br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/json3.png\"></p>\n<ul>\n<li><code>application/x-www-form-urlencoded</code> 发送表单数据，键值对格式【<code>URLSearchParams</code>】 key1&#x3D;value1&amp;key2&#x3D;value2</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">submitCollectRecordDetail</span>(<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">\tdata = &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">sessionId</span>: store.<span class=\"property\">state</span>.<span class=\"property\">MyToken</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">languageCode</span>: store.<span class=\"property\">state</span>.<span class=\"property\">lKey</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">itemCode</span>: store.<span class=\"property\">state</span>.<span class=\"property\">itemCode</span>,</span><br><span class=\"line\">\t\t...data,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tdata = <span class=\"keyword\">new</span> <span class=\"title class_\">URLSearchParams</span>(data).<span class=\"title function_\">toString</span>()</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"title function_\">request</span>(&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">url</span>: <span class=\"string\">&#x27;/apiGlobal/submitCollectRecordDetail&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">method</span>: <span class=\"string\">&#x27;post&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">data</span>: data,</span><br><span class=\"line\">\t\t<span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/x-www-form-urlencoded;charset=UTF-8&#x27;</span>,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/urlencoded1.png\"><br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/urlencoded2.png\"><br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/urlencoded3.png\"></p>\n<ul>\n<li><code>multipart/form-data</code> 发送表单数据，支持文件上传</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">submitCollectRecordDetail</span>(<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">\tdata = &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">sessionId</span>: store.<span class=\"property\">state</span>.<span class=\"property\">MyToken</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">languageCode</span>: store.<span class=\"property\">state</span>.<span class=\"property\">lKey</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">itemCode</span>: store.<span class=\"property\">state</span>.<span class=\"property\">itemCode</span>,</span><br><span class=\"line\">\t\t...data,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> obj = <span class=\"keyword\">new</span> <span class=\"title class_\">FormData</span>()</span><br><span class=\"line\">\t<span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(data).<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">key</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\tobj.<span class=\"title function_\">append</span>(key, data[key])</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"title function_\">request</span>(&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">url</span>: <span class=\"string\">&#x27;/apiGlobal/submitCollectRecordDetail&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">method</span>: <span class=\"string\">&#x27;post&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">data</span>: obj,</span><br><span class=\"line\">\t\t<span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;multipart/form-data&#x27;</span>,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/formdata1.png\"><br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/formdata2.png\"><br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/formdata3.png\"></p>\n<h4 id=\"注意事项：\"><a href=\"#注意事项：\" class=\"headerlink\" title=\"注意事项：\"></a>注意事项：</h4><ul>\n<li><p><code>multipart/form-data</code>  的  Content-Type：<br>使用  FormData  时，不要手动设置  Content-Type，浏览器会自动添加正确的  Content-Type  和边界（boundary）。</p>\n</li>\n<li><p>字符编码：如果需要指定字符编码，可以在  Content-Type  中添加  charset<br>例如：<code>Content-Type: application/json;charset=UTF-8</code></p>\n</li>\n<li><p>CORS 请求：<br>如果跨域请求，确保服务器支持  Content-Type，并在响应头中设置  <code>Access-Control-Allow-Headers</code></p>\n</li>\n<li><p>Postman 中看数据：<br>Get 请求，params 入参，在 params 中查看数据<br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/params.png\"><br>Post 请求，data 入参，在 body 中查看数据，还有数据格式(Content-Type 决定数据格式)<br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/bodyData.png\"></p>\n</li>\n</ul>\n","excerpt":"","more":"<h4 id=\"1、get-请求：\"><a href=\"#1、get-请求：\" class=\"headerlink\" title=\"1、get 请求：\"></a>1、get 请求：</h4><ul>\n<li><p>用 params 入参</p>\n</li>\n<li><p>数据传递方式：通过 URL 形式参数传递，拼接在请求地址上</p>\n</li>\n<li><p>GET 请求是否可以设置  Content-Type？</p>\n<ul>\n<li><p>可以设置，但通常没有意义，因为 GET 请求的请求体通常为空。</p>\n</li>\n<li><p>如果强行设置  Content-Type，浏览器和服务器可能会忽略它。</p>\n<p><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/get.png\"></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2、post-请求：\"><a href=\"#2、post-请求：\" class=\"headerlink\" title=\"2、post 请求：\"></a>2、post 请求：</h3><p>（1）用 data 传参，data：普通对象、FormData 表单对象</p>\n<p>（2）在前端开发中，发送 POST 请求时，正确设置 Content-Type 是非常重要的，因为它告诉服务器请求体的数据格式。</p>\n<ul>\n<li><code>application/json</code> 发送 JSON 格式的数据</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">submitCollectRecordDetail</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> data = &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">sessionId</span>: <span class=\"string\">&#x27;xzdfsd&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">languageCode</span>: <span class=\"string\">&#x27;CH&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">itemCode</span>: <span class=\"string\">&#x27;AMC&#x27;</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"title function_\">request</span>(&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">url</span>: <span class=\"string\">&#x27;/apiGlobal/submitCollectRecordDetail&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">method</span>: <span class=\"string\">&#x27;post&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">data</span>: data,</span><br><span class=\"line\">\t\t<span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/josn;charset=UTF-8&#x27;</span>,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/json1.png\"><br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/json2.png\"><br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/json3.png\"></p>\n<ul>\n<li><code>application/x-www-form-urlencoded</code> 发送表单数据，键值对格式【<code>URLSearchParams</code>】 key1&#x3D;value1&amp;key2&#x3D;value2</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">submitCollectRecordDetail</span>(<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">\tdata = &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">sessionId</span>: store.<span class=\"property\">state</span>.<span class=\"property\">MyToken</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">languageCode</span>: store.<span class=\"property\">state</span>.<span class=\"property\">lKey</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">itemCode</span>: store.<span class=\"property\">state</span>.<span class=\"property\">itemCode</span>,</span><br><span class=\"line\">\t\t...data,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tdata = <span class=\"keyword\">new</span> <span class=\"title class_\">URLSearchParams</span>(data).<span class=\"title function_\">toString</span>()</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"title function_\">request</span>(&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">url</span>: <span class=\"string\">&#x27;/apiGlobal/submitCollectRecordDetail&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">method</span>: <span class=\"string\">&#x27;post&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">data</span>: data,</span><br><span class=\"line\">\t\t<span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/x-www-form-urlencoded;charset=UTF-8&#x27;</span>,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/urlencoded1.png\"><br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/urlencoded2.png\"><br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/urlencoded3.png\"></p>\n<ul>\n<li><code>multipart/form-data</code> 发送表单数据，支持文件上传</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">submitCollectRecordDetail</span>(<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">\tdata = &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">sessionId</span>: store.<span class=\"property\">state</span>.<span class=\"property\">MyToken</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">languageCode</span>: store.<span class=\"property\">state</span>.<span class=\"property\">lKey</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">itemCode</span>: store.<span class=\"property\">state</span>.<span class=\"property\">itemCode</span>,</span><br><span class=\"line\">\t\t...data,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> obj = <span class=\"keyword\">new</span> <span class=\"title class_\">FormData</span>()</span><br><span class=\"line\">\t<span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(data).<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">key</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\tobj.<span class=\"title function_\">append</span>(key, data[key])</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"title function_\">request</span>(&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">url</span>: <span class=\"string\">&#x27;/apiGlobal/submitCollectRecordDetail&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">method</span>: <span class=\"string\">&#x27;post&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">data</span>: obj,</span><br><span class=\"line\">\t\t<span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;multipart/form-data&#x27;</span>,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/formdata1.png\"><br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/formdata2.png\"><br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/formdata3.png\"></p>\n<h4 id=\"注意事项：\"><a href=\"#注意事项：\" class=\"headerlink\" title=\"注意事项：\"></a>注意事项：</h4><ul>\n<li><p><code>multipart/form-data</code>  的  Content-Type：<br>使用  FormData  时，不要手动设置  Content-Type，浏览器会自动添加正确的  Content-Type  和边界（boundary）。</p>\n</li>\n<li><p>字符编码：如果需要指定字符编码，可以在  Content-Type  中添加  charset<br>例如：<code>Content-Type: application/json;charset=UTF-8</code></p>\n</li>\n<li><p>CORS 请求：<br>如果跨域请求，确保服务器支持  Content-Type，并在响应头中设置  <code>Access-Control-Allow-Headers</code></p>\n</li>\n<li><p>Postman 中看数据：<br>Get 请求，params 入参，在 params 中查看数据<br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/params.png\"><br>Post 请求，data 入参，在 body 中查看数据，还有数据格式(Content-Type 决定数据格式)<br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/bodyData.png\"></p>\n</li>\n</ul>\n"},{"title":"forEach不能直接支持异步等待?","date":"2025-07-14T03:59:44.000Z","comments":1,"_content":"\n#### forEach 的设计是同步执行回调函数：\n  - 不会等待 Promise 解决\n  - 会立即执行所有回调（即使回调中包含异步操作）\n  - 没有内置机制来处理异步操作的完成\n\n```javascript\n// delay是返回Promise的延迟函数\nconst delay = (times) => {\n    return new Promise((resolve, rejected) => {\n        setTimeout(() => {\n            resolve()\n        }, times)\n    })\n}\n```\n\n##### 示例对比：\n1. 原始异步 forEach（不按顺序）\n```javascript\n[1, 2, 3].forEach(async (item) => {\n  await delay(1000)\n  console.log(item)\n})\nprocess() // 会几乎同时输出1, 2, 3\n```\n2. 修改后的同步执行版本\n```javascript\nasync function process() {\n  for (const item of [1, 2, 3]) {\n    await delay(1000)\n    console.log(item)\n  }\n}\nprocess() // 会每隔1秒依次输出1, 2, 3\n```\n\n#### 注意事项\n+ 顺序执行异步操作会显著增加总执行时间\n+ 如果不需要顺序执行，Promise.all 可能是更好的选择\n+ 在 Node.js 10+ 中，可以使用 for await...of 语法\n+ 选择哪种方法取决于你的具体需求，但通常 for...of 循环是最清晰易读的解决方案","source":"_posts/forEach不能直接支持异步等待.md","raw":"---\ntitle: forEach不能直接支持异步等待?\ndate: 2025-07-14 11:59:44\ntags:\n  - forEach\n  - async/await\ncomments: true\n---\n\n#### forEach 的设计是同步执行回调函数：\n  - 不会等待 Promise 解决\n  - 会立即执行所有回调（即使回调中包含异步操作）\n  - 没有内置机制来处理异步操作的完成\n\n```javascript\n// delay是返回Promise的延迟函数\nconst delay = (times) => {\n    return new Promise((resolve, rejected) => {\n        setTimeout(() => {\n            resolve()\n        }, times)\n    })\n}\n```\n\n##### 示例对比：\n1. 原始异步 forEach（不按顺序）\n```javascript\n[1, 2, 3].forEach(async (item) => {\n  await delay(1000)\n  console.log(item)\n})\nprocess() // 会几乎同时输出1, 2, 3\n```\n2. 修改后的同步执行版本\n```javascript\nasync function process() {\n  for (const item of [1, 2, 3]) {\n    await delay(1000)\n    console.log(item)\n  }\n}\nprocess() // 会每隔1秒依次输出1, 2, 3\n```\n\n#### 注意事项\n+ 顺序执行异步操作会显著增加总执行时间\n+ 如果不需要顺序执行，Promise.all 可能是更好的选择\n+ 在 Node.js 10+ 中，可以使用 for await...of 语法\n+ 选择哪种方法取决于你的具体需求，但通常 for...of 循环是最清晰易读的解决方案","slug":"forEach不能直接支持异步等待","published":1,"updated":"2025-07-17T08:15:13.393Z","layout":"post","photos":[],"_id":"cmd8k9ch10007a8ncby1scqat","content":"<h4 id=\"forEach-的设计是同步执行回调函数：\"><a href=\"#forEach-的设计是同步执行回调函数：\" class=\"headerlink\" title=\"forEach 的设计是同步执行回调函数：\"></a>forEach 的设计是同步执行回调函数：</h4><ul>\n<li>不会等待 Promise 解决</li>\n<li>会立即执行所有回调（即使回调中包含异步操作）</li>\n<li>没有内置机制来处理异步操作的完成</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// delay是返回Promise的延迟函数</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">delay</span> = (<span class=\"params\">times</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, rejected</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"title function_\">resolve</span>()</span><br><span class=\"line\">        &#125;, times)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"示例对比：\"><a href=\"#示例对比：\" class=\"headerlink\" title=\"示例对比：\"></a>示例对比：</h5><ol>\n<li>原始异步 forEach（不按顺序）</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].<span class=\"title function_\">forEach</span>(<span class=\"title function_\">async</span> (item) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">await</span> <span class=\"title function_\">delay</span>(<span class=\"number\">1000</span>)</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(item)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"title function_\">process</span>() <span class=\"comment\">// 会几乎同时输出1, 2, 3</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>修改后的同步执行版本</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">process</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> item <span class=\"keyword\">of</span> [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"title function_\">delay</span>(<span class=\"number\">1000</span>)</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(item)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">process</span>() <span class=\"comment\">// 会每隔1秒依次输出1, 2, 3</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h4><ul>\n<li>顺序执行异步操作会显著增加总执行时间</li>\n<li>如果不需要顺序执行，Promise.all 可能是更好的选择</li>\n<li>在 Node.js 10+ 中，可以使用 for await…of 语法</li>\n<li>选择哪种方法取决于你的具体需求，但通常 for…of 循环是最清晰易读的解决方案</li>\n</ul>\n","excerpt":"","more":"<h4 id=\"forEach-的设计是同步执行回调函数：\"><a href=\"#forEach-的设计是同步执行回调函数：\" class=\"headerlink\" title=\"forEach 的设计是同步执行回调函数：\"></a>forEach 的设计是同步执行回调函数：</h4><ul>\n<li>不会等待 Promise 解决</li>\n<li>会立即执行所有回调（即使回调中包含异步操作）</li>\n<li>没有内置机制来处理异步操作的完成</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// delay是返回Promise的延迟函数</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">delay</span> = (<span class=\"params\">times</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, rejected</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"title function_\">resolve</span>()</span><br><span class=\"line\">        &#125;, times)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"示例对比：\"><a href=\"#示例对比：\" class=\"headerlink\" title=\"示例对比：\"></a>示例对比：</h5><ol>\n<li>原始异步 forEach（不按顺序）</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].<span class=\"title function_\">forEach</span>(<span class=\"title function_\">async</span> (item) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">await</span> <span class=\"title function_\">delay</span>(<span class=\"number\">1000</span>)</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(item)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"title function_\">process</span>() <span class=\"comment\">// 会几乎同时输出1, 2, 3</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>修改后的同步执行版本</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">process</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> item <span class=\"keyword\">of</span> [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"title function_\">delay</span>(<span class=\"number\">1000</span>)</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(item)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">process</span>() <span class=\"comment\">// 会每隔1秒依次输出1, 2, 3</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h4><ul>\n<li>顺序执行异步操作会显著增加总执行时间</li>\n<li>如果不需要顺序执行，Promise.all 可能是更好的选择</li>\n<li>在 Node.js 10+ 中，可以使用 for await…of 语法</li>\n<li>选择哪种方法取决于你的具体需求，但通常 for…of 循环是最清晰易读的解决方案</li>\n</ul>\n"},{"title":"nvm管理node","date":"2025-07-14T02:41:46.000Z","_content":"\n#### 1、安装nvm \n+ https://github.com/coreybutler/nvm-windows/releases\n![](images/nvm管理node/node.png)\n\n+ 点击`.exe`文件 -> `accept` -> nvm的安装路径 (`D:\\NVM\\nvm`) -> 创建nodejs文件放在`D:\\NVM\\nvm`下 -> 一直点击`next`安装完成\n\n#### 2、给该文件添加这两行命令\nnode_mirror: https://npm.taobao.org/mirrors/node/\nnpm_mirror: https://npm.taobao.org/mirrors/npm/\n![](images/nvm管理node/nvms1.png)\n![](images/nvm管理node/nvms2.png)\n\n#### 3、配置环境变量\n![](images/nvm管理node/path1.png)\n\n#### 4、测试一下\n```javascript\n  nvm -v  // 查看当前版本\n  nvm --config \n  nvm ls // 查看已安装的node版本\n  nvm install 版本号  // 下载对应node版本, nvm install 16.16.0\n  nvm use 版本号 // 切换node版本, nvm use 16.16.0\n  nvm on  // 开启nvm\n  nvm off  // 关闭nvm\n  nvm list available  // 查看node所有可以下载的版本\n  node -v  // 查看node版本\n```\n\n#### Tips: 如果原本电脑已安装某个版本的nodejs\n* 在安装nvm会检测是否安装某个版本的nodejs, 并提示该版本是否需要被nvm管理，如果选择是，该node的安装路径会自动变到对应的nvm安装目录下\n![](images/nvm管理node/nvms3.png)\n* 当 \"`nvm install node版本`\" 时报错，可以改一下node镜像\n![](images/nvm管理node/path2.png)\n\n","source":"_posts/nvm管理node.md","raw":"---\ntitle: nvm管理node\ndate: 2025-07-14 10:41:46\ntags: nvm\n---\n\n#### 1、安装nvm \n+ https://github.com/coreybutler/nvm-windows/releases\n![](images/nvm管理node/node.png)\n\n+ 点击`.exe`文件 -> `accept` -> nvm的安装路径 (`D:\\NVM\\nvm`) -> 创建nodejs文件放在`D:\\NVM\\nvm`下 -> 一直点击`next`安装完成\n\n#### 2、给该文件添加这两行命令\nnode_mirror: https://npm.taobao.org/mirrors/node/\nnpm_mirror: https://npm.taobao.org/mirrors/npm/\n![](images/nvm管理node/nvms1.png)\n![](images/nvm管理node/nvms2.png)\n\n#### 3、配置环境变量\n![](images/nvm管理node/path1.png)\n\n#### 4、测试一下\n```javascript\n  nvm -v  // 查看当前版本\n  nvm --config \n  nvm ls // 查看已安装的node版本\n  nvm install 版本号  // 下载对应node版本, nvm install 16.16.0\n  nvm use 版本号 // 切换node版本, nvm use 16.16.0\n  nvm on  // 开启nvm\n  nvm off  // 关闭nvm\n  nvm list available  // 查看node所有可以下载的版本\n  node -v  // 查看node版本\n```\n\n#### Tips: 如果原本电脑已安装某个版本的nodejs\n* 在安装nvm会检测是否安装某个版本的nodejs, 并提示该版本是否需要被nvm管理，如果选择是，该node的安装路径会自动变到对应的nvm安装目录下\n![](images/nvm管理node/nvms3.png)\n* 当 \"`nvm install node版本`\" 时报错，可以改一下node镜像\n![](images/nvm管理node/path2.png)\n\n","slug":"nvm管理node","published":1,"updated":"2025-07-17T08:15:13.393Z","comments":1,"layout":"post","photos":[],"_id":"cmd8k9ch10008a8nc9aca5sh1","content":"<h4 id=\"1、安装nvm\"><a href=\"#1、安装nvm\" class=\"headerlink\" title=\"1、安装nvm\"></a>1、安装nvm</h4><ul>\n<li><p><a href=\"https://github.com/coreybutler/nvm-windows/releases\">https://github.com/coreybutler/nvm-windows/releases</a><br><img src=\"/images/nvm%E7%AE%A1%E7%90%86node/node.png\"></p>\n</li>\n<li><p>点击<code>.exe</code>文件 -&gt; <code>accept</code> -&gt; nvm的安装路径 (<code>D:\\NVM\\nvm</code>) -&gt; 创建nodejs文件放在<code>D:\\NVM\\nvm</code>下 -&gt; 一直点击<code>next</code>安装完成</p>\n</li>\n</ul>\n<h4 id=\"2、给该文件添加这两行命令\"><a href=\"#2、给该文件添加这两行命令\" class=\"headerlink\" title=\"2、给该文件添加这两行命令\"></a>2、给该文件添加这两行命令</h4><p>node_mirror: <a href=\"https://npm.taobao.org/mirrors/node/\">https://npm.taobao.org/mirrors/node/</a><br>npm_mirror: <a href=\"https://npm.taobao.org/mirrors/npm/\">https://npm.taobao.org/mirrors/npm/</a><br><img src=\"/images/nvm%E7%AE%A1%E7%90%86node/nvms1.png\"><br><img src=\"/images/nvm%E7%AE%A1%E7%90%86node/nvms2.png\"></p>\n<h4 id=\"3、配置环境变量\"><a href=\"#3、配置环境变量\" class=\"headerlink\" title=\"3、配置环境变量\"></a>3、配置环境变量</h4><p><img src=\"/images/nvm%E7%AE%A1%E7%90%86node/path1.png\"></p>\n<h4 id=\"4、测试一下\"><a href=\"#4、测试一下\" class=\"headerlink\" title=\"4、测试一下\"></a>4、测试一下</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm -v  <span class=\"comment\">// 查看当前版本</span></span><br><span class=\"line\">nvm --config </span><br><span class=\"line\">nvm ls <span class=\"comment\">// 查看已安装的node版本</span></span><br><span class=\"line\">nvm install 版本号  <span class=\"comment\">// 下载对应node版本, nvm install 16.16.0</span></span><br><span class=\"line\">nvm use 版本号 <span class=\"comment\">// 切换node版本, nvm use 16.16.0</span></span><br><span class=\"line\">nvm on  <span class=\"comment\">// 开启nvm</span></span><br><span class=\"line\">nvm off  <span class=\"comment\">// 关闭nvm</span></span><br><span class=\"line\">nvm list available  <span class=\"comment\">// 查看node所有可以下载的版本</span></span><br><span class=\"line\">node -v  <span class=\"comment\">// 查看node版本</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Tips-如果原本电脑已安装某个版本的nodejs\"><a href=\"#Tips-如果原本电脑已安装某个版本的nodejs\" class=\"headerlink\" title=\"Tips: 如果原本电脑已安装某个版本的nodejs\"></a>Tips: 如果原本电脑已安装某个版本的nodejs</h4><ul>\n<li>在安装nvm会检测是否安装某个版本的nodejs, 并提示该版本是否需要被nvm管理，如果选择是，该node的安装路径会自动变到对应的nvm安装目录下<br><img src=\"/images/nvm%E7%AE%A1%E7%90%86node/nvms3.png\"></li>\n<li>当 “<code>nvm install node版本</code>“ 时报错，可以改一下node镜像<br><img src=\"/images/nvm%E7%AE%A1%E7%90%86node/path2.png\"></li>\n</ul>\n","excerpt":"","more":"<h4 id=\"1、安装nvm\"><a href=\"#1、安装nvm\" class=\"headerlink\" title=\"1、安装nvm\"></a>1、安装nvm</h4><ul>\n<li><p><a href=\"https://github.com/coreybutler/nvm-windows/releases\">https://github.com/coreybutler/nvm-windows/releases</a><br><img src=\"/images/nvm%E7%AE%A1%E7%90%86node/node.png\"></p>\n</li>\n<li><p>点击<code>.exe</code>文件 -&gt; <code>accept</code> -&gt; nvm的安装路径 (<code>D:\\NVM\\nvm</code>) -&gt; 创建nodejs文件放在<code>D:\\NVM\\nvm</code>下 -&gt; 一直点击<code>next</code>安装完成</p>\n</li>\n</ul>\n<h4 id=\"2、给该文件添加这两行命令\"><a href=\"#2、给该文件添加这两行命令\" class=\"headerlink\" title=\"2、给该文件添加这两行命令\"></a>2、给该文件添加这两行命令</h4><p>node_mirror: <a href=\"https://npm.taobao.org/mirrors/node/\">https://npm.taobao.org/mirrors/node/</a><br>npm_mirror: <a href=\"https://npm.taobao.org/mirrors/npm/\">https://npm.taobao.org/mirrors/npm/</a><br><img src=\"/images/nvm%E7%AE%A1%E7%90%86node/nvms1.png\"><br><img src=\"/images/nvm%E7%AE%A1%E7%90%86node/nvms2.png\"></p>\n<h4 id=\"3、配置环境变量\"><a href=\"#3、配置环境变量\" class=\"headerlink\" title=\"3、配置环境变量\"></a>3、配置环境变量</h4><p><img src=\"/images/nvm%E7%AE%A1%E7%90%86node/path1.png\"></p>\n<h4 id=\"4、测试一下\"><a href=\"#4、测试一下\" class=\"headerlink\" title=\"4、测试一下\"></a>4、测试一下</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm -v  <span class=\"comment\">// 查看当前版本</span></span><br><span class=\"line\">nvm --config </span><br><span class=\"line\">nvm ls <span class=\"comment\">// 查看已安装的node版本</span></span><br><span class=\"line\">nvm install 版本号  <span class=\"comment\">// 下载对应node版本, nvm install 16.16.0</span></span><br><span class=\"line\">nvm use 版本号 <span class=\"comment\">// 切换node版本, nvm use 16.16.0</span></span><br><span class=\"line\">nvm on  <span class=\"comment\">// 开启nvm</span></span><br><span class=\"line\">nvm off  <span class=\"comment\">// 关闭nvm</span></span><br><span class=\"line\">nvm list available  <span class=\"comment\">// 查看node所有可以下载的版本</span></span><br><span class=\"line\">node -v  <span class=\"comment\">// 查看node版本</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Tips-如果原本电脑已安装某个版本的nodejs\"><a href=\"#Tips-如果原本电脑已安装某个版本的nodejs\" class=\"headerlink\" title=\"Tips: 如果原本电脑已安装某个版本的nodejs\"></a>Tips: 如果原本电脑已安装某个版本的nodejs</h4><ul>\n<li>在安装nvm会检测是否安装某个版本的nodejs, 并提示该版本是否需要被nvm管理，如果选择是，该node的安装路径会自动变到对应的nvm安装目录下<br><img src=\"/images/nvm%E7%AE%A1%E7%90%86node/nvms3.png\"></li>\n<li>当 “<code>nvm install node版本</code>“ 时报错，可以改一下node镜像<br><img src=\"/images/nvm%E7%AE%A1%E7%90%86node/path2.png\"></li>\n</ul>\n"},{"title":"git远程项目迁移","date":"2025-07-11T10:22:52.000Z","_content":"\n#### 1、克隆待迁移的git项目到本地\n``` bash\ngit clone --mirror https://xxx/xxx/oldProject.git\n```\n\n#### 2、进入本地克隆的git项目  cd oldProject.git\n\n\n#### 3、在gitlib上创建对应的空项目，https://xxx/xxx/newProject.git\n\n#### 4、在oldProject.git 命令窗口下\n+ 执行下方命令修改git地址为新项目地址：\n```bash\ngit remote set-url origin https://xxx/xxx/newProject.git\n```\n+ 推送已修改git到新地址，完成迁移\n```bash\ngit push -f origin --mirror\n```\n\n#### 5、可以删除旧项目和oldProject.git","source":"_posts/git远程项目迁移.md","raw":"---\ntitle: git远程项目迁移\ndate: 2025-07-11 18:22:52\ntags: git\n---\n\n#### 1、克隆待迁移的git项目到本地\n``` bash\ngit clone --mirror https://xxx/xxx/oldProject.git\n```\n\n#### 2、进入本地克隆的git项目  cd oldProject.git\n\n\n#### 3、在gitlib上创建对应的空项目，https://xxx/xxx/newProject.git\n\n#### 4、在oldProject.git 命令窗口下\n+ 执行下方命令修改git地址为新项目地址：\n```bash\ngit remote set-url origin https://xxx/xxx/newProject.git\n```\n+ 推送已修改git到新地址，完成迁移\n```bash\ngit push -f origin --mirror\n```\n\n#### 5、可以删除旧项目和oldProject.git","slug":"git远程项目迁移","published":1,"updated":"2025-07-17T10:23:25.587Z","comments":1,"layout":"post","photos":[],"_id":"cmd8k9ch2000aa8nc3pgx7jqu","content":"<h4 id=\"1、克隆待迁移的git项目到本地\"><a href=\"#1、克隆待迁移的git项目到本地\" class=\"headerlink\" title=\"1、克隆待迁移的git项目到本地\"></a>1、克隆待迁移的git项目到本地</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> --mirror https://xxx/xxx/oldProject.git</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2、进入本地克隆的git项目-cd-oldProject-git\"><a href=\"#2、进入本地克隆的git项目-cd-oldProject-git\" class=\"headerlink\" title=\"2、进入本地克隆的git项目  cd oldProject.git\"></a>2、进入本地克隆的git项目  cd oldProject.git</h4><h4 id=\"3、在gitlib上创建对应的空项目，https-xxx-xxx-newProject-git\"><a href=\"#3、在gitlib上创建对应的空项目，https-xxx-xxx-newProject-git\" class=\"headerlink\" title=\"3、在gitlib上创建对应的空项目，https://xxx/xxx/newProject.git\"></a>3、在gitlib上创建对应的空项目，<a href=\"https://xxx/xxx/newProject.git\">https://xxx/xxx/newProject.git</a></h4><h4 id=\"4、在oldProject-git-命令窗口下\"><a href=\"#4、在oldProject-git-命令窗口下\" class=\"headerlink\" title=\"4、在oldProject.git 命令窗口下\"></a>4、在oldProject.git 命令窗口下</h4><ul>\n<li>执行下方命令修改git地址为新项目地址：</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote set-url origin https://xxx/xxx/newProject.git</span><br></pre></td></tr></table></figure>\n<ul>\n<li>推送已修改git到新地址，完成迁移</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -f origin --mirror</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5、可以删除旧项目和oldProject-git\"><a href=\"#5、可以删除旧项目和oldProject-git\" class=\"headerlink\" title=\"5、可以删除旧项目和oldProject.git\"></a>5、可以删除旧项目和oldProject.git</h4>","excerpt":"","more":"<h4 id=\"1、克隆待迁移的git项目到本地\"><a href=\"#1、克隆待迁移的git项目到本地\" class=\"headerlink\" title=\"1、克隆待迁移的git项目到本地\"></a>1、克隆待迁移的git项目到本地</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> --mirror https://xxx/xxx/oldProject.git</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2、进入本地克隆的git项目-cd-oldProject-git\"><a href=\"#2、进入本地克隆的git项目-cd-oldProject-git\" class=\"headerlink\" title=\"2、进入本地克隆的git项目  cd oldProject.git\"></a>2、进入本地克隆的git项目  cd oldProject.git</h4><h4 id=\"3、在gitlib上创建对应的空项目，https-xxx-xxx-newProject-git\"><a href=\"#3、在gitlib上创建对应的空项目，https-xxx-xxx-newProject-git\" class=\"headerlink\" title=\"3、在gitlib上创建对应的空项目，https://xxx/xxx/newProject.git\"></a>3、在gitlib上创建对应的空项目，<a href=\"https://xxx/xxx/newProject.git\">https://xxx/xxx/newProject.git</a></h4><h4 id=\"4、在oldProject-git-命令窗口下\"><a href=\"#4、在oldProject-git-命令窗口下\" class=\"headerlink\" title=\"4、在oldProject.git 命令窗口下\"></a>4、在oldProject.git 命令窗口下</h4><ul>\n<li>执行下方命令修改git地址为新项目地址：</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote set-url origin https://xxx/xxx/newProject.git</span><br></pre></td></tr></table></figure>\n<ul>\n<li>推送已修改git到新地址，完成迁移</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -f origin --mirror</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5、可以删除旧项目和oldProject-git\"><a href=\"#5、可以删除旧项目和oldProject-git\" class=\"headerlink\" title=\"5、可以删除旧项目和oldProject.git\"></a>5、可以删除旧项目和oldProject.git</h4>"},{"title":"我的第一篇博客","date":"2025-07-11T06:55:44.000Z","_content":"\n## 微前端\n微前端：（拆分与整合）将大型前端应用按业务模块（如电商的商品、订单、支付模块）拆分为子应用，每个子应用可使用不同的技术栈（Vue、React 等）独立开发/部署/维护/更新[模块化性/独立性]，最后整合成这个大项目。\n\n## 前端\n独立的一个项目，浏览器端的网页、单页应用（SPA）、移动端 H5 页面等。\n\n## 大前端\n（跨平台开发）大前端是前端技术的扩展与延伸，指通过一套前端技术栈（主要是 JS/TS）覆盖更多平台和场景，打破传统前端仅局限于浏览器的边界，如：uniapp跨平台开发框架。\n","source":"_posts/我的第一篇博客.md","raw":"---\ntitle: 我的第一篇博客\ndate: 2025-07-11 14:55:44\ntags:\n---\n\n## 微前端\n微前端：（拆分与整合）将大型前端应用按业务模块（如电商的商品、订单、支付模块）拆分为子应用，每个子应用可使用不同的技术栈（Vue、React 等）独立开发/部署/维护/更新[模块化性/独立性]，最后整合成这个大项目。\n\n## 前端\n独立的一个项目，浏览器端的网页、单页应用（SPA）、移动端 H5 页面等。\n\n## 大前端\n（跨平台开发）大前端是前端技术的扩展与延伸，指通过一套前端技术栈（主要是 JS/TS）覆盖更多平台和场景，打破传统前端仅局限于浏览器的边界，如：uniapp跨平台开发框架。\n","slug":"我的第一篇博客","published":1,"updated":"2025-07-17T08:15:13.394Z","comments":1,"layout":"post","photos":[],"_id":"cmd8k9ch3000ba8nch9vb5e1n","content":"<h2 id=\"微前端\"><a href=\"#微前端\" class=\"headerlink\" title=\"微前端\"></a>微前端</h2><p>微前端：（拆分与整合）将大型前端应用按业务模块（如电商的商品、订单、支付模块）拆分为子应用，每个子应用可使用不同的技术栈（Vue、React 等）独立开发&#x2F;部署&#x2F;维护&#x2F;更新[模块化性&#x2F;独立性]，最后整合成这个大项目。</p>\n<h2 id=\"前端\"><a href=\"#前端\" class=\"headerlink\" title=\"前端\"></a>前端</h2><p>独立的一个项目，浏览器端的网页、单页应用（SPA）、移动端 H5 页面等。</p>\n<h2 id=\"大前端\"><a href=\"#大前端\" class=\"headerlink\" title=\"大前端\"></a>大前端</h2><p>（跨平台开发）大前端是前端技术的扩展与延伸，指通过一套前端技术栈（主要是 JS&#x2F;TS）覆盖更多平台和场景，打破传统前端仅局限于浏览器的边界，如：uniapp跨平台开发框架。</p>\n","excerpt":"","more":"<h2 id=\"微前端\"><a href=\"#微前端\" class=\"headerlink\" title=\"微前端\"></a>微前端</h2><p>微前端：（拆分与整合）将大型前端应用按业务模块（如电商的商品、订单、支付模块）拆分为子应用，每个子应用可使用不同的技术栈（Vue、React 等）独立开发&#x2F;部署&#x2F;维护&#x2F;更新[模块化性&#x2F;独立性]，最后整合成这个大项目。</p>\n<h2 id=\"前端\"><a href=\"#前端\" class=\"headerlink\" title=\"前端\"></a>前端</h2><p>独立的一个项目，浏览器端的网页、单页应用（SPA）、移动端 H5 页面等。</p>\n<h2 id=\"大前端\"><a href=\"#大前端\" class=\"headerlink\" title=\"大前端\"></a>大前端</h2><p>（跨平台开发）大前端是前端技术的扩展与延伸，指通过一套前端技术栈（主要是 JS&#x2F;TS）覆盖更多平台和场景，打破传统前端仅局限于浏览器的边界，如：uniapp跨平台开发框架。</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cmd8k9cgu0000a8nchfpm56ul","tag_id":"cmd8k9cgy0001a8ncc1430st6","_id":"cmd8k9cgz0004a8nc25w8f1us"},{"post_id":"cmd8k9cgu0000a8nchfpm56ul","tag_id":"cmd8k9cgz0002a8nc08fba81c","_id":"cmd8k9ch00005a8nchp3pbxfz"},{"post_id":"cmd8k9cgu0000a8nchfpm56ul","tag_id":"cmd8k9cgz0003a8nc6lmfac7c","_id":"cmd8k9ch00006a8ncdlbi6kci"},{"post_id":"cmd8k9ch10007a8ncby1scqat","tag_id":"cmd8k9ch20009a8ncem9w2ycw","_id":"cmd8k9ch4000ea8ncb3jle0cf"},{"post_id":"cmd8k9ch10007a8ncby1scqat","tag_id":"cmd8k9ch3000ca8nc69aid5nr","_id":"cmd8k9ch4000fa8nc9nzn89zm"},{"post_id":"cmd8k9ch10008a8nc9aca5sh1","tag_id":"cmd8k9ch3000da8nc4dxvdhk0","_id":"cmd8k9ch4000ha8nc7r5l5kgb"},{"post_id":"cmd8k9ch2000aa8nc3pgx7jqu","tag_id":"cmd8k9ch4000ga8nc6jb06iif","_id":"cmd8k9ch4000ia8nc96i7c6w1"}],"Tag":[{"name":"axios","_id":"cmd8k9cgy0001a8ncc1430st6"},{"name":"get","_id":"cmd8k9cgz0002a8nc08fba81c"},{"name":"post","_id":"cmd8k9cgz0003a8nc6lmfac7c"},{"name":"forEach","_id":"cmd8k9ch20009a8ncem9w2ycw"},{"name":"async/await","_id":"cmd8k9ch3000ca8nc69aid5nr"},{"name":"nvm","_id":"cmd8k9ch3000da8nc4dxvdhk0"},{"name":"git","_id":"cmd8k9ch4000ga8nc6jb06iif"}]}}