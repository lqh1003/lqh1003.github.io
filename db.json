{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/butterfly-icon.png","path":"img/butterfly-icon.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/error-page.png","path":"img/error-page.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1},{"_id":"source/theme_images/archive_top_img.jpg","path":"theme_images/archive_top_img.jpg","modified":0,"renderable":0},{"_id":"source/theme_images/avatar.jpg","path":"theme_images/avatar.jpg","modified":0,"renderable":0},{"_id":"source/theme_images/bg.jpg","path":"theme_images/bg.jpg","modified":0,"renderable":0},{"_id":"source/theme_images/default_top_img.jpg","path":"theme_images/default_top_img.jpg","modified":0,"renderable":0},{"_id":"source/theme_images/f.ico","path":"theme_images/f.ico","modified":0,"renderable":0},{"_id":"source/theme_images/footer.jpg","path":"theme_images/footer.jpg","modified":0,"renderable":0},{"_id":"source/theme_images/index_top_img.jpg","path":"theme_images/index_top_img.jpg","modified":0,"renderable":0},{"_id":"source/images/compoents下组件自动注册/cover.jpg","path":"images/compoents下组件自动注册/cover.jpg","modified":0,"renderable":0},{"_id":"source/images/compoents下组件自动注册/vite_com.png","path":"images/compoents下组件自动注册/vite_com.png","modified":0,"renderable":0},{"_id":"source/images/compoents下组件自动注册/vue_com.png","path":"images/compoents下组件自动注册/vue_com.png","modified":0,"renderable":0},{"_id":"source/images/Event事件循环/cover.jpg","path":"images/Event事件循环/cover.jpg","modified":0,"renderable":0},{"_id":"source/images/css切割属性clip-path/cover.jpg","path":"images/css切割属性clip-path/cover.jpg","modified":0,"renderable":0},{"_id":"source/images/get-post入参格式/bodyData.png","path":"images/get-post入参格式/bodyData.png","modified":0,"renderable":0},{"_id":"source/images/get-post入参格式/cover.jpg","path":"images/get-post入参格式/cover.jpg","modified":0,"renderable":0},{"_id":"source/images/get-post入参格式/formdata1.png","path":"images/get-post入参格式/formdata1.png","modified":0,"renderable":0},{"_id":"source/images/get-post入参格式/formdata2.png","path":"images/get-post入参格式/formdata2.png","modified":0,"renderable":0},{"_id":"source/images/get-post入参格式/get.png","path":"images/get-post入参格式/get.png","modified":0,"renderable":0},{"_id":"source/images/get-post入参格式/json1.png","path":"images/get-post入参格式/json1.png","modified":0,"renderable":0},{"_id":"source/images/get-post入参格式/json3.png","path":"images/get-post入参格式/json3.png","modified":0,"renderable":0},{"_id":"source/images/get-post入参格式/formdata3.png","path":"images/get-post入参格式/formdata3.png","modified":0,"renderable":0},{"_id":"source/images/get-post入参格式/json2.png","path":"images/get-post入参格式/json2.png","modified":0,"renderable":0},{"_id":"source/images/get-post入参格式/params.png","path":"images/get-post入参格式/params.png","modified":0,"renderable":0},{"_id":"source/images/get-post入参格式/urlencoded1.png","path":"images/get-post入参格式/urlencoded1.png","modified":0,"renderable":0},{"_id":"source/images/get-post入参格式/urlencoded2.png","path":"images/get-post入参格式/urlencoded2.png","modified":0,"renderable":0},{"_id":"source/images/get-post入参格式/urlencoded3.png","path":"images/get-post入参格式/urlencoded3.png","modified":0,"renderable":0},{"_id":"source/images/git远程项目迁移/cover.jpg","path":"images/git远程项目迁移/cover.jpg","modified":0,"renderable":0},{"_id":"source/images/input文件上传/cover.jpg","path":"images/input文件上传/cover.jpg","modified":0,"renderable":0},{"_id":"source/images/nvm管理node/cover.jpg","path":"images/nvm管理node/cover.jpg","modified":0,"renderable":0},{"_id":"source/images/nvm管理node/nvms1.png","path":"images/nvm管理node/nvms1.png","modified":0,"renderable":0},{"_id":"source/images/nvm管理node/node.png","path":"images/nvm管理node/node.png","modified":0,"renderable":0},{"_id":"source/images/nvm管理node/nvms2.png","path":"images/nvm管理node/nvms2.png","modified":0,"renderable":0},{"_id":"source/images/nvm管理node/nvms3.png","path":"images/nvm管理node/nvms3.png","modified":0,"renderable":0},{"_id":"source/images/nvm管理node/path2.png","path":"images/nvm管理node/path2.png","modified":0,"renderable":0},{"_id":"source/images/setTimeout与闭包/cover.jpg","path":"images/setTimeout与闭包/cover.jpg","modified":0,"renderable":0},{"_id":"source/images/接入Google地图/cover.jpg","path":"images/接入Google地图/cover.jpg","modified":0,"renderable":0},{"_id":"source/images/接入Google地图/latlng.png","path":"images/接入Google地图/latlng.png","modified":0,"renderable":0},{"_id":"source/images/接入Google地图/maps.png","path":"images/接入Google地图/maps.png","modified":0,"renderable":0},{"_id":"source/images/搭建个人博客/cover.jpg","path":"images/搭建个人博客/cover.jpg","modified":0,"renderable":0},{"_id":"source/images/搭建个人博客/firstBlog.png","path":"images/搭建个人博客/firstBlog.png","modified":0,"renderable":0},{"_id":"source/images/搭建个人博客/gitRuning.png","path":"images/搭建个人博客/gitRuning.png","modified":0,"renderable":0},{"_id":"source/images/搭建个人博客/gitRuning0.png","path":"images/搭建个人博客/gitRuning0.png","modified":0,"renderable":0},{"_id":"source/images/搭建个人博客/gitlab-ci-yml.png","path":"images/搭建个人博客/gitlab-ci-yml.png","modified":0,"renderable":0},{"_id":"source/images/搭建个人博客/hexo_init.png","path":"images/搭建个人博客/hexo_init.png","modified":0,"renderable":0},{"_id":"source/images/搭建个人博客/hexo_themes.png","path":"images/搭建个人博客/hexo_themes.png","modified":0,"renderable":0},{"_id":"source/images/词云图/cover.jpg","path":"images/词云图/cover.jpg","modified":0,"renderable":0},{"_id":"source/images/词云图/result.png","path":"images/词云图/result.png","modified":1,"renderable":0},{"_id":"source/images/nvm管理node/path1.png","path":"images/nvm管理node/path1.png","modified":0,"renderable":0},{"_id":"source/images/微信小程序实战/准备工作/accountManage.png","path":"images/微信小程序实战/准备工作/accountManage.png","modified":0,"renderable":0},{"_id":"source/images/微信小程序实战/准备工作/cover.jpg","path":"images/微信小程序实战/准备工作/cover.jpg","modified":0,"renderable":0},{"_id":"source/images/微信小程序实战/准备工作/confirmInfo.png","path":"images/微信小程序实战/准备工作/confirmInfo.png","modified":0,"renderable":0},{"_id":"source/images/微信小程序实战/准备工作/createProject0.png","path":"images/微信小程序实战/准备工作/createProject0.png","modified":0,"renderable":0},{"_id":"source/images/微信小程序实战/准备工作/createProject1.png","path":"images/微信小程序实战/准备工作/createProject1.png","modified":0,"renderable":0},{"_id":"source/images/微信小程序实战/准备工作/createProject2.png","path":"images/微信小程序实战/准备工作/createProject2.png","modified":0,"renderable":0},{"_id":"source/images/微信小程序实战/准备工作/infoRecord.png","path":"images/微信小程序实战/准备工作/infoRecord.png","modified":0,"renderable":0},{"_id":"source/images/微信小程序实战/准备工作/preview.png","path":"images/微信小程序实战/准备工作/preview.png","modified":0,"renderable":0},{"_id":"source/images/微信小程序实战/准备工作/release.png","path":"images/微信小程序实战/准备工作/release.png","modified":0,"renderable":0},{"_id":"source/images/微信小程序实战/准备工作/registerAccount.png","path":"images/微信小程序实战/准备工作/registerAccount.png","modified":0,"renderable":0},{"_id":"source/images/微信小程序实战/准备工作/release1.png","path":"images/微信小程序实战/准备工作/release1.png","modified":0,"renderable":0},{"_id":"source/images/微信小程序实战/准备工作/updateVersion.png","path":"images/微信小程序实战/准备工作/updateVersion.png","modified":0,"renderable":0},{"_id":"source/images/微信小程序实战/准备工作/updateVersion2.png","path":"images/微信小程序实战/准备工作/updateVersion2.png","modified":0,"renderable":0},{"_id":"source/images/微信小程序实战/准备工作/uploadcode.png","path":"images/微信小程序实战/准备工作/uploadcode.png","modified":0,"renderable":0},{"_id":"source/images/微信小程序实战/准备工作/wx_git_account.png","path":"images/微信小程序实战/准备工作/wx_git_account.png","modified":0,"renderable":0},{"_id":"source/images/微信小程序实战/准备工作/wx_git_link_origin.png","path":"images/微信小程序实战/准备工作/wx_git_link_origin.png","modified":0,"renderable":0},{"_id":"source/images/微信小程序实战/准备工作/wx_git_magage.png","path":"images/微信小程序实战/准备工作/wx_git_magage.png","modified":0,"renderable":0},{"_id":"source/images/微信小程序实战/准备工作/wx_git_newproject.png","path":"images/微信小程序实战/准备工作/wx_git_newproject.png","modified":0,"renderable":0},{"_id":"source/images/微信小程序实战/准备工作/wx_git_password.png","path":"images/微信小程序实战/准备工作/wx_git_password.png","modified":0,"renderable":0},{"_id":"source/images/微信小程序实战/准备工作/wx_git_push_origin.png","path":"images/微信小程序实战/准备工作/wx_git_push_origin.png","modified":0,"renderable":0},{"_id":"source/images/微信小程序实战/准备工作/wx_git_push_origin2.png","path":"images/微信小程序实战/准备工作/wx_git_push_origin2.png","modified":0,"renderable":0},{"_id":"source/images/微信小程序实战/准备工作/wxgzpt.png","path":"images/微信小程序实战/准备工作/wxgzpt.png","modified":0,"renderable":0},{"_id":"source/images/微信小程序实战/准备工作/wx_git_version.png","path":"images/微信小程序实战/准备工作/wx_git_version.png","modified":0,"renderable":0},{"_id":"source/images/微信小程序实战/准备工作/wxtool.png","path":"images/微信小程序实战/准备工作/wxtool.png","modified":0,"renderable":0},{"_id":"source/images/微信小程序实战/准备工作/wxtooldowload.png","path":"images/微信小程序实战/准备工作/wxtooldowload.png","modified":0,"renderable":0},{"_id":"source/images/微信小程序实战/准备工作/wxtoolexe.png","path":"images/微信小程序实战/准备工作/wxtoolexe.png","modified":0,"renderable":0},{"_id":"source/images/微信小程序实战/准备工作/wxtoolexeinstall.png","path":"images/微信小程序实战/准备工作/wxtoolexeinstall.png","modified":0,"renderable":0},{"_id":"source/images/微信小程序实战/准备工作/wxtype4.png","path":"images/微信小程序实战/准备工作/wxtype4.png","modified":0,"renderable":0},{"_id":"source/images/SEO优化/cover.jpg","path":"images/SEO优化/cover.jpg","modified":1,"renderable":0},{"_id":"source/images/js判断数据类型/cover.jpg","path":"images/js判断数据类型/cover.jpg","modified":1,"renderable":0},{"_id":"source/images/前端性能优化/cover.jpg","path":"images/前端性能优化/cover.jpg","modified":1,"renderable":0},{"_id":"source/images/前端实现导出xlsx表格/cover.jpg","path":"images/前端实现导出xlsx表格/cover.jpg","modified":1,"renderable":0},{"_id":"source/images/前端实现导出xlsx表格/exportFile2.png","path":"images/前端实现导出xlsx表格/exportFile2.png","modified":1,"renderable":0},{"_id":"source/images/前端实现导出xlsx表格/exportFile1.png","path":"images/前端实现导出xlsx表格/exportFile1.png","modified":1,"renderable":0},{"_id":"source/images/瀑布流布局/chrome.png","path":"images/瀑布流布局/chrome.png","modified":1,"renderable":0},{"_id":"source/images/瀑布流布局/waterfall1.png","path":"images/瀑布流布局/waterfall1.png","modified":1,"renderable":0},{"_id":"source/images/瀑布流布局/cover.jpg","path":"images/瀑布流布局/cover.jpg","modified":1,"renderable":0},{"_id":"source/images/瀑布流布局/waterfall2.png","path":"images/瀑布流布局/waterfall2.png","modified":1,"renderable":0},{"_id":"source/images/瀑布流布局/waterfall3.png","path":"images/瀑布流布局/waterfall3.png","modified":1,"renderable":0},{"_id":"source/images/瀑布流布局/waterfall4.png","path":"images/瀑布流布局/waterfall4.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/_data/link.yml","hash":"67d1f1fd07008129efdff968a7631b7a5d4eaaa3","modified":1753762302816},{"_id":"source/_posts/2025-07-11-git远程项目迁移.md","hash":"335543eb2b9efe6171ec38d573c1c2aa22283241","modified":1753673899543},{"_id":"source/_posts/2025-07-11-我的第一篇博客.md","hash":"e9b78c3e89b46e86dbd777120f648b11fe2bc64a","modified":1753254888532},{"_id":"source/_posts/2025-07-14-forEach不能直接支持异步等待.md","hash":"e05b63b2334b96ced2f19439140459965d3e0436","modified":1753684650874},{"_id":"source/_posts/2025-07-16-get-post入参格式.md","hash":"8864b69e36d119413597ab1adc8682542d921e11","modified":1753955975014},{"_id":"source/_posts/2025-07-23-js判断数据类型.md","hash":"8e9e290edab2adcdfc0f2a41780c3c8275bbc475","modified":1757750955103},{"_id":"source/_posts/2025-07-23-搭建个人博客.md","hash":"c749ec3b8578d8c951cb3e0553312313bed63684","modified":1757750955103},{"_id":"source/_posts/2025-07-24-compoents下组件自动注册.md","hash":"aec91154bc1c9399f6239345686256b9bf358f4e","modified":1757750955104},{"_id":"source/_posts/2025-07-14-nvm管理node.md","hash":"e58aa91a7423939918736619e2bc5beca4c80f53","modified":1757750955102},{"_id":"source/_posts/2025-07-28-setTimeout与闭包.md","hash":"d3a3a9648b9324908d2746aa08443299be21b641","modified":1753687325400},{"_id":"source/_posts/2025-07-29-Event事件循环.md","hash":"b512b6a5734e5b2f52d06a80950c3ee13323d8b3","modified":1757750955104},{"_id":"source/_posts/2025-07-30-接入Google地图.md","hash":"a44b3d61c07eb52c96bdb03a38fbe8cc683fc651","modified":1757750955105},{"_id":"source/_posts/2025-07-31-【微信小程序实战】之准备工作详解.md","hash":"a98ef50946ec9e9572116da12828de9566eb6308","modified":1757750955105},{"_id":"source/_posts/2025-08-07-css切割属性clip-path.md","hash":"5a7f16a3b7e6682fcfa024aed4037ec52a470572","modified":1757750955105},{"_id":"source/_posts/2025-08-12-input文件上传.md","hash":"f4aa4fa6c731c57e9fa433edcfcaefa63c894768","modified":1757750955106},{"_id":"source/_posts/2025-08-21-词云图.md","hash":"cba61d5a11de82477100e652416343457c52c6b4","modified":1757750955106},{"_id":"source/about/index.md","hash":"9b5013c0a666139b862d27aebce196d2fd676125","modified":1757750955108},{"_id":"source/categories/index.md","hash":"91653726c77213655425c02b8c66175e9e343091","modified":1757750955108},{"_id":"source/css/custom.css","hash":"ee8dfda661cc8cb5734eaa684ca1bfead8f8df5a","modified":1754018592556},{"_id":"source/tags/index.md","hash":"10bc979e0dd44a234c42a200d94ecdc8e78bf4d0","modified":1757750955503},{"_id":"source/link/index.md","hash":"ed7d7db2fc1dc21c2eeb65af7b7c0583ded3f4d6","modified":1757750955502},{"_id":"source/theme_images/archive_top_img.jpg","hash":"95d5f11cc991be77a59aca0a01a67e989e1b7413","modified":1753323319157},{"_id":"source/images/compoents下组件自动注册/vite_com.png","hash":"0bfb6a7eb3bc08d5c23bf2be40ddd4f2274275a6","modified":1753340543573},{"_id":"source/images/Event事件循环/cover.jpg","hash":"c40de14fe01eff147bb88bdd7e59ee417d286c38","modified":1753676640941},{"_id":"source/images/css切割属性clip-path/cover.jpg","hash":"24b0ff6e7b53e06f6332c808588e8d3ccb26edb0","modified":1754553188377},{"_id":"source/images/get-post入参格式/cover.jpg","hash":"db5b4b65aa21b94b17221a0cbe39e6eeacb866f0","modified":1753684650876},{"_id":"source/images/setTimeout与闭包/cover.jpg","hash":"e07386cca1c57d264b72238ab93efe831d212f3b","modified":1753673188298},{"_id":"source/images/搭建个人博客/cover.jpg","hash":"ad51e1244168f82abf7dbb9a54d15b3a6217abf9","modified":1670416535069},{"_id":"source/images/接入Google地图/cover.jpg","hash":"c684bcdf54625e3cafa39f0154238604fcc69b03","modified":1753845595719},{"_id":"source/images/搭建个人博客/gitlab-ci-yml.png","hash":"846233b88f3ea5e836a20d58fdfa7c8eb83f3763","modified":1753252376055},{"_id":"source/images/nvm管理node/path1.png","hash":"370c3f1e2b766325349a380eb0a86982d639e710","modified":1752740113446},{"_id":"source/images/微信小程序实战/准备工作/cover.jpg","hash":"7a1f15b314cc9998b338de9aa035cd33036647ea","modified":1753948413237},{"_id":"source/images/微信小程序实战/准备工作/wxtoolexeinstall.png","hash":"1c59bdf99db0e6785a01a0689e8a35a6ecb63846","modified":1753943021851},{"_id":"source/theme_images/avatar.jpg","hash":"0d1ad2b6763489ffba0ce86c10ca3c94eef4051a","modified":1753265945561},{"_id":"source/theme_images/index_top_img.jpg","hash":"fd37dfb1269e1c7f771c5f7b203194b88be218bd","modified":1753264101655},{"_id":"source/images/git远程项目迁移/cover.jpg","hash":"a27322ef944313c5f1b43c745b4166747c607a94","modified":1753341978643},{"_id":"source/theme_images/f.ico","hash":"fdc2c6f9a8a07f9f5f1e009ba389f9436c2f1081","modified":1753266722997},{"_id":"source/theme_images/footer.jpg","hash":"fe19b156f7575fa85f57e2e5504f28a1ed0d332b","modified":1753264208305},{"_id":"source/images/compoents下组件自动注册/cover.jpg","hash":"aa625942db12ad7881670cfda51e76b6aa1178e6","modified":1753342186612},{"_id":"source/images/nvm管理node/cover.jpg","hash":"2270e49eb94f05b86c18fa8055bf0fce4d315399","modified":1753259513213},{"_id":"source/images/词云图/cover.jpg","hash":"ce2285b26f5e64b0bc2cf5fde46afcc7b3c780c1","modified":1755769658113},{"_id":"source/theme_images/default_top_img.jpg","hash":"6d086040d7b10582e2995729e765b4e8f63cc4da","modified":1746694831829},{"_id":"source/images/compoents下组件自动注册/vue_com.png","hash":"6b3ab66352d03d06f5c91aeb155ca5b894f94b20","modified":1753340588693},{"_id":"source/images/nvm管理node/nvms2.png","hash":"caa851110bc539dc8ffb7a3543e80f600d4ba8ba","modified":1752740113444},{"_id":"node_modules/hexo-theme-butterfly/LICENSE","hash":"c8bc7df08db9dd3b39c2c2259a163a36cf2f6808","modified":1752828272656},{"_id":"node_modules/hexo-theme-butterfly/README.md","hash":"e1b9096ae0c4e5ef0a911aec05dbad4a3aae3173","modified":1752828272707},{"_id":"node_modules/hexo-theme-butterfly/README_CN.md","hash":"92e45255b8725f0a00450c88fcfd51ec61e1db67","modified":1752828272706},{"_id":"node_modules/hexo-theme-butterfly/_config.yml","hash":"e7e2aebec046dbeb5c8bddc9c3533a1c1f06b1ae","modified":1752828272837},{"_id":"node_modules/hexo-theme-butterfly/plugins.yml","hash":"97a55ae0f4784ca80c7862da36da22b54be41ae5","modified":1752828272843},{"_id":"node_modules/hexo-theme-butterfly/package.json","hash":"a394861e4dd3c8ac366be62af0f4ad752f921ef3","modified":1752828272705},{"_id":"node_modules/hexo-theme-butterfly/.github/FUNDING.yml","hash":"da5e77f5e0cdb7e11b36546fb6796d10e3dfbe5d","modified":1752828272842},{"_id":"node_modules/hexo-theme-butterfly/languages/default.yml","hash":"2e3beaf7fb585d83c3e7cd1cca51573f42935f3c","modified":1752828272839},{"_id":"node_modules/hexo-theme-butterfly/languages/ja.yml","hash":"bde04a89febd0dbf320eac4da4ecd81624f2f29f","modified":1752828272842},{"_id":"node_modules/hexo-theme-butterfly/languages/en.yml","hash":"2e3beaf7fb585d83c3e7cd1cca51573f42935f3c","modified":1752828272840},{"_id":"node_modules/hexo-theme-butterfly/languages/zh-CN.yml","hash":"3cdeb46ad36f3b76703b4f39c72a8aa1a15425cb","modified":1752828272848},{"_id":"node_modules/hexo-theme-butterfly/languages/ko.yml","hash":"70d6df7cf6472799faf4778405b332101ea822c1","modified":1752828272843},{"_id":"node_modules/hexo-theme-butterfly/languages/zh-HK.yml","hash":"c93e510c7b119173226f3b0afb87c5f553f6eea8","modified":1752828272849},{"_id":"node_modules/hexo-theme-butterfly/languages/zh-TW.yml","hash":"b59fedd9e1e65112d6a90dc7f55179085d0f1a6a","modified":1752828272849},{"_id":"node_modules/hexo-theme-butterfly/layout/archive.pug","hash":"bc77220dfc269b8faad0930e1a4142ebf68165e5","modified":1752828272727},{"_id":"node_modules/hexo-theme-butterfly/layout/category.pug","hash":"a7e9805a781e34e38d27462e6ce2a5821c34bb9f","modified":1752828272742},{"_id":"node_modules/hexo-theme-butterfly/layout/page.pug","hash":"7ce2a49c6c41847de4ccea377ade116339984434","modified":1752828272774},{"_id":"node_modules/hexo-theme-butterfly/layout/index.pug","hash":"a93004cc8ec8050df603d32a6e6e02cd96fd9875","modified":1752828272764},{"_id":"node_modules/hexo-theme-butterfly/layout/post.pug","hash":"65c4a49c65c3fc4d9dc88b9791a75710c698c3a1","modified":1752828272776},{"_id":"node_modules/hexo-theme-butterfly/layout/tag.pug","hash":"ca5333bd262cb58c195c844b593a0eed0c721766","modified":1752828272787},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"6e0f9470b18bd37d4891282ac73d61676b040e8c","modified":1752828272841},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"63ad2249ad09fb3fe21bd5ff9adefb304a7ab24a","modified":1752828272838},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"10ce05c8dbde09f53bdabe40b5388de9ccc71a31","modified":1752828272838},{"_id":"node_modules/hexo-theme-butterfly/.github/workflows/publish.yml","hash":"e320b40c051bae1549156cd5ea4a51383cf78598","modified":1752828272844},{"_id":"node_modules/hexo-theme-butterfly/.github/workflows/stale.yml","hash":"4040c76547e270aaf184e9b219a44ca41bbb1b9f","modified":1752828272846},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/additional-js.pug","hash":"e1611a30df80cbe7ecf60be2e0cdd816ecabdd03","modified":1752828272722},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head.pug","hash":"1d11e334b22dbbedcb0f751f9ee9789d4416605e","modified":1752828272756},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/footer.pug","hash":"d30413aa2a17bf31e4084f1096523ead7f2a6bf1","modified":1752828272753},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/layout.pug","hash":"e5e6c05a621483b3542f2884e8ba45e84b1e973a","modified":1752828272767},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/pagination.pug","hash":"062137cb4d078b27680da1ae28d524a9c963eebc","modified":1752828272774},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/rightside.pug","hash":"3617840416f26078117f760579fb544dce07e1bc","modified":1752828272782},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/sidebar.pug","hash":"3e65b7bf6bccccbba7e15349f0a44f15c64c5b5e","modified":1752828272785},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/404.js","hash":"039fc75f363d79669b0b2177d929cdff6f2ef7a4","modified":1752828272668},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/cdn.js","hash":"7864ba45716c51aef8d8b04fd4bc212e0008ce3b","modified":1752828272673},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/comment.js","hash":"7b1b16e1e8e08245a345764616956be50487eb53","modified":1752828272675},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/init.js","hash":"ce68e84a9ccfcf91100befbaa9afc392a0cd93bb","modified":1752828272680},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/merge_config.js","hash":"cead7891fbc0a53ffca4d68124e68efa855354a5","modified":1752828272688},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/stylus.js","hash":"bac639c404588ea62e601ef0bcd368c3bd0119af","modified":1752828272700},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/welcome.js","hash":"f59e10305fef59ea3e62a7395106c0927582879d","modified":1752828272705},{"_id":"node_modules/hexo-theme-butterfly/scripts/filters/post_lazyload.js","hash":"b23108d29fff3e32384d8689c8bcd2ab306a1ae7","modified":1752828272691},{"_id":"node_modules/hexo-theme-butterfly/scripts/filters/random_cover.js","hash":"20a6ebf63439501a4b3fc81e7a2a2ea5d103bace","modified":1752828272694},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/aside_archives.js","hash":"d2878483c160999240e969a34e3ddc51a780821b","modified":1752828272671},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/getArchiveLength.js","hash":"bf77635e920eaf52bceebc95f87c7c87a7ca8038","modified":1752828272677},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/page.js","hash":"b9af69d8998d748178348d93a19daccff0550c56","modified":1752828272690},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/aside_categories.js","hash":"0cdf781a8c14d7b50d309e69f282ec7b178804bb","modified":1752828272672},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/related_post.js","hash":"950b7d0966429bf0f9e6c5e1161e50e545e320b4","modified":1752828272695},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/button.js","hash":"2f44e1b3ccd170b256eae178299d6fa933a8d490","modified":1752828272673},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/chartjs.js","hash":"195ba802d7e8406c155124a9c939a2318f82938b","modified":1752828272674},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/flink.js","hash":"25eefe10189caf3910a0e5d5b2f2043ae9255531","modified":1752828272676},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/gallery.js","hash":"fa3d0a64f7fce4aff7928d4ddd95548978ba001c","modified":1752828272676},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/series.js","hash":"45367c4ce827329867dbcc750ec125da9ccb2cfd","modified":1752828272696},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/inlineImg.js","hash":"89c6c78d2db43b190055d5690741a79bab4f3e7e","modified":1752828272682},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/hide.js","hash":"f02fb085a88a2c0c82aeffacc24e1b71c74bd7c0","modified":1752828272679},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/label.js","hash":"cf0bc17d0180231167cc6aa8a00fc64f198cb9f9","modified":1752828272683},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/note.js","hash":"e68d8d21f3a86e3646907a3685550ee20e8d4a9f","modified":1752828272690},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/mermaid.js","hash":"50d8d8fac5c5b6e26317028895d7d82a2cf46606","modified":1752828272689},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/score.js","hash":"f589fb6646bd17cf12d77a9b251dd614e1c8b899","modified":1752828272696},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/tabs.js","hash":"3c486b149e28edd1a06843f05a5c355000991b82","modified":1752828272701},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/series.js","hash":"40bc9a065e3a1423e0e66f4911e00713ca9f5e9e","modified":1752828272697},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/inject_head_js.js","hash":"00c5742ad1c75b3c5684d02ffc6a1921399e5376","modified":1752828272682},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/timeline.js","hash":"176804f07567aa80f1ed95897a968a996b155dec","modified":1752828272702},{"_id":"node_modules/hexo-theme-butterfly/source/css/index.styl","hash":"b13d96924a5534bff91d75566b196ac87b4fac22","modified":1752828272821},{"_id":"node_modules/hexo-theme-butterfly/source/css/var.styl","hash":"d1eec577074ab7b262182885576135bf1896e12c","modified":1752828272835},{"_id":"node_modules/hexo-theme-butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1752828272667},{"_id":"node_modules/hexo-theme-butterfly/source/img/error-page.png","hash":"d2519710498a871ca3e913c57e2ba20a805b6430","modified":1752828272718},{"_id":"node_modules/hexo-theme-butterfly/source/img/favicon.ico","hash":"455ac256580bf31a45813dbbdb87219bfc8bfb04","modified":1752828272665},{"_id":"node_modules/hexo-theme-butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1752828272660},{"_id":"node_modules/hexo-theme-butterfly/source/js/main.js","hash":"5a52047b8520f79864d5a4ee2379a29751aead23","modified":1752828272686},{"_id":"node_modules/hexo-theme-butterfly/source/js/tw_cn.js","hash":"fdb5482d04a75bd79946ad1ed291d281d0e9362d","modified":1752828272703},{"_id":"node_modules/hexo-theme-butterfly/scripts/common/postDesc.js","hash":"ba98361b9d469076bfb045e5ff42eaf764a38fb1","modified":1752828272692},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/analytics.pug","hash":"c2156c77a011b20fafd34f03ca073397c21b099f","modified":1752828272726},{"_id":"node_modules/hexo-theme-butterfly/source/js/utils.js","hash":"b2ed9937fd00459c0e569db709a26cf8738ab18d","modified":1752828272704},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/Open_Graph.pug","hash":"e93a36d3c29b5a02c7f26a23f96e1f84b063cbe8","modified":1752828272772},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/config.pug","hash":"9ea75b06f19bf356f340f4a3fc1bdc0713cfe445","modified":1752828272746},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/pwa.pug","hash":"83ed05ef1e39f2ee70c3fba2cf96e488d8ffec66","modified":1752828272778},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/preconnect.pug","hash":"1e1a69aa2cbda2e621c741b3802093244b3cc04e","modified":1752828272776},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/site_verification.pug","hash":"5168caadc4cf541f5d6676a9c5e8ae47a948f9ad","modified":1752828272785},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/config_site.pug","hash":"56a3c32de1a15627ff38c67f1131cdd6ec5ac924","modified":1752828272745},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/structured_data.pug","hash":"8ef72cd688999bf3915be6724c12700a1e2724d9","modified":1752828272786},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/index.pug","hash":"44331c9db74b281b5c5c41439d3407a9076df1a1","modified":1752828272757},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/google_adsense.pug","hash":"f29123e603cbbcc6ce277d4e8f600ba67498077c","modified":1752828272756},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/menu_item.pug","hash":"733184f88e3a586a5fcc9d193ad500556b6c8eed","modified":1752828272770},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/social.pug","hash":"e2d31e0f450ad42c47f7ee96375799342bf2f19b","modified":1752828272786},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/post-info.pug","hash":"7d799c4694adb6e265e3f4b975d7f7f6a7021a17","modified":1752828272776},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/loading/fullpage-loading.pug","hash":"a2f7d69ca7ec58f24fe7d4e04ae21d5b62b01567","modified":1752828272754},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/nav.pug","hash":"f478a82ba4c15d4f6a5db38eca5c61f7054fa71d","modified":1752828272772},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/loading/pace.pug","hash":"9d2d539555bab495959b9df734ed5c43a9f9e5a9","modified":1752828272773},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/mixins/article-sort.pug","hash":"ef7afe0df7a3746744ac8185da7163b7406120ca","modified":1752828272734},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/loading/index.pug","hash":"d76ce71ba106e350670c021a3dcae57547d01830","modified":1752828272757},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/mixins/indexPostUI.pug","hash":"f3389fa9ae4fa32e3c16573286583bc3023e57ad","modified":1752828272765},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/404.pug","hash":"15d32c511e4875066fcbe9cb84c3ada07b5a7c41","modified":1752828272720},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1752828272741},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/default-page.pug","hash":"efb40388e37cca0b5e7c3c66e811a42f8d32c910","modified":1752828272747},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/shuoshuo.pug","hash":"b2423cfc57a5e3a0e1112ff7c18d5c5c720d89d5","modified":1752828272784},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/tags.pug","hash":"79ad31eb72a9e14007770b18a426406a25315b38","modified":1752828272787},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/post/outdate-notice.pug","hash":"b7ce9484bc5c97ea6154f0b78fb9b8951fafedbd","modified":1752828272773},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/post/reward.pug","hash":"db92f25ff3fd061882f81bf74ca560ff66983a0c","modified":1752828272781},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/flink.pug","hash":"6b0fa5f048aca8e9cbe56978301af918cf7ac34a","modified":1752828272752},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/post/post-copyright.pug","hash":"b96c232e5178d927987791d9ae386dd83679535a","modified":1752828272775},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/aplayer.pug","hash":"ed79fef5b5025415ea12eaed970f3fe7f6ef9596","modified":1752828272727},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/effect.pug","hash":"43014bfc63583d3ee8808d526dd165848c0ed52f","modified":1752828272751},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/pjax.pug","hash":"d29ee6a07e6716c0dc1d4533c87b19b6076fefd3","modified":1752828272775},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/prismjs.pug","hash":"88f979a0b1a19eeb0db229247833bf9c6865c3b9","modified":1752828272778},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/subtitle.pug","hash":"236c3ce26dd76e80b04d457789475c42da5ac0c8","modified":1752828272787},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/umami_analytics.pug","hash":"bc35a1552d26ecdeeadbf06300078dbb5128a6e5","modified":1752828272791},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_ad.pug","hash":"a8312b527493dabbadbb1280760168d3bc909a3b","modified":1752828272735},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_announcement.pug","hash":"21e019bdc3b1e796bb00976bb29af2d51f873624","modified":1752828272735},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_archives.pug","hash":"73d33b6930e7944187a4b3403daf25d27077a2dd","modified":1752828272735},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_author.pug","hash":"1aba8aa7cd767dc96879d13a13b4c8ceb9023233","modified":1752828272736},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_bottom_self.pug","hash":"1dba77d250eeebfb6e293d504352c7e9ea31980b","modified":1752828272737},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_newest_comment.pug","hash":"d8753772889b5d0f4d15639ed6af5e91e53b1d03","modified":1752828272738},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_categories.pug","hash":"66e383b4ef374951eb87dd1bf4cdb7a667193fb5","modified":1752828272738},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_post_series.pug","hash":"e0bb72fa0ce15964b11b8fe421cae3432394e35f","modified":1752828272739},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_post_toc.pug","hash":"1dd19a564320d248dbcee7f118a5b96c6466da65","modified":1752828272739},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_tags.pug","hash":"842b772a387b576550fa127030e1c2e9bf65716d","modified":1752828272740},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_recent_post.pug","hash":"bb842d2aa6469d65bf06af1372f0a19a9e4ef44c","modified":1752828272739},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_top_self.pug","hash":"7b5ae404a1205546b7de4be42291315cf918f2b3","modified":1752828272740},{"_id":"node_modules/hexo-theme-butterfly/source/css/_global/function.styl","hash":"d12340a7df4601b9a23f070e16645861aeb3bb0a","modified":1752828272813},{"_id":"node_modules/hexo-theme-butterfly/source/css/_global/index.styl","hash":"4fcb8222b9548e22f7b76f12d33e3698240cbae0","modified":1752828272819},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_webinfo.pug","hash":"fcddd80cdeb6aa81f342cd9f0102302f6ba087a8","modified":1752828272741},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight.styl","hash":"67062d597408068e4a59e95851e98fed34b745da","modified":1752828272818},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/index.pug","hash":"45f620cd87b9ef2aa9d1e024e697ed6b4eecff34","modified":1752828272763},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/aside.styl","hash":"ba174889e770ae9f6683379b9eae9d8c94253080","modified":1752828272803},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/theme.styl","hash":"a51edfd3e499e7d38c32241c40e8e4d371efca73","modified":1752828272833},{"_id":"node_modules/hexo-theme-butterfly/source/css/_mode/readmode.styl","hash":"ad66212554468b7067590308ed4cf40524fea662","modified":1752828272826},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/chat.styl","hash":"4cc02bcbaa4a1933a82a9ea57a603fe2d059fc77","modified":1752828272804},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/comments.styl","hash":"fbfce4d67cacd1df22fb73d89d008693f59d9d91","modified":1752828272805},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/footer.styl","hash":"5692bcf8929f7ef12b10d860da6cb90ca55752c0","modified":1752828272810},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/loading.styl","hash":"f0b01bbf321c2c24fdccaee367dd9fd448031a72","modified":1752828272823},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/pagination.styl","hash":"7d7554573c005399bc8c2264a85896d2d51be1e1","modified":1752828272825},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/head.styl","hash":"7536c44e78115559a996d0384adec38b78d8dc25","modified":1752828272814},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/post.styl","hash":"543eaf9c7df7e0db841e5946ee5f9082c3c46290","modified":1752828272826},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/reward.styl","hash":"d9cdf564a822a585e67fd5bac8573ba87eeb3743","modified":1752828272828},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/relatedposts.styl","hash":"ef8e8549fe7ad4b99793844a93b4a89f77f417d5","modified":1752828272827},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/rightside.styl","hash":"a0f5835f04358122e8b1d38dd3e8da09a1b5b431","modified":1752828272829},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/third-party.styl","hash":"0af7c8754f04bdd9a02a14d880774753bd2e35ee","modified":1752828272834},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/algolia.styl","hash":"d8a8275a68a1421c4c09b604cf78bea16c1d0463","modified":1752828272800},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/index.styl","hash":"6c4cbdadd9a49029fe0c59e29808d873e5b6b6ee","modified":1752828272820},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/404.styl","hash":"205ccc7d0ec6ce1193b46bc0c9ce0385594581fb","modified":1752828272799},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/sidebar.styl","hash":"084dc4dfb41f55e237a9d6cf8c2f5dba729b83be","modified":1752828272831},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/local-search.styl","hash":"1f2b86df86df81c3a59377b29102314ffc73dfa6","modified":1752828272823},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/archives.styl","hash":"5abe5480d83ff8b452a780a484d50a44091475bf","modified":1752828272801},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/categories.styl","hash":"c4cda7b0c99015df29ce00fdfddd2f7679653754","modified":1752828272804},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/common.styl","hash":"dcff804c4c237e1e908481b44c1ac4e39ac0da34","modified":1752828272805},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/flink.styl","hash":"1f8d715faf3b91b53426e38195c0920afb3bfa1c","modified":1752828272809},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/homepage.styl","hash":"fc26e980fedde31644ebf878967f66ef9ba32be2","modified":1752828272818},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/tags.styl","hash":"7543bb688876a946538d66b991c71b94b5216277","modified":1752828272833},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/button.styl","hash":"de8437a058a315d14d7e7034066f095b7b3ed4b4","modified":1752828272803},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/shuoshuo.styl","hash":"79bb1d9a27822ed5675d1e52f5dbd0e2f5d5010a","modified":1752828272831},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/hexo.styl","hash":"985b183db7b7bfd8f9bdb60494549fb7f850348b","modified":1752828272815},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/gallery.styl","hash":"30d1f809efd252ed0233d96d4374efd2b01d2292","modified":1752828272814},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/hide.styl","hash":"d27dbccaf3de1c9158d19e4fd49a25953cb5778d","modified":1752828272816},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/inlineImg.styl","hash":"3be8d0a75e7cc96548667cae0cb6a474279bd0b5","modified":1752828272821},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/label.styl","hash":"216f52fefc2274b542b549d8470503e6f1a308fb","modified":1752828272822},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/series.styl","hash":"0657169849bc4bf4d93b5492ade040c8f58c1901","modified":1752828272830},{"_id":"node_modules/hexo-theme-butterfly/source/css/_mode/darkmode.styl","hash":"4c9849df9c68d892c7df0ca28123aeb0dc9dc424","modified":1752828272806},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/note.styl","hash":"4929382bd60788d34752a66e2fe764ef797a72a0","modified":1752828272824},{"_id":"node_modules/hexo-theme-butterfly/source/css/_third-party/normalize.min.css","hash":"8549829fb7d3c21cd9e119884962e8c463a4a267","modified":1752828272657},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/local-search.js","hash":"a2b783230a9143de69004cfc914d9f55e6fc1660","modified":1752828272684},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/abcjs/abcjs.pug","hash":"7df4d27cf9e576c6b9c1e4f76a100a41749ca8bb","modified":1752828272721},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/abcjs/index.pug","hash":"f0a90d8e39915a74b16ef22e851f179415cd7eaa","modified":1752828272758},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/timeline.styl","hash":"e846ddaef494d46cdfa2379deacfe74fa1cc5264","modified":1752828272834},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"b03ee8625149191f9d5d057bbc9824b68d8dd0c4","modified":1752828272728},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"cbfbcf34a24d21ba2b21cf9eedb76f4c3c563c5a","modified":1752828272752},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"d6fff5a7f84c8b09f282f9ddc0020a68a8aac9ea","modified":1752828272749},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/tabs.styl","hash":"3a88eedcb694da79e92581ce50cb1a430b1fb615","modified":1752828272832},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"846cabae287ae31b3bbfac3da022475713dd5ecc","modified":1752828272758},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"716dc463fe4ef5112e7018ed60804125fdfa5cad","modified":1752828272779},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"7884883ec15792f7e54daacb3c62b851dde2b66a","modified":1752828272793},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"be45b522286bbc64724341f23a5056ad24d3f796","modified":1752828272789},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"fd2320ee25507bb8ef49f932c2d170586b44ea4d","modified":1752828272796},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/chatra.pug","hash":"5b29badecbbe828112c001156023fc0566045cf6","modified":1752828272743},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/crisp.pug","hash":"24d094fd917947c0ca7492fa094328b1a183b873","modified":1752828272747},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/tidio.pug","hash":"62466b251052cae609b6369d4cb4b6a85320757d","modified":1752828272788},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/disqus.pug","hash":"f2ea5249b3e6670f6c8c77868f4f42c502e43830","modified":1752828272749},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/artalk.pug","hash":"89c63a5f0c0ab6314de7158fbc8fcbc84997fc55","modified":1752828272730},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/index.pug","hash":"e8438941085def0591a72fc9b0d705dbf107f54f","modified":1752828272759},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"8af585e6d6f73ee57114eefad574dc6e8ea9f570","modified":1752828272751},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"c81fa7d8a5cb96d1ae07bfa8c46b84a58161add1","modified":1752828272750},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/giscus.pug","hash":"592b2251db6c1abeb8b0eebe3b2e6d9aa0dec445","modified":1752828272754},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"58914c58a190e3bc0aa37cb581e77e442b563501","modified":1752828272755},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/livere.pug","hash":"9d84a681289175dec75a85f301d2fc9ce1b2bb7a","modified":1752828272768},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/index.pug","hash":"332b532bafbaf369fde840883b77e5a23d050a39","modified":1752828272759},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/js.pug","hash":"3abbaaa4ea575c45b3cebffd40bad1acc6ffce84","modified":1752828272766},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"53d99831f29aeb2e336ed1407d79590041f77002","modified":1752828272791},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/remark42.pug","hash":"ea9766439b6b1936306916a8b08d2681afbc8ea9","modified":1752828272780},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/valine.pug","hash":"24f18b0c67803210d53abbf9c1d454c000b06eee","modified":1752828272793},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/utterances.pug","hash":"30a7d157890de69deab28baa47fb7bb28b040efd","modified":1752828272792},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/katex.pug","hash":"b83db9fa64d42a0bfd97efb660e09be3f166a144","modified":1752828272766},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/mathjax.pug","hash":"db2f4fff80a1166476ea76ae004aa186df11bad3","modified":1752828272769},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/mermaid.pug","hash":"ca2fc5928ca292f29fd8333c73733344994096fb","modified":1752828272771},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"187302dbc916852ff2fdf47061e272c061611dda","modified":1752828272731},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/waline.pug","hash":"e2bf15357485cd502414b3b20f5b1f762a2fd014","modified":1752828272797},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/common.pug","hash":"27fa75affebc6e84a487c62bceff783bde595256","modified":1752828272744},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"72e2970b23570e308f8af5d8ba8e5e3321d01bbf","modified":1752828272755},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"fa4b4194749d05f7249f365f2b89c0281057ce54","modified":1752828272748},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/index.pug","hash":"af66d13204030d47537b9e31a6173e63589ce7ff","modified":1752828272760},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"34edfebf0cace0852806be774910ccb0e0914650","modified":1752828272781},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"a7c07dbc1e970a5b247091458e1ee9b144a3366d","modified":1752828272760},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"d376ec17fb19fcdcf0d2ad71330190146d3af879","modified":1752828272794},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/chartjs.pug","hash":"732eb1118ea1a73aa5c164d639097c614f8e9953","modified":1752828272742},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/algolia.pug","hash":"7f0ede1cd3fed2669c94a8e1b21bc0b183f310b8","modified":1752828272724},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/docsearch.pug","hash":"013756ff3363344987cc00fc9bd833baf193c341","modified":1752828272750},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/index.pug","hash":"f8557548d2ad8dd149c562193991c6c6cda02415","modified":1752828272761},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/local-search.pug","hash":"2622b4cf9189fa23e4a422aaf9ef272e4f2c6137","modified":1752828272768},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/addtoany.pug","hash":"f5ee1c9c8ffa4bca972d30f4de69268b8d47f052","modified":1752828272723},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/index.pug","hash":"e51e896ccb13900de38dc81cf44dc789e2418a12","modified":1752828272762},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight/diff.styl","hash":"9f02598b5e4296aec6470639d4bac4c9ac46392e","modified":1752828272808},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight/index.styl","hash":"ef52ebf1e8e751a412f9456fdaeee7d88afd9a72","modified":1752828272819},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"ec6c685080634ac46ffbea1b8f10313388888f43","modified":1752828272797},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/share-js.pug","hash":"efef352c1d122409575386bf3894dce8e87032e2","modified":1752828272783},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/index.styl","hash":"1883c91d43bff10aae55122a21e0b064b6f5c9dd","modified":1752828272820},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/diff.styl","hash":"077ec530831be1d80e93da380406b9f5abd0918a","modified":1752828272809},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"de4bb5fc2dfca368b35e4c1109c92f7abc9e2245","modified":1752828272822},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"d2e12a9fc302a4efe52c90d44896fbd73e193a1f","modified":1752828272789},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/algolia.js","hash":"7119f2f2943de71999d3dd6ba5c60cde846f114b","modified":1752828272670},{"_id":"source/images/nvm管理node/path2.png","hash":"1fac019c4c8dfa26f0c9709f151f169d93ce9809","modified":1752740113447},{"_id":"source/images/nvm管理node/nvms1.png","hash":"f169117474fb7cd1e4d920463de12d422c2b8515","modified":1752740113442},{"_id":"node_modules/hexo-theme-butterfly/source/img/butterfly-icon.png","hash":"f5dd732fed5c3bcd4aa76bac3441bac8485fb432","modified":1752828272716},{"_id":"source/images/nvm管理node/nvms3.png","hash":"0c73472eb0c85930408c73c5d54ad9de26137a6a","modified":1752740113445},{"_id":"source/images/微信小程序实战/准备工作/wxtoolexe.png","hash":"8e3599ef7b7a39a1962667cd5eb0af2b54c7857e","modified":1753943568000},{"_id":"source/images/input文件上传/cover.jpg","hash":"7bcfda6b7ad32e0701590dfd77248a989cd18c40","modified":1754993545997},{"_id":"source/images/get-post入参格式/formdata2.png","hash":"4b81f95c2973b0eee32a64b326457941728b0913","modified":1752740113406},{"_id":"source/images/get-post入参格式/json3.png","hash":"a12672497f18d3c885ec49b138baf7a634a67835","modified":1752740113422},{"_id":"source/images/微信小程序实战/准备工作/confirmInfo.png","hash":"e7301fa91592bf32d36efc57093a1dbff0ada1f5","modified":1753934565092},{"_id":"source/images/get-post入参格式/json2.png","hash":"28a202124a408fda87884e3e7d86d04b633cf486","modified":1752740113419},{"_id":"source/images/nvm管理node/node.png","hash":"39591bfcd56fce198d8869950ef82d12059e73a1","modified":1752740113439},{"_id":"source/images/get-post入参格式/get.png","hash":"e80e11cf83ec2d0fd3272a675fd08f80cfae09f7","modified":1752740113413},{"_id":"source/images/get-post入参格式/urlencoded2.png","hash":"d84defda37236e452b69f0a37f12597b8bb205cc","modified":1752740113432},{"_id":"source/images/微信小程序实战/准备工作/wx_git_link_origin.png","hash":"3c588a118eb75ff66844f7dd99002a6cc224a149","modified":1754035833245},{"_id":"source/images/微信小程序实战/准备工作/updateVersion2.png","hash":"07219e3467808a78bfddb38971afac4fba879292","modified":1753947150008},{"_id":"source/images/微信小程序实战/准备工作/wxtype4.png","hash":"2fe853d008df517502167b0ab109045d6d8f14f1","modified":1753932035514},{"_id":"source/images/微信小程序实战/准备工作/wx_git_push_origin.png","hash":"a0304591e5373aa68164bbcd349e1cef00cd06a2","modified":1754034482035},{"_id":"source/images/微信小程序实战/准备工作/uploadcode.png","hash":"2371f1be95e93a9222d0b09be2b88c3b1364a0f7","modified":1753947072447},{"_id":"source/images/微信小程序实战/准备工作/wx_git_account.png","hash":"6c85dd97282312bac695a7ae23b12460bd296d2a","modified":1754035030363},{"_id":"source/images/微信小程序实战/准备工作/createProject0.png","hash":"38700902a8c1affdd4d437fd3077b1bd76e70910","modified":1753945794790},{"_id":"source/images/get-post入参格式/bodyData.png","hash":"9b2d1fb6ab98fbd838f92bd80f5a0881272461d1","modified":1752740113399},{"_id":"source/images/get-post入参格式/params.png","hash":"a5f99846ed6b97f347a3d3a06235a9c2c40d2bc2","modified":1752740113425},{"_id":"source/images/get-post入参格式/urlencoded3.png","hash":"39bde66360fd7ea74188183282d1ef101b851a55","modified":1752740113435},{"_id":"source/images/get-post入参格式/formdata1.png","hash":"3a13289c4f5fdd3201be8a958b38a504c2882695","modified":1752740113403},{"_id":"source/images/搭建个人博客/firstBlog.png","hash":"adfc30470aba2d295e495ea1dff37f2059c203ad","modified":1753253142482},{"_id":"source/images/微信小程序实战/准备工作/wx_git_newproject.png","hash":"16bf489341ea2b8e2cc82798a0fcda524f86e228","modified":1754034342280},{"_id":"source/images/微信小程序实战/准备工作/wxtool.png","hash":"97f955bfd2cd562e88e8a297ae40f887e270b9ec","modified":1753944776275},{"_id":"source/images/get-post入参格式/json1.png","hash":"548c6dd7378c72106e381f4c43c33f5da5831ff8","modified":1752740113417},{"_id":"source/images/get-post入参格式/urlencoded1.png","hash":"394c63d5666b1361998254a248ab155ad7fdaf84","modified":1752740113429},{"_id":"source/images/微信小程序实战/准备工作/wx_git_password.png","hash":"0a8e1f32bbcc99c315cdaee2b1f7696ea514645d","modified":1754035267277},{"_id":"source/images/get-post入参格式/formdata3.png","hash":"5fac213bafaf2106eb4d007c8295b1cee5e91f29","modified":1752740113410},{"_id":"source/images/接入Google地图/latlng.png","hash":"f321e5d88ea40854945d0cb2988c823e6fa63223","modified":1753843390922},{"_id":"source/images/微信小程序实战/准备工作/registerAccount.png","hash":"c92443abcb27369a9e4a48147513e0c152bc31b2","modified":1753934229929},{"_id":"source/images/微信小程序实战/准备工作/preview.png","hash":"8ea320a3ed28fdd1f57ee42a0febf0a25a168c45","modified":1753946358368},{"_id":"source/images/微信小程序实战/准备工作/createProject1.png","hash":"f4297ca4f7011d0b2ea0e6b47bfca828ac88ae4e","modified":1753945597008},{"_id":"source/images/微信小程序实战/准备工作/infoRecord.png","hash":"20c92036e822d8ea0ed6455a9d16b1f561c2866d","modified":1753934415787},{"_id":"source/images/搭建个人博客/gitRuning0.png","hash":"7f84efd204b134fa637d4132482fd7e963bb19ff","modified":1753253630006},{"_id":"source/images/微信小程序实战/准备工作/wxgzpt.png","hash":"fe300d0aeacaddb9320d88637cfd89337e422afe","modified":1753931997174},{"_id":"source/images/微信小程序实战/准备工作/wx_git_version.png","hash":"ca87716216278ddd64c2acbe12fcf8eaa5d5f303","modified":1754037311840},{"_id":"source/images/搭建个人博客/gitRuning.png","hash":"f58073d7ebc5ae2b336e826ac02c860d0fe03231","modified":1753253433023},{"_id":"source/images/微信小程序实战/准备工作/release1.png","hash":"306ecd3636f9fa687e92f36a3bb87450855ec59d","modified":1754044153980},{"_id":"source/images/微信小程序实战/准备工作/wx_git_magage.png","hash":"6505e5a09c9e5a666d36f18bff4c1a7399c1bbd9","modified":1754034917387},{"_id":"source/images/词云图/result.png","hash":"1f07c265bd9024dac2a140db24b5a9448e31fcb5","modified":1757750955502},{"_id":"source/images/微信小程序实战/准备工作/wxtooldowload.png","hash":"12bb85399c0186a01f5676cdcf2d222e249ee919","modified":1753935915722},{"_id":"source/images/微信小程序实战/准备工作/wx_git_push_origin2.png","hash":"9346577c8e9e9e46e2719caa1b5197046e272e73","modified":1754034706894},{"_id":"source/images/接入Google地图/maps.png","hash":"91f98f8207d8b47cdfc1dbcf2ce5b3a82062ce3a","modified":1753845080027},{"_id":"source/images/微信小程序实战/准备工作/release.png","hash":"f0ecfed270149e053da055c2cce6f2deaa932447","modified":1753947679081},{"_id":"source/images/微信小程序实战/准备工作/accountManage.png","hash":"1b35bb0e945f21eaabc89cd7eddf467e52bd7b4f","modified":1753935136998},{"_id":"source/images/微信小程序实战/准备工作/createProject2.png","hash":"e5d15fd53743f9aab4c57e6fb98b52cd466e3427","modified":1753945586459},{"_id":"source/images/搭建个人博客/hexo_init.png","hash":"1c72175012bb6751b24a98e674a9ff1fdfb2a7bc","modified":1753244342187},{"_id":"source/images/搭建个人博客/hexo_themes.png","hash":"f8a60b8e84f3c41d7ea58c030aa2a11c8ba5f75f","modified":1753254291732},{"_id":"source/theme_images/bg.jpg","hash":"1cca29a70142766ce97b99d6cf25b5a7eac499c2","modified":1753264258011},{"_id":"source/images/微信小程序实战/准备工作/updateVersion.png","hash":"ff1cce5bcd44a84ea4b587c11feadf1e3088bbf2","modified":1753947035236},{"_id":"public/css/custom.css","hash":"9eaf7fe6874b4b1a16c58e8ae8a7a2cd143dc711","modified":1755770236143},{"_id":"public/search.xml","hash":"5a6afd88617d798187bf7b5919cdc30aa77148ef","modified":1755770236143},{"_id":"public/404.html","hash":"4ca6175a492b0c5c05a700a83c904cc669f797e6","modified":1755770236143},{"_id":"public/categories/index.html","hash":"6a2f2852f5d4e7e0b5a44eca728bb7f79efc4172","modified":1755770236143},{"_id":"public/about/index.html","hash":"01d6d18d201a998b9a87d6577036c362c39a01f2","modified":1755770236143},{"_id":"public/tags/index.html","hash":"24c78362ec2ef4d2acecf8ddb6a4c68a52d6558f","modified":1755770236143},{"_id":"public/link/index.html","hash":"b92876fb248feeea8e1f2555d8ec2d950eeb4308","modified":1755770236143},{"_id":"public/2025/07/11/我的第一篇博客/index.html","hash":"57c7886d1ad2d985831e2f17d246713c3a545365","modified":1755770236143},{"_id":"public/2025/07/14/nvm管理node/index.html","hash":"335b1389868432f96e5446b63f8ed16d0a46e660","modified":1755770236143},{"_id":"public/2025/07/11/git远程项目迁移/index.html","hash":"48d8a4a2dd44d0f23900280cca68c496d6973c5c","modified":1755770236143},{"_id":"public/2025/07/14/forEach不能直接支持异步等待/index.html","hash":"3ef2e920a5ef48a6c0ef73012c21283102faa2f8","modified":1755770236143},{"_id":"public/2025/07/16/get-post入参格式/index.html","hash":"638a904998b42959b15d401a6eee9d49ad897c6b","modified":1755770236143},{"_id":"public/2025/07/23/搭建个人博客/index.html","hash":"06de24a53d7e863fbc02831a55b031b7cbd074eb","modified":1755770236143},{"_id":"public/2025/07/23/js判断数据类型/index.html","hash":"96ca86ffc7adb087854215005253baf925b731fc","modified":1755770236143},{"_id":"public/2025/07/24/compoents下组件自动注册/index.html","hash":"f00a4740efdbf34807a16a683273fcc6b0342c33","modified":1755770236143},{"_id":"public/2025/07/28/setTimeout与闭包/index.html","hash":"d7139d33a69bbea8e8aaa893435df9e5cbe40485","modified":1755770236143},{"_id":"public/2025/07/29/Event事件循环/index.html","hash":"f5176a242983153feef37a11fc176196eb53acbf","modified":1755770236143},{"_id":"public/2025/07/30/接入Google地图/index.html","hash":"dfcf87c119cd27e1c6ab64ec778f24ca4a6beeef","modified":1755770236143},{"_id":"public/2025/07/31/【微信小程序实战】之准备工作详解/index.html","hash":"9f92943a26664a11da393e91c7beb30cb4ee13a2","modified":1755770236143},{"_id":"public/2025/08/12/input文件上传/index.html","hash":"cedbd2a7bb272088fa4ec44ab16cb9f62864e1a1","modified":1755770236143},{"_id":"public/2025/08/21/词云图/index.html","hash":"0ec4a5e0444392ef95d4e71cf91f53aebc79c705","modified":1755770236143},{"_id":"public/2025/08/07/css切割属性clip-path/index.html","hash":"0bd1872abbde751d159f136b3b20e50425740f26","modified":1755770236143},{"_id":"public/categories/axios/index.html","hash":"b7346a6ac97f51f2471a4e0fbda36f63c54823a4","modified":1755770236143},{"_id":"public/categories/Javascript/index.html","hash":"97faef367406ec5059b2aeee920ee031c4323a41","modified":1755770236143},{"_id":"public/categories/Hexo/index.html","hash":"a409e18af1eee72b476cb8ea84ee025defefaf3d","modified":1755770236143},{"_id":"public/categories/Vue/index.html","hash":"fa901f31f9f6018c2d90e9afe1907e7dd2d81b53","modified":1755770236143},{"_id":"public/categories/小程序/index.html","hash":"8170c1ae2c7c34753af80385384ece34e3e7984b","modified":1755770236143},{"_id":"public/archives/index.html","hash":"1d2a75bd15627b76f8c4ab1f65fc4ac473593c86","modified":1755770236143},{"_id":"public/archives/page/2/index.html","hash":"3ce5e00ad575a72fe9759174b9c367433a42e0e2","modified":1755770236143},{"_id":"public/categories/css/index.html","hash":"8bd41b554f2861b44fcb89433b72bc375beb6ad6","modified":1755770236143},{"_id":"public/archives/2025/index.html","hash":"94c5c3a6b8846a45bb3d8723df850e0c688e4bc9","modified":1755770236143},{"_id":"public/archives/2025/page/2/index.html","hash":"60e8811242cac587e9b2e94583d078ff112d1a72","modified":1755770236143},{"_id":"public/archives/2025/07/index.html","hash":"c6b567f6dbc89c845e2f225943cade39c172809a","modified":1755770236143},{"_id":"public/archives/2025/07/page/2/index.html","hash":"4004f4648a3ffcca6db531c9c501662fbfdfe108","modified":1755770236143},{"_id":"public/archives/2025/08/index.html","hash":"cac7c2cbf880708bed25066a1c79aa84913ae287","modified":1755770236143},{"_id":"public/tags/git/index.html","hash":"115b435f3088825ed56ad32b9caa80a391c71fa6","modified":1755770236143},{"_id":"public/tags/axios/index.html","hash":"0cdbdc9f506b4e5e0c961731e7bfbb14e10758ec","modified":1755770236143},{"_id":"public/tags/post/index.html","hash":"7522dd5517b2dc7fcf7fd0d8d078b62c8adca4de","modified":1755770236143},{"_id":"public/tags/get/index.html","hash":"ff2144ad3e409bfad70cb32569e15b64fa949be1","modified":1755770236143},{"_id":"public/tags/hexo/index.html","hash":"7264bc44fc556a9232165a10e50eb1e15ebc8b40","modified":1755770236143},{"_id":"public/tags/gitlab/index.html","hash":"f5be85fdc13375a74a01c5e172efa54c288f33b4","modified":1755770236143},{"_id":"public/tags/forEach/index.html","hash":"b8ff1917fb81a58b6f15b8b74def40f86d09cf31","modified":1755770236143},{"_id":"public/tags/async-await/index.html","hash":"55d49f32f26cd9c309e37e3b86ed5d8dc041fc9e","modified":1755770236143},{"_id":"public/tags/vite/index.html","hash":"4dd6e3463a976f97d1629be74551bb3fbdf6ef7b","modified":1755770236143},{"_id":"public/tags/vue-cli/index.html","hash":"356f1d0a330a2d93f6fb9a42608ca8010e3247e8","modified":1755770236143},{"_id":"public/tags/nvm/index.html","hash":"fb22b3752c977b468bfc2a01949c66a34ddef479","modified":1755770236143},{"_id":"public/tags/nodejs/index.html","hash":"f1eac16f7e42f8651560f23261f0cf6fc247db72","modified":1755770236143},{"_id":"public/tags/event-loop/index.html","hash":"346924c38d204529ecab166c633ce8d938be206f","modified":1755770236143},{"_id":"public/tags/setTimeout/index.html","hash":"8b767f6ce8615ed542d5148d5d07b6c529c1934e","modified":1755770236143},{"_id":"public/tags/微信小程序/index.html","hash":"d478b95aacd2b661d8b766f08dbf58d9a06cc4ee","modified":1755770236143},{"_id":"public/tags/上传/index.html","hash":"6895ca8e5358ff9c45877f1db9d698b459a7ed17","modified":1755770236143},{"_id":"public/tags/input/index.html","hash":"081307d96b26198e7b1b6fbb12f10569798e46a5","modified":1755770236143},{"_id":"public/tags/css/index.html","hash":"97481f25d33b224b61e728c8f405b293973633f4","modified":1755770236143},{"_id":"public/tags/echarts-wordcloud/index.html","hash":"f46ede582f37c22317d78bd7654b4727a52c21dc","modified":1755770236143},{"_id":"public/tags/Google-Maps/index.html","hash":"782bc603fd561e08e0c8f1511ce4d5dfa4193d40","modified":1755770236143},{"_id":"public/tags/echarts/index.html","hash":"f0d4594d9e40c318cb8a4fd7a81cf5f5ec6839a6","modified":1755770236143},{"_id":"public/index.html","hash":"55d1b7bc18bb180d4de8dfd21c132a0026d7b871","modified":1755770236143},{"_id":"public/page/2/index.html","hash":"2b35b6f8e73b72c5599155055176ac390c21a42c","modified":1755770236143},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1755770236143},{"_id":"public/img/favicon.ico","hash":"455ac256580bf31a45813dbbdb87219bfc8bfb04","modified":1755770236143},{"_id":"public/img/error-page.png","hash":"d2519710498a871ca3e913c57e2ba20a805b6430","modified":1755770236143},{"_id":"public/theme_images/archive_top_img.jpg","hash":"95d5f11cc991be77a59aca0a01a67e989e1b7413","modified":1755770236143},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1755770236143},{"_id":"public/images/compoents下组件自动注册/vite_com.png","hash":"0bfb6a7eb3bc08d5c23bf2be40ddd4f2274275a6","modified":1755770236143},{"_id":"public/images/Event事件循环/cover.jpg","hash":"c40de14fe01eff147bb88bdd7e59ee417d286c38","modified":1755770236143},{"_id":"public/images/css切割属性clip-path/cover.jpg","hash":"24b0ff6e7b53e06f6332c808588e8d3ccb26edb0","modified":1755770236143},{"_id":"public/images/get-post入参格式/cover.jpg","hash":"db5b4b65aa21b94b17221a0cbe39e6eeacb866f0","modified":1755770236143},{"_id":"public/images/接入Google地图/cover.jpg","hash":"c684bcdf54625e3cafa39f0154238604fcc69b03","modified":1755770236143},{"_id":"public/images/setTimeout与闭包/cover.jpg","hash":"e07386cca1c57d264b72238ab93efe831d212f3b","modified":1755770236143},{"_id":"public/images/搭建个人博客/cover.jpg","hash":"ad51e1244168f82abf7dbb9a54d15b3a6217abf9","modified":1755770236143},{"_id":"public/images/搭建个人博客/gitlab-ci-yml.png","hash":"846233b88f3ea5e836a20d58fdfa7c8eb83f3763","modified":1755770236143},{"_id":"public/images/微信小程序实战/准备工作/cover.jpg","hash":"7a1f15b314cc9998b338de9aa035cd33036647ea","modified":1755770236143},{"_id":"public/images/nvm管理node/path1.png","hash":"370c3f1e2b766325349a380eb0a86982d639e710","modified":1755770236143},{"_id":"public/images/微信小程序实战/准备工作/wxtoolexeinstall.png","hash":"1c59bdf99db0e6785a01a0689e8a35a6ecb63846","modified":1755770236143},{"_id":"public/live2dw/lib/L2Dwidget.min.js","hash":"5f1a807437cc723bcadc3791d37add5ceed566a2","modified":1755770236143},{"_id":"public/theme_images/avatar.jpg","hash":"0d1ad2b6763489ffba0ce86c10ca3c94eef4051a","modified":1755770236143},{"_id":"public/theme_images/index_top_img.jpg","hash":"fd37dfb1269e1c7f771c5f7b203194b88be218bd","modified":1755770236143},{"_id":"public/images/git远程项目迁移/cover.jpg","hash":"a27322ef944313c5f1b43c745b4166747c607a94","modified":1755770236143},{"_id":"public/live2dw/lib/L2Dwidget.min.js.map","hash":"3290fe2df45f065b51a1cd7b24ec325cbf9bb5ce","modified":1755770236143},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1755770236143},{"_id":"public/js/utils.js","hash":"ce898acc9081131cdc3a97baf43cb7b1a25da47f","modified":1755770236143},{"_id":"public/js/search/algolia.js","hash":"e5821f78381af9f0f646952a7dd118daab2a79a6","modified":1755770236143},{"_id":"public/js/search/local-search.js","hash":"4e11d033fb58563f5e1b497f1a6f1c62d3501ee6","modified":1755770236143},{"_id":"public/css/index.css","hash":"e84fe5c6fb07e4c226f4654223f4bb0253aa2efc","modified":1755770236143},{"_id":"public/js/main.js","hash":"fb746a3e67d0373deea8481110dd436fea4ca38c","modified":1755770236143},{"_id":"public/js/tw_cn.js","hash":"7ef59df188ea523da89f4caf69c5c0f14e78da69","modified":1755770236143},{"_id":"public/theme_images/footer.jpg","hash":"fe19b156f7575fa85f57e2e5504f28a1ed0d332b","modified":1755770236143},{"_id":"public/theme_images/f.ico","hash":"fdc2c6f9a8a07f9f5f1e009ba389f9436c2f1081","modified":1755770236143},{"_id":"public/images/compoents下组件自动注册/cover.jpg","hash":"aa625942db12ad7881670cfda51e76b6aa1178e6","modified":1755770236143},{"_id":"public/images/nvm管理node/cover.jpg","hash":"2270e49eb94f05b86c18fa8055bf0fce4d315399","modified":1755770236143},{"_id":"public/images/词云图/cover.jpg","hash":"ce2285b26f5e64b0bc2cf5fde46afcc7b3c780c1","modified":1755770236143},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js","hash":"35bb5b588b6de25c9be2dd51d3fd331feafac02d","modified":1755770236143},{"_id":"public/theme_images/default_top_img.jpg","hash":"6d086040d7b10582e2995729e765b4e8f63cc4da","modified":1755770236143},{"_id":"public/images/compoents下组件自动注册/vue_com.png","hash":"6b3ab66352d03d06f5c91aeb155ca5b894f94b20","modified":1755770236143},{"_id":"public/img/butterfly-icon.png","hash":"f5dd732fed5c3bcd4aa76bac3441bac8485fb432","modified":1755770236143},{"_id":"public/images/nvm管理node/nvms2.png","hash":"caa851110bc539dc8ffb7a3543e80f600d4ba8ba","modified":1755770236143},{"_id":"public/images/nvm管理node/path2.png","hash":"1fac019c4c8dfa26f0c9709f151f169d93ce9809","modified":1755770236143},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js.map","hash":"35e71cc2a130199efb167b9a06939576602f0d75","modified":1755770236143},{"_id":"public/images/nvm管理node/nvms1.png","hash":"f169117474fb7cd1e4d920463de12d422c2b8515","modified":1755770236143},{"_id":"public/images/nvm管理node/nvms3.png","hash":"0c73472eb0c85930408c73c5d54ad9de26137a6a","modified":1755770236143},{"_id":"public/images/微信小程序实战/准备工作/wxtoolexe.png","hash":"8e3599ef7b7a39a1962667cd5eb0af2b54c7857e","modified":1755770236143},{"_id":"public/images/input文件上传/cover.jpg","hash":"7bcfda6b7ad32e0701590dfd77248a989cd18c40","modified":1755770236143},{"_id":"public/images/get-post入参格式/formdata2.png","hash":"4b81f95c2973b0eee32a64b326457941728b0913","modified":1755770236143},{"_id":"public/images/get-post入参格式/json3.png","hash":"a12672497f18d3c885ec49b138baf7a634a67835","modified":1755770236143},{"_id":"public/images/微信小程序实战/准备工作/confirmInfo.png","hash":"e7301fa91592bf32d36efc57093a1dbff0ada1f5","modified":1755770236143},{"_id":"public/images/get-post入参格式/json2.png","hash":"28a202124a408fda87884e3e7d86d04b633cf486","modified":1755770236143},{"_id":"public/images/nvm管理node/node.png","hash":"39591bfcd56fce198d8869950ef82d12059e73a1","modified":1755770236143},{"_id":"public/images/get-post入参格式/get.png","hash":"e80e11cf83ec2d0fd3272a675fd08f80cfae09f7","modified":1755770236143},{"_id":"public/images/get-post入参格式/urlencoded2.png","hash":"d84defda37236e452b69f0a37f12597b8bb205cc","modified":1755770236143},{"_id":"public/images/微信小程序实战/准备工作/wx_git_link_origin.png","hash":"3c588a118eb75ff66844f7dd99002a6cc224a149","modified":1755770236143},{"_id":"public/images/微信小程序实战/准备工作/updateVersion2.png","hash":"07219e3467808a78bfddb38971afac4fba879292","modified":1755770236143},{"_id":"public/images/微信小程序实战/准备工作/wxtype4.png","hash":"2fe853d008df517502167b0ab109045d6d8f14f1","modified":1755770236143},{"_id":"public/images/微信小程序实战/准备工作/wx_git_push_origin.png","hash":"a0304591e5373aa68164bbcd349e1cef00cd06a2","modified":1755770236143},{"_id":"public/images/微信小程序实战/准备工作/wx_git_account.png","hash":"6c85dd97282312bac695a7ae23b12460bd296d2a","modified":1755770236143},{"_id":"public/images/微信小程序实战/准备工作/uploadcode.png","hash":"2371f1be95e93a9222d0b09be2b88c3b1364a0f7","modified":1755770236143},{"_id":"public/images/微信小程序实战/准备工作/createProject0.png","hash":"38700902a8c1affdd4d437fd3077b1bd76e70910","modified":1755770236143},{"_id":"public/images/get-post入参格式/bodyData.png","hash":"9b2d1fb6ab98fbd838f92bd80f5a0881272461d1","modified":1755770236143},{"_id":"public/images/get-post入参格式/params.png","hash":"a5f99846ed6b97f347a3d3a06235a9c2c40d2bc2","modified":1755770236143},{"_id":"public/images/get-post入参格式/urlencoded3.png","hash":"39bde66360fd7ea74188183282d1ef101b851a55","modified":1755770236143},{"_id":"public/images/get-post入参格式/formdata1.png","hash":"3a13289c4f5fdd3201be8a958b38a504c2882695","modified":1755770236143},{"_id":"public/images/搭建个人博客/firstBlog.png","hash":"adfc30470aba2d295e495ea1dff37f2059c203ad","modified":1755770236143},{"_id":"public/images/微信小程序实战/准备工作/wx_git_newproject.png","hash":"16bf489341ea2b8e2cc82798a0fcda524f86e228","modified":1755770236143},{"_id":"public/images/微信小程序实战/准备工作/wxtool.png","hash":"97f955bfd2cd562e88e8a297ae40f887e270b9ec","modified":1755770236143},{"_id":"public/images/get-post入参格式/json1.png","hash":"548c6dd7378c72106e381f4c43c33f5da5831ff8","modified":1755770236143},{"_id":"public/images/get-post入参格式/urlencoded1.png","hash":"394c63d5666b1361998254a248ab155ad7fdaf84","modified":1755770236143},{"_id":"public/images/微信小程序实战/准备工作/wx_git_password.png","hash":"0a8e1f32bbcc99c315cdaee2b1f7696ea514645d","modified":1755770236143},{"_id":"public/images/get-post入参格式/formdata3.png","hash":"5fac213bafaf2106eb4d007c8295b1cee5e91f29","modified":1755770236143},{"_id":"public/images/接入Google地图/latlng.png","hash":"f321e5d88ea40854945d0cb2988c823e6fa63223","modified":1755770236143},{"_id":"public/images/微信小程序实战/准备工作/registerAccount.png","hash":"c92443abcb27369a9e4a48147513e0c152bc31b2","modified":1755770236143},{"_id":"public/images/微信小程序实战/准备工作/preview.png","hash":"8ea320a3ed28fdd1f57ee42a0febf0a25a168c45","modified":1755770236143},{"_id":"public/images/微信小程序实战/准备工作/createProject1.png","hash":"f4297ca4f7011d0b2ea0e6b47bfca828ac88ae4e","modified":1755770236143},{"_id":"public/images/微信小程序实战/准备工作/infoRecord.png","hash":"20c92036e822d8ea0ed6455a9d16b1f561c2866d","modified":1755770236143},{"_id":"public/images/搭建个人博客/gitRuning0.png","hash":"7f84efd204b134fa637d4132482fd7e963bb19ff","modified":1755770236143},{"_id":"public/images/微信小程序实战/准备工作/wxgzpt.png","hash":"fe300d0aeacaddb9320d88637cfd89337e422afe","modified":1755770236143},{"_id":"public/images/微信小程序实战/准备工作/wx_git_version.png","hash":"ca87716216278ddd64c2acbe12fcf8eaa5d5f303","modified":1755770236143},{"_id":"public/images/搭建个人博客/gitRuning.png","hash":"f58073d7ebc5ae2b336e826ac02c860d0fe03231","modified":1755770236143},{"_id":"public/images/微信小程序实战/准备工作/wx_git_magage.png","hash":"6505e5a09c9e5a666d36f18bff4c1a7399c1bbd9","modified":1755770236143},{"_id":"public/images/微信小程序实战/准备工作/release1.png","hash":"306ecd3636f9fa687e92f36a3bb87450855ec59d","modified":1755770236143},{"_id":"public/images/词云图/result.png","hash":"9f93e9209114df3045c072839f478561d7162a24","modified":1755770236143},{"_id":"public/images/微信小程序实战/准备工作/wxtooldowload.png","hash":"12bb85399c0186a01f5676cdcf2d222e249ee919","modified":1755770236143},{"_id":"public/images/微信小程序实战/准备工作/wx_git_push_origin2.png","hash":"9346577c8e9e9e46e2719caa1b5197046e272e73","modified":1755770236143},{"_id":"public/images/接入Google地图/maps.png","hash":"91f98f8207d8b47cdfc1dbcf2ce5b3a82062ce3a","modified":1755770236143},{"_id":"public/images/微信小程序实战/准备工作/release.png","hash":"f0ecfed270149e053da055c2cce6f2deaa932447","modified":1755770236143},{"_id":"public/images/微信小程序实战/准备工作/accountManage.png","hash":"1b35bb0e945f21eaabc89cd7eddf467e52bd7b4f","modified":1755770236143},{"_id":"public/images/微信小程序实战/准备工作/createProject2.png","hash":"e5d15fd53743f9aab4c57e6fb98b52cd466e3427","modified":1755770236143},{"_id":"public/images/搭建个人博客/hexo_init.png","hash":"1c72175012bb6751b24a98e674a9ff1fdfb2a7bc","modified":1755770236143},{"_id":"public/images/搭建个人博客/hexo_themes.png","hash":"f8a60b8e84f3c41d7ea58c030aa2a11c8ba5f75f","modified":1755770236143},{"_id":"public/theme_images/bg.jpg","hash":"1cca29a70142766ce97b99d6cf25b5a7eac499c2","modified":1755770236143},{"_id":"public/images/微信小程序实战/准备工作/updateVersion.png","hash":"ff1cce5bcd44a84ea4b587c11feadf1e3088bbf2","modified":1755770236143},{"_id":"source/_posts/2025-09-03-瀑布流布局.md","hash":"2c861333aa066eb3cd56f61b42e11060244806b6","modified":1757750955106},{"_id":"source/_posts/2025-09-12-前端性能优化.md","hash":"78aa1214821279f1105cdbd00621a8009645eb2a","modified":1757750955107},{"_id":"source/_posts/2025-09-11-SEO优化.md","hash":"4941d75d15dbf03291d32fd5edd82125c1c996c8","modified":1757750955106},{"_id":"source/_posts/2025-09-13-前端实现导出xlsx表格.md","hash":"42d4ebbcfc20c839dc231a63b7239f1fed392123","modified":1757750955107},{"_id":"source/images/前端性能优化/cover.jpg","hash":"ad96a37d922828ded946eb3df4dd0e9ad4f801ae","modified":1757750955203},{"_id":"source/images/SEO优化/cover.jpg","hash":"8c8c620209e700637470f061f4180da11b5b214e","modified":1757750955111},{"_id":"source/images/瀑布流布局/cover.jpg","hash":"d0b5b212ee911bff0d861cb8e864b2b71f468d9d","modified":1757750955456},{"_id":"source/images/前端实现导出xlsx表格/cover.jpg","hash":"658a1ee05613e73f20aa23f1bb02bce9a9ec2b54","modified":1757750955197},{"_id":"source/images/js判断数据类型/cover.jpg","hash":"387395d697afab77d1703382f9b8506587285e66","modified":1757750955183},{"_id":"source/images/前端实现导出xlsx表格/exportFile1.png","hash":"ed3c0b78a3fc2b79ab0604f10a4cced0a6c96126","modified":1757750955199},{"_id":"source/images/前端实现导出xlsx表格/exportFile2.png","hash":"32a3c532923bf9d3c5ddc6bbd36a3648d1300996","modified":1757750955202},{"_id":"source/images/瀑布流布局/chrome.png","hash":"1290f7d9648c4b9c532aeb35e17870d92deabfac","modified":1757750955455},{"_id":"source/images/瀑布流布局/waterfall4.png","hash":"2d401779c094ab45da15887979732adb6c3a9a24","modified":1757750955498},{"_id":"source/images/瀑布流布局/waterfall1.png","hash":"f7c473cae0bbbd1b02c91d9462d59a6b621de659","modified":1757750955470},{"_id":"source/images/瀑布流布局/waterfall2.png","hash":"3b1b9c98b4d9138274cc68222bf6aa056e6b3a49","modified":1757750955479},{"_id":"source/images/瀑布流布局/waterfall3.png","hash":"a2f2c536d8a780e1e9e45442e9762ed3eb6b5853","modified":1757750955491}],"Category":[{"name":"axios","_id":"cmel89pe50009rwnchf1x0ses"},{"name":"Javascript","_id":"cmel89pea000grwncfx7n2yku"},{"name":"Hexo","_id":"cmel89ped000lrwnc34jlbku9"},{"name":"Vue","_id":"cmel89peg000vrwnc6e5xc6iv"},{"name":"小程序","_id":"cmel89peh0011rwnc52v86ozt"},{"name":"css","_id":"cmel89peo001srwnc7e20g6ui"},{"name":"上传/导出","_id":"cmfhzm6b40000iwnc83c9f2t6"},{"name":"SEO","_id":"cmfhzm6b80009iwncf8c00vt5"},{"name":"性能优化","_id":"cmfhzm6b9000diwnc8sf9bmr1"}],"Data":[{"_id":"link","data":[{"class_name":"友情链接","class_desc":"那些人，那些事，那些好用的官网...","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简洁且高效的博客框架"},{"name":"Butterfly主题官网","link":"https://butterfly.js.org/posts/21cfbf15/","avatar":"https://butterfly.js.org/img/butterfly-icon.png","descr":"一款专为 Hexo 静态博客引擎设计的高颜值现代化主题"},{"name":"Waline","link":"https://waline.js.org/guide/get-started/","avatar":"https://waline.js.org/logo.png","descr":"一款简洁、安全的评论系统"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"}]}]}],"Page":[{"title":"分类","date":"2025-07-28T02:17:10.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2025-07-28 10:17:10\ntype: 'categories'  # 页面类型，分类页必须是 categories\ncomments: false  # 是否开启评论，默认为true\n---\n","updated":"2025-09-13T08:09:15.108Z","path":"categories/index.html","_id":"cmel89pdw0000rwncgkwg7qnd","layout":"page","content":"","excerpt":"","more":""},{"title":"你好呀","date":"2025-07-28T07:46:58.000Z","type":"about","comments":0,"_content":"\n### ✍️「个人介绍」\n\n👋 大家好，我是 Sara，一名 web 前端开发工程师兼技术博主\n\n本人 00 后，大学本科毕业，平时喜欢追剧、看综艺、打羽毛球，也喜欢学习一些新技术，有好玩的技术可以留言分享\n\n### 📚「这里主要分享」\n\n- 前端开发技巧\n- 效率工具测评\n- 个人成长心得\n\n### 🔄「更新频率」\n\n- 不定期更新\n- 日常碎片思考\n\n### 💬「欢迎评论告诉我」\n\n- 你对哪类内容最感兴趣？\n- 希望看到什么主题的文章？\n- 文章上有什么错处？\n\n### 💻「代码如诗」\n\n- 在 console.log() 里埋下种子，意外长出了整个春天的叙事诗\n- 递归函数像俄罗斯套娃，每个 return 都藏着一个更小的宇宙\n\n### 💫「交换星光」\n\n> \"生活中没有什么可怕的东西，只有需要理解的东西\" ——《居里夫人》\n> \"上善若水，水善利万物而不争\" ——《老子》\n\n欢迎带着你的星轨图  \n来我的小宇宙做客  \n让我们互为对方的诗篇注脚\n","source":"about/index.md","raw":"---\ntitle: 你好呀\ndate: 2025-07-28 15:46:58\ntype: 'about'\ncomments: false\n---\n\n### ✍️「个人介绍」\n\n👋 大家好，我是 Sara，一名 web 前端开发工程师兼技术博主\n\n本人 00 后，大学本科毕业，平时喜欢追剧、看综艺、打羽毛球，也喜欢学习一些新技术，有好玩的技术可以留言分享\n\n### 📚「这里主要分享」\n\n- 前端开发技巧\n- 效率工具测评\n- 个人成长心得\n\n### 🔄「更新频率」\n\n- 不定期更新\n- 日常碎片思考\n\n### 💬「欢迎评论告诉我」\n\n- 你对哪类内容最感兴趣？\n- 希望看到什么主题的文章？\n- 文章上有什么错处？\n\n### 💻「代码如诗」\n\n- 在 console.log() 里埋下种子，意外长出了整个春天的叙事诗\n- 递归函数像俄罗斯套娃，每个 return 都藏着一个更小的宇宙\n\n### 💫「交换星光」\n\n> \"生活中没有什么可怕的东西，只有需要理解的东西\" ——《居里夫人》\n> \"上善若水，水善利万物而不争\" ——《老子》\n\n欢迎带着你的星轨图  \n来我的小宇宙做客  \n让我们互为对方的诗篇注脚\n","updated":"2025-09-13T08:09:15.108Z","path":"about/index.html","_id":"cmel89pe00002rwnc7tfn79li","layout":"page","content":"<h3 id=\"✍️「个人介绍」\"><a href=\"#✍️「个人介绍」\" class=\"headerlink\" title=\"✍️「个人介绍」\"></a>✍️「个人介绍」</h3><p>👋 大家好，我是 Sara，一名 web 前端开发工程师兼技术博主</p>\n<p>本人 00 后，大学本科毕业，平时喜欢追剧、看综艺、打羽毛球，也喜欢学习一些新技术，有好玩的技术可以留言分享</p>\n<h3 id=\"📚「这里主要分享」\"><a href=\"#📚「这里主要分享」\" class=\"headerlink\" title=\"📚「这里主要分享」\"></a>📚「这里主要分享」</h3><ul>\n<li>前端开发技巧</li>\n<li>效率工具测评</li>\n<li>个人成长心得</li>\n</ul>\n<h3 id=\"🔄「更新频率」\"><a href=\"#🔄「更新频率」\" class=\"headerlink\" title=\"🔄「更新频率」\"></a>🔄「更新频率」</h3><ul>\n<li>不定期更新</li>\n<li>日常碎片思考</li>\n</ul>\n<h3 id=\"💬「欢迎评论告诉我」\"><a href=\"#💬「欢迎评论告诉我」\" class=\"headerlink\" title=\"💬「欢迎评论告诉我」\"></a>💬「欢迎评论告诉我」</h3><ul>\n<li>你对哪类内容最感兴趣？</li>\n<li>希望看到什么主题的文章？</li>\n<li>文章上有什么错处？</li>\n</ul>\n<h3 id=\"💻「代码如诗」\"><a href=\"#💻「代码如诗」\" class=\"headerlink\" title=\"💻「代码如诗」\"></a>💻「代码如诗」</h3><ul>\n<li>在 console.log() 里埋下种子，意外长出了整个春天的叙事诗</li>\n<li>递归函数像俄罗斯套娃，每个 return 都藏着一个更小的宇宙</li>\n</ul>\n<h3 id=\"💫「交换星光」\"><a href=\"#💫「交换星光」\" class=\"headerlink\" title=\"💫「交换星光」\"></a>💫「交换星光」</h3><blockquote>\n<p>“生活中没有什么可怕的东西，只有需要理解的东西” ——《居里夫人》<br>“上善若水，水善利万物而不争” ——《老子》</p>\n</blockquote>\n<p>欢迎带着你的星轨图<br>来我的小宇宙做客<br>让我们互为对方的诗篇注脚</p>\n","excerpt":"","more":"<h3 id=\"✍️「个人介绍」\"><a href=\"#✍️「个人介绍」\" class=\"headerlink\" title=\"✍️「个人介绍」\"></a>✍️「个人介绍」</h3><p>👋 大家好，我是 Sara，一名 web 前端开发工程师兼技术博主</p>\n<p>本人 00 后，大学本科毕业，平时喜欢追剧、看综艺、打羽毛球，也喜欢学习一些新技术，有好玩的技术可以留言分享</p>\n<h3 id=\"📚「这里主要分享」\"><a href=\"#📚「这里主要分享」\" class=\"headerlink\" title=\"📚「这里主要分享」\"></a>📚「这里主要分享」</h3><ul>\n<li>前端开发技巧</li>\n<li>效率工具测评</li>\n<li>个人成长心得</li>\n</ul>\n<h3 id=\"🔄「更新频率」\"><a href=\"#🔄「更新频率」\" class=\"headerlink\" title=\"🔄「更新频率」\"></a>🔄「更新频率」</h3><ul>\n<li>不定期更新</li>\n<li>日常碎片思考</li>\n</ul>\n<h3 id=\"💬「欢迎评论告诉我」\"><a href=\"#💬「欢迎评论告诉我」\" class=\"headerlink\" title=\"💬「欢迎评论告诉我」\"></a>💬「欢迎评论告诉我」</h3><ul>\n<li>你对哪类内容最感兴趣？</li>\n<li>希望看到什么主题的文章？</li>\n<li>文章上有什么错处？</li>\n</ul>\n<h3 id=\"💻「代码如诗」\"><a href=\"#💻「代码如诗」\" class=\"headerlink\" title=\"💻「代码如诗」\"></a>💻「代码如诗」</h3><ul>\n<li>在 console.log() 里埋下种子，意外长出了整个春天的叙事诗</li>\n<li>递归函数像俄罗斯套娃，每个 return 都藏着一个更小的宇宙</li>\n</ul>\n<h3 id=\"💫「交换星光」\"><a href=\"#💫「交换星光」\" class=\"headerlink\" title=\"💫「交换星光」\"></a>💫「交换星光」</h3><blockquote>\n<p>“生活中没有什么可怕的东西，只有需要理解的东西” ——《居里夫人》<br>“上善若水，水善利万物而不争” ——《老子》</p>\n</blockquote>\n<p>欢迎带着你的星轨图<br>来我的小宇宙做客<br>让我们互为对方的诗篇注脚</p>\n"},{"_content":"/* 自定义样式 */\n#post #article-container img {\n\ttext-align: left;\n    margin: 10px 0;\n    /* transition: transform 0.3s ease; */\n}\n#post #article-container img:hover {\n    /* transform: scale(1.001); */\n}\n.max400 {\n    max-width: 400px !important;\n}\n.max450 {\n    max-width: 450px !important;\n}\n.max500 {\n    max-width: 500px !important;\n}\n.max600 {\n    max-width: 600px !important;\n}","source":"css/custom.css","raw":"/* 自定义样式 */\n#post #article-container img {\n\ttext-align: left;\n    margin: 10px 0;\n    /* transition: transform 0.3s ease; */\n}\n#post #article-container img:hover {\n    /* transform: scale(1.001); */\n}\n.max400 {\n    max-width: 400px !important;\n}\n.max450 {\n    max-width: 450px !important;\n}\n.max500 {\n    max-width: 500px !important;\n}\n.max600 {\n    max-width: 600px !important;\n}","date":"2025-08-21T09:39:59.547Z","updated":"2025-08-01T03:23:12.556Z","path":"css/custom.css","layout":"false","title":"","comments":1,"_id":"cmel89pe30005rwncfk470dpg","content":"/* 自定义样式 */\n#post #article-container img {\n\ttext-align: left;\n    margin: 10px 0;\n    /* transition: transform 0.3s ease; */\n}\n#post #article-container img:hover {\n    /* transform: scale(1.001); */\n}\n.max400 {\n    max-width: 400px !important;\n}\n.max450 {\n    max-width: 450px !important;\n}\n.max500 {\n    max-width: 500px !important;\n}\n.max600 {\n    max-width: 600px !important;\n}"},{"title":"标签","date":"2025-07-28T02:13:02.000Z","type":"tags","orderby":"random","order":1,"comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2025-07-28 10:13:02\ntype: 'tags'  # 页面类型，标签页必须是 tags\norderby: random   # 排序方式：random随机/标签名称排序/length标签数量排序\norder: 1   # 排序次序： 1（升序），-1（降序）\ncomments: false  # 是否开启评论，默认为true\n---\n","updated":"2025-09-13T08:09:15.503Z","path":"tags/index.html","_id":"cmel89pe40007rwnc5sxug6zq","layout":"page","content":"","excerpt":"","more":""},{"title":"链接","date":"2025-07-28T07:48:59.000Z","type":"link","comments":0,"_content":"\n<!-- [Hexo 官网](https://hexo.io/ 'Hexo静态博客框架')\n[Butterfly 主题官网](https://butterfly.js.org/posts/21cfbf15/)\n[Waline 三方评论系统](https://waline.js.org/guide/get-started/) -->\n","source":"link/index.md","raw":"---\ntitle: 链接\ndate: 2025-07-28 15:48:59\ntype: 'link'\ncomments: false\n---\n\n<!-- [Hexo 官网](https://hexo.io/ 'Hexo静态博客框架')\n[Butterfly 主题官网](https://butterfly.js.org/posts/21cfbf15/)\n[Waline 三方评论系统](https://waline.js.org/guide/get-started/) -->\n","updated":"2025-09-13T08:09:15.502Z","path":"link/index.html","_id":"cmel89pe5000arwnc9txyavt2","layout":"page","content":"<!-- [Hexo 官网](https://hexo.io/ 'Hexo静态博客框架')\n[Butterfly 主题官网](https://butterfly.js.org/posts/21cfbf15/)\n[Waline 三方评论系统](https://waline.js.org/guide/get-started/) -->\n","excerpt":"","more":"<!-- [Hexo 官网](https://hexo.io/ 'Hexo静态博客框架')\n[Butterfly 主题官网](https://butterfly.js.org/posts/21cfbf15/)\n[Waline 三方评论系统](https://waline.js.org/guide/get-started/) -->\n"}],"Post":[{"title":"git远程项目迁移","date":"2025-07-11T10:22:52.000Z","cover":"/images/git远程项目迁移/cover.jpg","_content":"\n#### 1、克隆待迁移的 git 项目到本地\n\n```bash\ngit clone --mirror https://xxx/xxx/oldProject.git\n```\n\n#### 2、进入本地克隆的 git 项目 cd oldProject.git\n\n#### 3、在 gitlib 上创建对应的空项目，https://xxx/xxx/newProject.git\n\n#### 4、在 oldProject.git 命令窗口下\n\n- 执行下方命令修改 git 地址为新项目地址：\n\n```bash\ngit remote set-url origin https://xxx/xxx/newProject.git\n```\n\n- 推送已修改 git 到新地址，完成迁移\n\n```bash\ngit push -f origin --mirror\n```\n\n#### 5、可以删除旧项目和 oldProject.git\n","source":"_posts/2025-07-11-git远程项目迁移.md","raw":"---\ntitle: git远程项目迁移\ndate: 2025-07-11 18:22:52\ntags: git\ncover: /images/git远程项目迁移/cover.jpg # 封面图\n---\n\n#### 1、克隆待迁移的 git 项目到本地\n\n```bash\ngit clone --mirror https://xxx/xxx/oldProject.git\n```\n\n#### 2、进入本地克隆的 git 项目 cd oldProject.git\n\n#### 3、在 gitlib 上创建对应的空项目，https://xxx/xxx/newProject.git\n\n#### 4、在 oldProject.git 命令窗口下\n\n- 执行下方命令修改 git 地址为新项目地址：\n\n```bash\ngit remote set-url origin https://xxx/xxx/newProject.git\n```\n\n- 推送已修改 git 到新地址，完成迁移\n\n```bash\ngit push -f origin --mirror\n```\n\n#### 5、可以删除旧项目和 oldProject.git\n","slug":"git远程项目迁移","published":1,"updated":"2025-07-28T03:38:19.543Z","comments":1,"layout":"post","photos":[],"_id":"cmel89pdy0001rwnc5bm7e2vz","content":"<h4 id=\"1、克隆待迁移的-git-项目到本地\"><a href=\"#1、克隆待迁移的-git-项目到本地\" class=\"headerlink\" title=\"1、克隆待迁移的 git 项目到本地\"></a>1、克隆待迁移的 git 项目到本地</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> --mirror https://xxx/xxx/oldProject.git</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2、进入本地克隆的-git-项目-cd-oldProject-git\"><a href=\"#2、进入本地克隆的-git-项目-cd-oldProject-git\" class=\"headerlink\" title=\"2、进入本地克隆的 git 项目 cd oldProject.git\"></a>2、进入本地克隆的 git 项目 cd oldProject.git</h4><h4 id=\"3、在-gitlib-上创建对应的空项目，https-xxx-xxx-newProject-git\"><a href=\"#3、在-gitlib-上创建对应的空项目，https-xxx-xxx-newProject-git\" class=\"headerlink\" title=\"3、在 gitlib 上创建对应的空项目，https://xxx/xxx/newProject.git\"></a>3、在 gitlib 上创建对应的空项目，<a href=\"https://xxx/xxx/newProject.git\">https://xxx/xxx/newProject.git</a></h4><h4 id=\"4、在-oldProject-git-命令窗口下\"><a href=\"#4、在-oldProject-git-命令窗口下\" class=\"headerlink\" title=\"4、在 oldProject.git 命令窗口下\"></a>4、在 oldProject.git 命令窗口下</h4><ul>\n<li>执行下方命令修改 git 地址为新项目地址：</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote set-url origin https://xxx/xxx/newProject.git</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>推送已修改 git 到新地址，完成迁移</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -f origin --mirror</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5、可以删除旧项目和-oldProject-git\"><a href=\"#5、可以删除旧项目和-oldProject-git\" class=\"headerlink\" title=\"5、可以删除旧项目和 oldProject.git\"></a>5、可以删除旧项目和 oldProject.git</h4>","excerpt":"","more":"<h4 id=\"1、克隆待迁移的-git-项目到本地\"><a href=\"#1、克隆待迁移的-git-项目到本地\" class=\"headerlink\" title=\"1、克隆待迁移的 git 项目到本地\"></a>1、克隆待迁移的 git 项目到本地</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> --mirror https://xxx/xxx/oldProject.git</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2、进入本地克隆的-git-项目-cd-oldProject-git\"><a href=\"#2、进入本地克隆的-git-项目-cd-oldProject-git\" class=\"headerlink\" title=\"2、进入本地克隆的 git 项目 cd oldProject.git\"></a>2、进入本地克隆的 git 项目 cd oldProject.git</h4><h4 id=\"3、在-gitlib-上创建对应的空项目，https-xxx-xxx-newProject-git\"><a href=\"#3、在-gitlib-上创建对应的空项目，https-xxx-xxx-newProject-git\" class=\"headerlink\" title=\"3、在 gitlib 上创建对应的空项目，https://xxx/xxx/newProject.git\"></a>3、在 gitlib 上创建对应的空项目，<a href=\"https://xxx/xxx/newProject.git\">https://xxx/xxx/newProject.git</a></h4><h4 id=\"4、在-oldProject-git-命令窗口下\"><a href=\"#4、在-oldProject-git-命令窗口下\" class=\"headerlink\" title=\"4、在 oldProject.git 命令窗口下\"></a>4、在 oldProject.git 命令窗口下</h4><ul>\n<li>执行下方命令修改 git 地址为新项目地址：</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote set-url origin https://xxx/xxx/newProject.git</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>推送已修改 git 到新地址，完成迁移</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -f origin --mirror</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5、可以删除旧项目和-oldProject-git\"><a href=\"#5、可以删除旧项目和-oldProject-git\" class=\"headerlink\" title=\"5、可以删除旧项目和 oldProject.git\"></a>5、可以删除旧项目和 oldProject.git</h4>"},{"title":"我的第一篇博客","date":"2025-07-11T06:55:44.000Z","_content":"\n## 微前端\n微前端：（拆分与整合）将大型前端应用按业务模块（如电商的商品、订单、支付模块）拆分为子应用，每个子应用可使用不同的技术栈（Vue、React 等）独立开发/部署/维护/更新[模块化性/独立性]，最后整合成这个大项目。\n\n## 前端\n独立的一个项目，浏览器端的网页、单页应用（SPA）、移动端 H5 页面等。\n\n## 大前端\n（跨平台开发）大前端是前端技术的扩展与延伸，指通过一套前端技术栈（主要是 JS/TS）覆盖更多平台和场景，打破传统前端仅局限于浏览器的边界，如：uniapp跨平台开发框架。\n","source":"_posts/2025-07-11-我的第一篇博客.md","raw":"---\ntitle: 我的第一篇博客\ndate: 2025-07-11 14:55:44\ntags:\n---\n\n## 微前端\n微前端：（拆分与整合）将大型前端应用按业务模块（如电商的商品、订单、支付模块）拆分为子应用，每个子应用可使用不同的技术栈（Vue、React 等）独立开发/部署/维护/更新[模块化性/独立性]，最后整合成这个大项目。\n\n## 前端\n独立的一个项目，浏览器端的网页、单页应用（SPA）、移动端 H5 页面等。\n\n## 大前端\n（跨平台开发）大前端是前端技术的扩展与延伸，指通过一套前端技术栈（主要是 JS/TS）覆盖更多平台和场景，打破传统前端仅局限于浏览器的边界，如：uniapp跨平台开发框架。\n","slug":"我的第一篇博客","published":1,"updated":"2025-07-23T07:14:48.532Z","comments":1,"layout":"post","photos":[],"_id":"cmel89pe10003rwnc5wf72n61","content":"<h2 id=\"微前端\"><a href=\"#微前端\" class=\"headerlink\" title=\"微前端\"></a>微前端</h2><p>微前端：（拆分与整合）将大型前端应用按业务模块（如电商的商品、订单、支付模块）拆分为子应用，每个子应用可使用不同的技术栈（Vue、React 等）独立开发&#x2F;部署&#x2F;维护&#x2F;更新[模块化性&#x2F;独立性]，最后整合成这个大项目。</p>\n<h2 id=\"前端\"><a href=\"#前端\" class=\"headerlink\" title=\"前端\"></a>前端</h2><p>独立的一个项目，浏览器端的网页、单页应用（SPA）、移动端 H5 页面等。</p>\n<h2 id=\"大前端\"><a href=\"#大前端\" class=\"headerlink\" title=\"大前端\"></a>大前端</h2><p>（跨平台开发）大前端是前端技术的扩展与延伸，指通过一套前端技术栈（主要是 JS&#x2F;TS）覆盖更多平台和场景，打破传统前端仅局限于浏览器的边界，如：uniapp跨平台开发框架。</p>\n","excerpt":"","more":"<h2 id=\"微前端\"><a href=\"#微前端\" class=\"headerlink\" title=\"微前端\"></a>微前端</h2><p>微前端：（拆分与整合）将大型前端应用按业务模块（如电商的商品、订单、支付模块）拆分为子应用，每个子应用可使用不同的技术栈（Vue、React 等）独立开发&#x2F;部署&#x2F;维护&#x2F;更新[模块化性&#x2F;独立性]，最后整合成这个大项目。</p>\n<h2 id=\"前端\"><a href=\"#前端\" class=\"headerlink\" title=\"前端\"></a>前端</h2><p>独立的一个项目，浏览器端的网页、单页应用（SPA）、移动端 H5 页面等。</p>\n<h2 id=\"大前端\"><a href=\"#大前端\" class=\"headerlink\" title=\"大前端\"></a>大前端</h2><p>（跨平台开发）大前端是前端技术的扩展与延伸，指通过一套前端技术栈（主要是 JS&#x2F;TS）覆盖更多平台和场景，打破传统前端仅局限于浏览器的边界，如：uniapp跨平台开发框架。</p>\n"},{"title":"get/post入参格式","date":"2025-07-16T02:47:10.000Z","cover":"/images/get-post入参格式/cover.jpg","_content":"\n#### 1、get 请求：\n\n- 用 params 入参\n\n- 数据传递方式：通过 URL 形式参数传递，拼接在请求地址上\n\n- GET 请求是否可以设置  Content-Type？\n  - 可以设置，但通常没有意义，因为 GET 请求的请求体通常为空。\n  - 如果强行设置  Content-Type，浏览器和服务器可能会忽略它。\n\n    ![](/images/get-post入参格式/get.png)\n\n### 2、post 请求：\n\n（1）用 data 传参，data：普通对象、FormData 表单对象\n\n（2）在前端开发中，发送 POST 请求时，正确设置 Content-Type 是非常重要的，因为它告诉服务器请求体的数据格式。\n\n- `application/json` 发送 JSON 格式的数据\n\n```javascript\nexport function submitCollectRecordDetail() {\n\tconst data = {\n\t\tsessionId: 'xzdfsd',\n\t\tlanguageCode: 'CH',\n\t\titemCode: 'AMC',\n\t}\n\treturn request({\n\t\turl: '/apiGlobal/submitCollectRecordDetail',\n\t\tmethod: 'post',\n\t\tdata: data,\n\t\theaders: {\n\t\t\t'Content-Type': 'application/josn;charset=UTF-8',\n\t\t},\n\t})\n}\n```\n\n![](/images/get-post入参格式/json1.png)\n![](/images/get-post入参格式/json2.png)\n![](/images/get-post入参格式/json3.png)\n\n- `application/x-www-form-urlencoded` 发送表单数据，键值对格式【`URLSearchParams`】 key1=value1&key2=value2\n\n```javascript\nexport function submitCollectRecordDetail(data) {\n\tdata = {\n\t\tsessionId: store.state.MyToken,\n\t\tlanguageCode: store.state.lKey,\n\t\titemCode: store.state.itemCode,\n\t\t...data,\n\t}\n\tdata = new URLSearchParams(data).toString()\n\treturn request({\n\t\turl: '/apiGlobal/submitCollectRecordDetail',\n\t\tmethod: 'post',\n\t\tdata: data,\n\t\theaders: {\n\t\t\t'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\n\t\t},\n\t})\n}\n```\n\n![](/images/get-post入参格式/urlencoded1.png)\n![](/images/get-post入参格式/urlencoded2.png)\n![](/images/get-post入参格式/urlencoded3.png)\n\n- `multipart/form-data` 发送表单数据，支持文件上传\n\n```javascript\nexport function submitCollectRecordDetail(data) {\n\tdata = {\n\t\tsessionId: store.state.MyToken,\n\t\tlanguageCode: store.state.lKey,\n\t\titemCode: store.state.itemCode,\n\t\t...data,\n\t}\n\tlet obj = new FormData()\n\tObject.keys(data).forEach((key) => {\n\t\tobj.append(key, data[key])\n\t})\n\treturn request({\n\t\turl: '/apiGlobal/submitCollectRecordDetail',\n\t\tmethod: 'post',\n\t\tdata: obj,\n\t\theaders: {\n\t\t\t'Content-Type': 'multipart/form-data',\n\t\t},\n\t})\n}\n```\n\n![](/images/get-post入参格式/formdata1.png)\n![](/images/get-post入参格式/formdata2.png)\n![](/images/get-post入参格式/formdata3.png)\n\n#### 注意事项：\n\n- `multipart/form-data`  的  Content-Type：\n  使用  FormData  时，不要手动设置  Content-Type，浏览器会自动添加正确的  Content-Type  和边界（boundary）。\n\n- 字符编码：如果需要指定字符编码，可以在  Content-Type  中添加  charset\n  例如：`Content-Type: application/json;charset=UTF-8`\n\n- CORS 请求：\n  如果跨域请求，确保服务器支持  Content-Type，并在响应头中设置  `Access-Control-Allow-Headers`\n\n- Postman 中看数据：\n  Get 请求，params 入参，在 params 中查看数据\n  ![](/images/get-post入参格式/params.png)\n  Post 请求，data 入参，在 body 中查看数据，还有数据格式(Content-Type 决定数据格式)\n  ![](/images/get-post入参格式/bodyData.png)\n","source":"_posts/2025-07-16-get-post入参格式.md","raw":"---\ntitle: get/post入参格式\ndate: 2025-07-16 10:47:10\ntags:\n  - axios\n  - get\n  - post\ncover: /images/get-post入参格式/cover.jpg\ncategories: axios\n---\n\n#### 1、get 请求：\n\n- 用 params 入参\n\n- 数据传递方式：通过 URL 形式参数传递，拼接在请求地址上\n\n- GET 请求是否可以设置  Content-Type？\n  - 可以设置，但通常没有意义，因为 GET 请求的请求体通常为空。\n  - 如果强行设置  Content-Type，浏览器和服务器可能会忽略它。\n\n    ![](/images/get-post入参格式/get.png)\n\n### 2、post 请求：\n\n（1）用 data 传参，data：普通对象、FormData 表单对象\n\n（2）在前端开发中，发送 POST 请求时，正确设置 Content-Type 是非常重要的，因为它告诉服务器请求体的数据格式。\n\n- `application/json` 发送 JSON 格式的数据\n\n```javascript\nexport function submitCollectRecordDetail() {\n\tconst data = {\n\t\tsessionId: 'xzdfsd',\n\t\tlanguageCode: 'CH',\n\t\titemCode: 'AMC',\n\t}\n\treturn request({\n\t\turl: '/apiGlobal/submitCollectRecordDetail',\n\t\tmethod: 'post',\n\t\tdata: data,\n\t\theaders: {\n\t\t\t'Content-Type': 'application/josn;charset=UTF-8',\n\t\t},\n\t})\n}\n```\n\n![](/images/get-post入参格式/json1.png)\n![](/images/get-post入参格式/json2.png)\n![](/images/get-post入参格式/json3.png)\n\n- `application/x-www-form-urlencoded` 发送表单数据，键值对格式【`URLSearchParams`】 key1=value1&key2=value2\n\n```javascript\nexport function submitCollectRecordDetail(data) {\n\tdata = {\n\t\tsessionId: store.state.MyToken,\n\t\tlanguageCode: store.state.lKey,\n\t\titemCode: store.state.itemCode,\n\t\t...data,\n\t}\n\tdata = new URLSearchParams(data).toString()\n\treturn request({\n\t\turl: '/apiGlobal/submitCollectRecordDetail',\n\t\tmethod: 'post',\n\t\tdata: data,\n\t\theaders: {\n\t\t\t'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\n\t\t},\n\t})\n}\n```\n\n![](/images/get-post入参格式/urlencoded1.png)\n![](/images/get-post入参格式/urlencoded2.png)\n![](/images/get-post入参格式/urlencoded3.png)\n\n- `multipart/form-data` 发送表单数据，支持文件上传\n\n```javascript\nexport function submitCollectRecordDetail(data) {\n\tdata = {\n\t\tsessionId: store.state.MyToken,\n\t\tlanguageCode: store.state.lKey,\n\t\titemCode: store.state.itemCode,\n\t\t...data,\n\t}\n\tlet obj = new FormData()\n\tObject.keys(data).forEach((key) => {\n\t\tobj.append(key, data[key])\n\t})\n\treturn request({\n\t\turl: '/apiGlobal/submitCollectRecordDetail',\n\t\tmethod: 'post',\n\t\tdata: obj,\n\t\theaders: {\n\t\t\t'Content-Type': 'multipart/form-data',\n\t\t},\n\t})\n}\n```\n\n![](/images/get-post入参格式/formdata1.png)\n![](/images/get-post入参格式/formdata2.png)\n![](/images/get-post入参格式/formdata3.png)\n\n#### 注意事项：\n\n- `multipart/form-data`  的  Content-Type：\n  使用  FormData  时，不要手动设置  Content-Type，浏览器会自动添加正确的  Content-Type  和边界（boundary）。\n\n- 字符编码：如果需要指定字符编码，可以在  Content-Type  中添加  charset\n  例如：`Content-Type: application/json;charset=UTF-8`\n\n- CORS 请求：\n  如果跨域请求，确保服务器支持  Content-Type，并在响应头中设置  `Access-Control-Allow-Headers`\n\n- Postman 中看数据：\n  Get 请求，params 入参，在 params 中查看数据\n  ![](/images/get-post入参格式/params.png)\n  Post 请求，data 入参，在 body 中查看数据，还有数据格式(Content-Type 决定数据格式)\n  ![](/images/get-post入参格式/bodyData.png)\n","slug":"get-post入参格式","published":1,"updated":"2025-07-31T09:59:35.014Z","comments":1,"layout":"post","photos":[],"_id":"cmel89pe30006rwnc1yxa50qn","content":"<h4 id=\"1、get-请求：\"><a href=\"#1、get-请求：\" class=\"headerlink\" title=\"1、get 请求：\"></a>1、get 请求：</h4><ul>\n<li><p>用 params 入参</p>\n</li>\n<li><p>数据传递方式：通过 URL 形式参数传递，拼接在请求地址上</p>\n</li>\n<li><p>GET 请求是否可以设置  Content-Type？</p>\n<ul>\n<li><p>可以设置，但通常没有意义，因为 GET 请求的请求体通常为空。</p>\n</li>\n<li><p>如果强行设置  Content-Type，浏览器和服务器可能会忽略它。</p>\n<p><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/get.png\"></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2、post-请求：\"><a href=\"#2、post-请求：\" class=\"headerlink\" title=\"2、post 请求：\"></a>2、post 请求：</h3><p>（1）用 data 传参，data：普通对象、FormData 表单对象</p>\n<p>（2）在前端开发中，发送 POST 请求时，正确设置 Content-Type 是非常重要的，因为它告诉服务器请求体的数据格式。</p>\n<ul>\n<li><code>application/json</code> 发送 JSON 格式的数据</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">submitCollectRecordDetail</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> data = &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">sessionId</span>: <span class=\"string\">&#x27;xzdfsd&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">languageCode</span>: <span class=\"string\">&#x27;CH&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">itemCode</span>: <span class=\"string\">&#x27;AMC&#x27;</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"title function_\">request</span>(&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">url</span>: <span class=\"string\">&#x27;/apiGlobal/submitCollectRecordDetail&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">method</span>: <span class=\"string\">&#x27;post&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">data</span>: data,</span><br><span class=\"line\">\t\t<span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/josn;charset=UTF-8&#x27;</span>,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/json1.png\"><br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/json2.png\"><br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/json3.png\"></p>\n<ul>\n<li><code>application/x-www-form-urlencoded</code> 发送表单数据，键值对格式【<code>URLSearchParams</code>】 key1&#x3D;value1&amp;key2&#x3D;value2</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">submitCollectRecordDetail</span>(<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">\tdata = &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">sessionId</span>: store.<span class=\"property\">state</span>.<span class=\"property\">MyToken</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">languageCode</span>: store.<span class=\"property\">state</span>.<span class=\"property\">lKey</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">itemCode</span>: store.<span class=\"property\">state</span>.<span class=\"property\">itemCode</span>,</span><br><span class=\"line\">\t\t...data,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tdata = <span class=\"keyword\">new</span> <span class=\"title class_\">URLSearchParams</span>(data).<span class=\"title function_\">toString</span>()</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"title function_\">request</span>(&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">url</span>: <span class=\"string\">&#x27;/apiGlobal/submitCollectRecordDetail&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">method</span>: <span class=\"string\">&#x27;post&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">data</span>: data,</span><br><span class=\"line\">\t\t<span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/x-www-form-urlencoded;charset=UTF-8&#x27;</span>,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/urlencoded1.png\"><br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/urlencoded2.png\"><br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/urlencoded3.png\"></p>\n<ul>\n<li><code>multipart/form-data</code> 发送表单数据，支持文件上传</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">submitCollectRecordDetail</span>(<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">\tdata = &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">sessionId</span>: store.<span class=\"property\">state</span>.<span class=\"property\">MyToken</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">languageCode</span>: store.<span class=\"property\">state</span>.<span class=\"property\">lKey</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">itemCode</span>: store.<span class=\"property\">state</span>.<span class=\"property\">itemCode</span>,</span><br><span class=\"line\">\t\t...data,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> obj = <span class=\"keyword\">new</span> <span class=\"title class_\">FormData</span>()</span><br><span class=\"line\">\t<span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(data).<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">key</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\tobj.<span class=\"title function_\">append</span>(key, data[key])</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"title function_\">request</span>(&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">url</span>: <span class=\"string\">&#x27;/apiGlobal/submitCollectRecordDetail&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">method</span>: <span class=\"string\">&#x27;post&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">data</span>: obj,</span><br><span class=\"line\">\t\t<span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;multipart/form-data&#x27;</span>,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/formdata1.png\"><br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/formdata2.png\"><br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/formdata3.png\"></p>\n<h4 id=\"注意事项：\"><a href=\"#注意事项：\" class=\"headerlink\" title=\"注意事项：\"></a>注意事项：</h4><ul>\n<li><p><code>multipart/form-data</code>  的  Content-Type：<br>使用  FormData  时，不要手动设置  Content-Type，浏览器会自动添加正确的  Content-Type  和边界（boundary）。</p>\n</li>\n<li><p>字符编码：如果需要指定字符编码，可以在  Content-Type  中添加  charset<br>例如：<code>Content-Type: application/json;charset=UTF-8</code></p>\n</li>\n<li><p>CORS 请求：<br>如果跨域请求，确保服务器支持  Content-Type，并在响应头中设置  <code>Access-Control-Allow-Headers</code></p>\n</li>\n<li><p>Postman 中看数据：<br>Get 请求，params 入参，在 params 中查看数据<br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/params.png\"><br>Post 请求，data 入参，在 body 中查看数据，还有数据格式(Content-Type 决定数据格式)<br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/bodyData.png\"></p>\n</li>\n</ul>\n","excerpt":"","more":"<h4 id=\"1、get-请求：\"><a href=\"#1、get-请求：\" class=\"headerlink\" title=\"1、get 请求：\"></a>1、get 请求：</h4><ul>\n<li><p>用 params 入参</p>\n</li>\n<li><p>数据传递方式：通过 URL 形式参数传递，拼接在请求地址上</p>\n</li>\n<li><p>GET 请求是否可以设置  Content-Type？</p>\n<ul>\n<li><p>可以设置，但通常没有意义，因为 GET 请求的请求体通常为空。</p>\n</li>\n<li><p>如果强行设置  Content-Type，浏览器和服务器可能会忽略它。</p>\n<p><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/get.png\"></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2、post-请求：\"><a href=\"#2、post-请求：\" class=\"headerlink\" title=\"2、post 请求：\"></a>2、post 请求：</h3><p>（1）用 data 传参，data：普通对象、FormData 表单对象</p>\n<p>（2）在前端开发中，发送 POST 请求时，正确设置 Content-Type 是非常重要的，因为它告诉服务器请求体的数据格式。</p>\n<ul>\n<li><code>application/json</code> 发送 JSON 格式的数据</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">submitCollectRecordDetail</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> data = &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">sessionId</span>: <span class=\"string\">&#x27;xzdfsd&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">languageCode</span>: <span class=\"string\">&#x27;CH&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">itemCode</span>: <span class=\"string\">&#x27;AMC&#x27;</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"title function_\">request</span>(&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">url</span>: <span class=\"string\">&#x27;/apiGlobal/submitCollectRecordDetail&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">method</span>: <span class=\"string\">&#x27;post&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">data</span>: data,</span><br><span class=\"line\">\t\t<span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/josn;charset=UTF-8&#x27;</span>,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/json1.png\"><br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/json2.png\"><br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/json3.png\"></p>\n<ul>\n<li><code>application/x-www-form-urlencoded</code> 发送表单数据，键值对格式【<code>URLSearchParams</code>】 key1&#x3D;value1&amp;key2&#x3D;value2</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">submitCollectRecordDetail</span>(<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">\tdata = &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">sessionId</span>: store.<span class=\"property\">state</span>.<span class=\"property\">MyToken</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">languageCode</span>: store.<span class=\"property\">state</span>.<span class=\"property\">lKey</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">itemCode</span>: store.<span class=\"property\">state</span>.<span class=\"property\">itemCode</span>,</span><br><span class=\"line\">\t\t...data,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tdata = <span class=\"keyword\">new</span> <span class=\"title class_\">URLSearchParams</span>(data).<span class=\"title function_\">toString</span>()</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"title function_\">request</span>(&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">url</span>: <span class=\"string\">&#x27;/apiGlobal/submitCollectRecordDetail&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">method</span>: <span class=\"string\">&#x27;post&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">data</span>: data,</span><br><span class=\"line\">\t\t<span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/x-www-form-urlencoded;charset=UTF-8&#x27;</span>,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/urlencoded1.png\"><br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/urlencoded2.png\"><br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/urlencoded3.png\"></p>\n<ul>\n<li><code>multipart/form-data</code> 发送表单数据，支持文件上传</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">submitCollectRecordDetail</span>(<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">\tdata = &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">sessionId</span>: store.<span class=\"property\">state</span>.<span class=\"property\">MyToken</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">languageCode</span>: store.<span class=\"property\">state</span>.<span class=\"property\">lKey</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">itemCode</span>: store.<span class=\"property\">state</span>.<span class=\"property\">itemCode</span>,</span><br><span class=\"line\">\t\t...data,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> obj = <span class=\"keyword\">new</span> <span class=\"title class_\">FormData</span>()</span><br><span class=\"line\">\t<span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(data).<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">key</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\tobj.<span class=\"title function_\">append</span>(key, data[key])</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"title function_\">request</span>(&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">url</span>: <span class=\"string\">&#x27;/apiGlobal/submitCollectRecordDetail&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">method</span>: <span class=\"string\">&#x27;post&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">data</span>: obj,</span><br><span class=\"line\">\t\t<span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;multipart/form-data&#x27;</span>,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/formdata1.png\"><br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/formdata2.png\"><br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/formdata3.png\"></p>\n<h4 id=\"注意事项：\"><a href=\"#注意事项：\" class=\"headerlink\" title=\"注意事项：\"></a>注意事项：</h4><ul>\n<li><p><code>multipart/form-data</code>  的  Content-Type：<br>使用  FormData  时，不要手动设置  Content-Type，浏览器会自动添加正确的  Content-Type  和边界（boundary）。</p>\n</li>\n<li><p>字符编码：如果需要指定字符编码，可以在  Content-Type  中添加  charset<br>例如：<code>Content-Type: application/json;charset=UTF-8</code></p>\n</li>\n<li><p>CORS 请求：<br>如果跨域请求，确保服务器支持  Content-Type，并在响应头中设置  <code>Access-Control-Allow-Headers</code></p>\n</li>\n<li><p>Postman 中看数据：<br>Get 请求，params 入参，在 params 中查看数据<br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/params.png\"><br>Post 请求，data 入参，在 body 中查看数据，还有数据格式(Content-Type 决定数据格式)<br><img src=\"/images/get-post%E5%85%A5%E5%8F%82%E6%A0%BC%E5%BC%8F/bodyData.png\"></p>\n</li>\n</ul>\n"},{"title":"js判断数据类型","date":"2025-07-23T07:20:50.000Z","cover":"/images/js判断数据类型/cover.jpg","_content":"\n### typeof A 判断数据类型\n\n```javascript\n// 基础数据类型：数字、字符串、布尔值、未定义、空值、Symbol(ES6新增)、BigInt(ES2020新增)\nconsole.log(typeof 42) // \"number\"\nconsole.log(typeof 'Hello, world!') // \"string\"\nconsole.log(typeof true) // \"boolean\"\nconsole.log(typeof undefined) // \"undefined\"\nconsole.log(typeof null) // \"object\" (这是一个历史遗留问题)\nconsole.log(typeof Symbol('symbol')) // \"symbol\"\nconsole.log(typeof 123n) // \"bigint\"\n\n// 引用数据类型：普通对象、数组、函数、new Date()等\nconsole.log(typeof { name: 'Alice', age: 25 }) // \"object\"\nconsole.log(typeof [1, 2, 3]) // \"object\"\nconsole.log(typeof new Date()) // \"object\"\nconsole.log(typeof function () {} || typeof new Function()) // \"function\" (特殊)\n```\n\n【注意】\n\n- 基础数据类型：typeof 返回对应类型，除了 null，typeof null 返回\"object\"是一个 JS 的历史遗留问题\n- 数组 Array/函数 Function/new Date()/new RegExp()/new XXX 等都属于对象类型范畴，属于广义的\"对象\"，但不是狭义的\"普通对象\"，所以 typeof 判断类型都返回\"object\"，除了函数 Function\n- JavaScript 为了突出函数的\"可执行性\"和简化类型判断而做的特殊设计 —— 函数本质上是一种\"可调用的对象\"，但 typeof 刻意返回\"function\"来强调其特殊性\n\n### A instanceof B 判断数据类型\n\n- instanceof  用于判断一个对象是否是另一个对象的实例\n- instanceof  对于内置对象类型和自定义类都有效\n- instanceof  对于原始类型无效，但可以通过构造函数包装对象进行判断\n\n```javascript\n// 创建一个构造函数\nfunction Person(name) {\n\tthis.name = name\n}\n// 创建一个实例\nconst alice = new Person('Alice')\n// 判断实例与构造函数的关系\nconsole.log(alice instanceof Person) // true\n\n// 判断内置对象类型\nconsole.log([] instanceof Array) // true\nconsole.log({} instanceof Object) // true\nconsole.log(new Date() instanceof Date) // true\nconsole.log(/regex/ instanceof RegExp) // true\n// 自定义类\nclass Animal {}\nclass Dog extends Animal {}\nconst myDog = new Dog()\nconsole.log(myDog instanceof Dog) // true\nconsole.log(myDog instanceof Animal) // true\nconsole.log(myDog instanceof Object) // true\n\n// 注意 `instanceof` 只对对象有效，对原始类型无效\nconsole.log(42 instanceof Number) // false\nconsole.log('Hello' instanceof String) // false\nconsole.log(true instanceof Boolean) // false\n\n// 对于原始类型，可以使用构造函数包装对象进行判断\nconsole.log(new Number(42) instanceof Number) // true\nconsole.log(new String('Hello') instanceof String) // true\nconsole.log(new Boolean(true) instanceof Boolean) // true\nnull instanceof null // 控制台报错：右侧不是对象\n```\n\n### Array.isArray(value)：专门用于判断一个值是否为数组\n\n```javascript\n// 数组\nconsole.log(Array.isArray([1, 2, 3])) // true\n// 对象\nconsole.log(Array.isArray({ name: 'Alice', age: 25 })) // false\n// 字符串\nconsole.log(Array.isArray('Hello, world!')) // false\n// 数字\nconsole.log(Array.isArray(42)) // false\n// 布尔值\nconsole.log(Array.isArray(true)) // false\n// null\nconsole.log(Array.isArray(null)) // false\n// undefined\nconsole.log(Array.isArray(undefined)) // false\n// 函数\nconsole.log(Array.isArray(function () {})) // false\n// Date 对象\nconsole.log(Array.isArray(new Date())) // false\n// 正则表达式\nconsole.log(Array.isArray(/regex/)) // false\n```\n\n### 判断是否为数组的方法\n\n- 推荐使用`Array.isArray(arr)`方法，它是最简洁和可靠的，Es6 专门为此设计的方法\n- `A instanceof B`\n  const value = [1, 2, 3];\n  console.log(value instanceof Array); // true\n- `Object.prototype.toString` (老方法)\n  const value = [1, 2, 3];\n  console.log(Object.prototype.toString.call(value) === '[object Array]'); // true\n\n### 写一个可以判断任意数据类型的方法（`原生数据类型`）\n\n```javascript\nfunction getType(value) {\n\t// 使用 Object.prototype.toString.call() 获取类型标签\n\tconst typeTag = Object.prototype.toString.call(value)\n\t// 从标签中提取类型名称（如 \"[object String]\" → \"String\"）\n\tconst typeText = typeTag.slice(8, -1)\n\treturn typeText // 返回类型: 首字母大写的字符串\n\t// return typeText.toLowerCase();  // 全部小写\n}\n// 测试示例\nconsole.log(getType('hello')) // \"String\"（字符串）\nconsole.log(getType(123)) // \"Number\"（数字）\nconsole.log(getType(true)) // \"Boolean\"（布尔值）\nconsole.log(getType(null)) // \"Null\"（null）\nconsole.log(getType(undefined)) // \"Undefined\"（undefined）\nconsole.log(getType({})) // \"Object\"（普通对象）\nconsole.log(getType([])) // \"Array\"（数组）\nconsole.log(getType(function () {})) // \"Function\"（函数）\nconsole.log(getType(new Date())) // \"Date\"（日期对象）\nconsole.log(getType(/\\d+/)) // \"RegExp\"（正则对象）\nconsole.log(getType(new Map())) // \"Map\"（Map对象）\nconsole.log(getType(new WeakMap())) // \"WeakMap\"（WeakMap对象）\nconsole.log(getType(new Set())) // \"Set\"（Set对象）\nconsole.log(getType(new WeakSet())) // \"WeakSet\"（WeakSet对象）\nconsole.log(getType(Symbol())) // \"Symbol\"（Symbol类型）\nconsole.log(getType(new Error())) // \"Error\"（错误对象）\nconsole.log(getType(new Promise(() => {}))) // 'Promise'\nconsole.log(getType(new ArrayBuffer(10))) // 'Arraybuffer'\nconsole.log(getType(new Int32Array())) // 'Typedarray'\nconsole.log(getType(NaN)) // 'Number'（NaN属于数字类型）\n```\n\n### 写一个可以判断`原生数据类型+自定义数据类型`的方法\n\n- 在 JS 中，除了原生数据类型，还可以自定义数据类型\n\n  - 在 JavaScript 中，自定义数据类型通常通过构造函数（new 关键字）或 ES6 Class（class 关键字）实现，本质是创建具有特定属性和方法的对象类型\n  - 自定义数据类型，无法用 Object.prototype.toString.call()判断类型，得到的都是 Object\n    ```javascript\n    function Person(name, age) {\n    \tthis.name = name\n    \tthis.age = age\n    }\n    const alice = new Person('Alice', 20)\n    Object.prototype.toString.call(alice) // '[object Object]'\n    ```\n\n- 先判断自定义数据类型，是则返回自定义数据类型的构造函数名，否则返回对应原生数据类型\n\n```javascript\n/**\n * 综合判断所有数据类型，包括原生类型和自定义类型\n * @param {*} value - 需要判断类型的值\n * @returns {string} 类型名称（如 'number'、'string'、'array'、'Person'、'Book' 等）\n */\nfunction getFullType(value) {\n\t// 处理TypedArray\n\tif (ArrayBuffer.isView(value)) {\n\t\treturn 'typedarray'\n\t}\n\t// 处理自定义类型 —— 检查构造函数名称\n\tif (value.constructor && typeof value.constructor === 'function') {\n\t\tconst constructorName = value.constructor.name\n\t\t// 排除Object构造函数（避免所有对象都返回'Object'）\n\t\tif (constructorName !== 'Object') {\n\t\t\treturn constructorName\n\t\t}\n\t}\n\t// 处理自定义标识（如果对象有Symbol.toStringTag）\n\tif (typeof value[Symbol.toStringTag] === 'string') {\n\t\treturn value[Symbol.toStringTag]\n\t}\n\n\t// 判断原生数据类型\n\tconst typeTag = Object.prototype.toString.call(value)\n\treturn typeTag.slice(8, -1).toLowerCase()\n}\n\n// 测试原生类型\nconsole.log(getFullType('hello')) // 'string'\nconsole.log(getFullType(123)) // 'number'\nconsole.log(getFullType(true)) // 'boolean'\nconsole.log(getFullType(null)) // 'null'\nconsole.log(getFullType(undefined)) // 'undefined'\nconsole.log(getFullType([])) // 'array'\nconsole.log(getFullType({})) // 'object'\nconsole.log(getFullType(new Date())) // 'date'\nconsole.log(getFullType(/\\d+/)) // 'regexp'\nconsole.log(getFullType(new Map())) // 'map'\nconsole.log(getFullType(function () {})) // 'function'\n// 测试自定义构造函数\nfunction Person(name) {\n\tthis.name = name\n}\nconsole.log(getFullType(new Person('张三'))) // 'Person'\n// 测试ES6类\nclass Book {\n\tconstructor(title) {\n\t\tthis.title = title\n\t}\n}\nconsole.log(getFullType(new Book('JavaScript指南'))) // 'Book'\n// 测试带自定义标识的类\nclass Product {\n\tconstructor(id) {\n\t\tthis.id = id\n\t\tthis[Symbol.toStringTag] = 'Product'\n\t}\n}\nconsole.log(getFullType(new Product(1001))) // 'Product'\n```\n","source":"_posts/2025-07-23-js判断数据类型.md","raw":"---\ntitle: js判断数据类型\ndate: 2025-07-23 15:20:50\ntags:\ncategories: Javascript\ncover: /images/js判断数据类型/cover.jpg # 封面图\n---\n\n### typeof A 判断数据类型\n\n```javascript\n// 基础数据类型：数字、字符串、布尔值、未定义、空值、Symbol(ES6新增)、BigInt(ES2020新增)\nconsole.log(typeof 42) // \"number\"\nconsole.log(typeof 'Hello, world!') // \"string\"\nconsole.log(typeof true) // \"boolean\"\nconsole.log(typeof undefined) // \"undefined\"\nconsole.log(typeof null) // \"object\" (这是一个历史遗留问题)\nconsole.log(typeof Symbol('symbol')) // \"symbol\"\nconsole.log(typeof 123n) // \"bigint\"\n\n// 引用数据类型：普通对象、数组、函数、new Date()等\nconsole.log(typeof { name: 'Alice', age: 25 }) // \"object\"\nconsole.log(typeof [1, 2, 3]) // \"object\"\nconsole.log(typeof new Date()) // \"object\"\nconsole.log(typeof function () {} || typeof new Function()) // \"function\" (特殊)\n```\n\n【注意】\n\n- 基础数据类型：typeof 返回对应类型，除了 null，typeof null 返回\"object\"是一个 JS 的历史遗留问题\n- 数组 Array/函数 Function/new Date()/new RegExp()/new XXX 等都属于对象类型范畴，属于广义的\"对象\"，但不是狭义的\"普通对象\"，所以 typeof 判断类型都返回\"object\"，除了函数 Function\n- JavaScript 为了突出函数的\"可执行性\"和简化类型判断而做的特殊设计 —— 函数本质上是一种\"可调用的对象\"，但 typeof 刻意返回\"function\"来强调其特殊性\n\n### A instanceof B 判断数据类型\n\n- instanceof  用于判断一个对象是否是另一个对象的实例\n- instanceof  对于内置对象类型和自定义类都有效\n- instanceof  对于原始类型无效，但可以通过构造函数包装对象进行判断\n\n```javascript\n// 创建一个构造函数\nfunction Person(name) {\n\tthis.name = name\n}\n// 创建一个实例\nconst alice = new Person('Alice')\n// 判断实例与构造函数的关系\nconsole.log(alice instanceof Person) // true\n\n// 判断内置对象类型\nconsole.log([] instanceof Array) // true\nconsole.log({} instanceof Object) // true\nconsole.log(new Date() instanceof Date) // true\nconsole.log(/regex/ instanceof RegExp) // true\n// 自定义类\nclass Animal {}\nclass Dog extends Animal {}\nconst myDog = new Dog()\nconsole.log(myDog instanceof Dog) // true\nconsole.log(myDog instanceof Animal) // true\nconsole.log(myDog instanceof Object) // true\n\n// 注意 `instanceof` 只对对象有效，对原始类型无效\nconsole.log(42 instanceof Number) // false\nconsole.log('Hello' instanceof String) // false\nconsole.log(true instanceof Boolean) // false\n\n// 对于原始类型，可以使用构造函数包装对象进行判断\nconsole.log(new Number(42) instanceof Number) // true\nconsole.log(new String('Hello') instanceof String) // true\nconsole.log(new Boolean(true) instanceof Boolean) // true\nnull instanceof null // 控制台报错：右侧不是对象\n```\n\n### Array.isArray(value)：专门用于判断一个值是否为数组\n\n```javascript\n// 数组\nconsole.log(Array.isArray([1, 2, 3])) // true\n// 对象\nconsole.log(Array.isArray({ name: 'Alice', age: 25 })) // false\n// 字符串\nconsole.log(Array.isArray('Hello, world!')) // false\n// 数字\nconsole.log(Array.isArray(42)) // false\n// 布尔值\nconsole.log(Array.isArray(true)) // false\n// null\nconsole.log(Array.isArray(null)) // false\n// undefined\nconsole.log(Array.isArray(undefined)) // false\n// 函数\nconsole.log(Array.isArray(function () {})) // false\n// Date 对象\nconsole.log(Array.isArray(new Date())) // false\n// 正则表达式\nconsole.log(Array.isArray(/regex/)) // false\n```\n\n### 判断是否为数组的方法\n\n- 推荐使用`Array.isArray(arr)`方法，它是最简洁和可靠的，Es6 专门为此设计的方法\n- `A instanceof B`\n  const value = [1, 2, 3];\n  console.log(value instanceof Array); // true\n- `Object.prototype.toString` (老方法)\n  const value = [1, 2, 3];\n  console.log(Object.prototype.toString.call(value) === '[object Array]'); // true\n\n### 写一个可以判断任意数据类型的方法（`原生数据类型`）\n\n```javascript\nfunction getType(value) {\n\t// 使用 Object.prototype.toString.call() 获取类型标签\n\tconst typeTag = Object.prototype.toString.call(value)\n\t// 从标签中提取类型名称（如 \"[object String]\" → \"String\"）\n\tconst typeText = typeTag.slice(8, -1)\n\treturn typeText // 返回类型: 首字母大写的字符串\n\t// return typeText.toLowerCase();  // 全部小写\n}\n// 测试示例\nconsole.log(getType('hello')) // \"String\"（字符串）\nconsole.log(getType(123)) // \"Number\"（数字）\nconsole.log(getType(true)) // \"Boolean\"（布尔值）\nconsole.log(getType(null)) // \"Null\"（null）\nconsole.log(getType(undefined)) // \"Undefined\"（undefined）\nconsole.log(getType({})) // \"Object\"（普通对象）\nconsole.log(getType([])) // \"Array\"（数组）\nconsole.log(getType(function () {})) // \"Function\"（函数）\nconsole.log(getType(new Date())) // \"Date\"（日期对象）\nconsole.log(getType(/\\d+/)) // \"RegExp\"（正则对象）\nconsole.log(getType(new Map())) // \"Map\"（Map对象）\nconsole.log(getType(new WeakMap())) // \"WeakMap\"（WeakMap对象）\nconsole.log(getType(new Set())) // \"Set\"（Set对象）\nconsole.log(getType(new WeakSet())) // \"WeakSet\"（WeakSet对象）\nconsole.log(getType(Symbol())) // \"Symbol\"（Symbol类型）\nconsole.log(getType(new Error())) // \"Error\"（错误对象）\nconsole.log(getType(new Promise(() => {}))) // 'Promise'\nconsole.log(getType(new ArrayBuffer(10))) // 'Arraybuffer'\nconsole.log(getType(new Int32Array())) // 'Typedarray'\nconsole.log(getType(NaN)) // 'Number'（NaN属于数字类型）\n```\n\n### 写一个可以判断`原生数据类型+自定义数据类型`的方法\n\n- 在 JS 中，除了原生数据类型，还可以自定义数据类型\n\n  - 在 JavaScript 中，自定义数据类型通常通过构造函数（new 关键字）或 ES6 Class（class 关键字）实现，本质是创建具有特定属性和方法的对象类型\n  - 自定义数据类型，无法用 Object.prototype.toString.call()判断类型，得到的都是 Object\n    ```javascript\n    function Person(name, age) {\n    \tthis.name = name\n    \tthis.age = age\n    }\n    const alice = new Person('Alice', 20)\n    Object.prototype.toString.call(alice) // '[object Object]'\n    ```\n\n- 先判断自定义数据类型，是则返回自定义数据类型的构造函数名，否则返回对应原生数据类型\n\n```javascript\n/**\n * 综合判断所有数据类型，包括原生类型和自定义类型\n * @param {*} value - 需要判断类型的值\n * @returns {string} 类型名称（如 'number'、'string'、'array'、'Person'、'Book' 等）\n */\nfunction getFullType(value) {\n\t// 处理TypedArray\n\tif (ArrayBuffer.isView(value)) {\n\t\treturn 'typedarray'\n\t}\n\t// 处理自定义类型 —— 检查构造函数名称\n\tif (value.constructor && typeof value.constructor === 'function') {\n\t\tconst constructorName = value.constructor.name\n\t\t// 排除Object构造函数（避免所有对象都返回'Object'）\n\t\tif (constructorName !== 'Object') {\n\t\t\treturn constructorName\n\t\t}\n\t}\n\t// 处理自定义标识（如果对象有Symbol.toStringTag）\n\tif (typeof value[Symbol.toStringTag] === 'string') {\n\t\treturn value[Symbol.toStringTag]\n\t}\n\n\t// 判断原生数据类型\n\tconst typeTag = Object.prototype.toString.call(value)\n\treturn typeTag.slice(8, -1).toLowerCase()\n}\n\n// 测试原生类型\nconsole.log(getFullType('hello')) // 'string'\nconsole.log(getFullType(123)) // 'number'\nconsole.log(getFullType(true)) // 'boolean'\nconsole.log(getFullType(null)) // 'null'\nconsole.log(getFullType(undefined)) // 'undefined'\nconsole.log(getFullType([])) // 'array'\nconsole.log(getFullType({})) // 'object'\nconsole.log(getFullType(new Date())) // 'date'\nconsole.log(getFullType(/\\d+/)) // 'regexp'\nconsole.log(getFullType(new Map())) // 'map'\nconsole.log(getFullType(function () {})) // 'function'\n// 测试自定义构造函数\nfunction Person(name) {\n\tthis.name = name\n}\nconsole.log(getFullType(new Person('张三'))) // 'Person'\n// 测试ES6类\nclass Book {\n\tconstructor(title) {\n\t\tthis.title = title\n\t}\n}\nconsole.log(getFullType(new Book('JavaScript指南'))) // 'Book'\n// 测试带自定义标识的类\nclass Product {\n\tconstructor(id) {\n\t\tthis.id = id\n\t\tthis[Symbol.toStringTag] = 'Product'\n\t}\n}\nconsole.log(getFullType(new Product(1001))) // 'Product'\n```\n","slug":"js判断数据类型","published":1,"updated":"2025-09-13T08:09:15.103Z","_id":"cmel89pe40008rwnca5qm43tr","comments":1,"layout":"post","photos":[],"content":"<h3 id=\"typeof-A-判断数据类型\"><a href=\"#typeof-A-判断数据类型\" class=\"headerlink\" title=\"typeof A 判断数据类型\"></a>typeof A 判断数据类型</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 基础数据类型：数字、字符串、布尔值、未定义、空值、Symbol(ES6新增)、BigInt(ES2020新增)</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> <span class=\"number\">42</span>) <span class=\"comment\">// &quot;number&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> <span class=\"string\">&#x27;Hello, world!&#x27;</span>) <span class=\"comment\">// &quot;string&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> <span class=\"literal\">true</span>) <span class=\"comment\">// &quot;boolean&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> <span class=\"literal\">undefined</span>) <span class=\"comment\">// &quot;undefined&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> <span class=\"literal\">null</span>) <span class=\"comment\">// &quot;object&quot; (这是一个历史遗留问题)</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> <span class=\"title class_\">Symbol</span>(<span class=\"string\">&#x27;symbol&#x27;</span>)) <span class=\"comment\">// &quot;symbol&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> <span class=\"number\">123n</span>) <span class=\"comment\">// &quot;bigint&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 引用数据类型：普通对象、数组、函数、new Date()等</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Alice&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">25</span> &#125;) <span class=\"comment\">// &quot;object&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]) <span class=\"comment\">// &quot;object&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()) <span class=\"comment\">// &quot;object&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125; || <span class=\"keyword\">typeof</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Function</span>()) <span class=\"comment\">// &quot;function&quot; (特殊)</span></span><br></pre></td></tr></table></figure>\n\n<p>【注意】</p>\n<ul>\n<li>基础数据类型：typeof 返回对应类型，除了 null，typeof null 返回”object”是一个 JS 的历史遗留问题</li>\n<li>数组 Array&#x2F;函数 Function&#x2F;new Date()&#x2F;new RegExp()&#x2F;new XXX 等都属于对象类型范畴，属于广义的”对象”，但不是狭义的”普通对象”，所以 typeof 判断类型都返回”object”，除了函数 Function</li>\n<li>JavaScript 为了突出函数的”可执行性”和简化类型判断而做的特殊设计 —— 函数本质上是一种”可调用的对象”，但 typeof 刻意返回”function”来强调其特殊性</li>\n</ul>\n<h3 id=\"A-instanceof-B-判断数据类型\"><a href=\"#A-instanceof-B-判断数据类型\" class=\"headerlink\" title=\"A instanceof B 判断数据类型\"></a>A instanceof B 判断数据类型</h3><ul>\n<li>instanceof  用于判断一个对象是否是另一个对象的实例</li>\n<li>instanceof  对于内置对象类型和自定义类都有效</li>\n<li>instanceof  对于原始类型无效，但可以通过构造函数包装对象进行判断</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建一个构造函数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\">name</span>) &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 创建一个实例</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> alice = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>(<span class=\"string\">&#x27;Alice&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 判断实例与构造函数的关系</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(alice <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Person</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 判断内置对象类型</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>([] <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Array</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(&#123;&#125; <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Object</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>() <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Date</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/regex/</span> <span class=\"keyword\">instanceof</span> <span class=\"title class_\">RegExp</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"comment\">// 自定义类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Animal</span> &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Dog</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">Animal</span> &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> myDog = <span class=\"keyword\">new</span> <span class=\"title class_\">Dog</span>()</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myDog <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Dog</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myDog <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Animal</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myDog <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Object</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 注意 `instanceof` 只对对象有效，对原始类型无效</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">42</span> <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Number</span>) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Hello&#x27;</span> <span class=\"keyword\">instanceof</span> <span class=\"title class_\">String</span>) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"literal\">true</span> <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Boolean</span>) <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 对于原始类型，可以使用构造函数包装对象进行判断</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Number</span>(<span class=\"number\">42</span>) <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Number</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(<span class=\"string\">&#x27;Hello&#x27;</span>) <span class=\"keyword\">instanceof</span> <span class=\"title class_\">String</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Boolean</span>(<span class=\"literal\">true</span>) <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Boolean</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"literal\">null</span> <span class=\"keyword\">instanceof</span> <span class=\"literal\">null</span> <span class=\"comment\">// 控制台报错：右侧不是对象</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Array-isArray-value-：专门用于判断一个值是否为数组\"><a href=\"#Array-isArray-value-：专门用于判断一个值是否为数组\" class=\"headerlink\" title=\"Array.isArray(value)：专门用于判断一个值是否为数组\"></a>Array.isArray(value)：专门用于判断一个值是否为数组</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 数组</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>])) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"comment\">// 对象</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Alice&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">25</span> &#125;)) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"comment\">// 字符串</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(<span class=\"string\">&#x27;Hello, world!&#x27;</span>)) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"comment\">// 数字</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(<span class=\"number\">42</span>)) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"comment\">// 布尔值</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(<span class=\"literal\">true</span>)) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"comment\">// null</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(<span class=\"literal\">null</span>)) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"comment\">// undefined</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(<span class=\"literal\">undefined</span>)) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"comment\">// 函数</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;)) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"comment\">// Date 对象</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>())) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"comment\">// 正则表达式</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(<span class=\"regexp\">/regex/</span>)) <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"判断是否为数组的方法\"><a href=\"#判断是否为数组的方法\" class=\"headerlink\" title=\"判断是否为数组的方法\"></a>判断是否为数组的方法</h3><ul>\n<li>推荐使用<code>Array.isArray(arr)</code>方法，它是最简洁和可靠的，Es6 专门为此设计的方法</li>\n<li><code>A instanceof B</code><br>const value &#x3D; [1, 2, 3];<br>console.log(value instanceof Array); &#x2F;&#x2F; true</li>\n<li><code>Object.prototype.toString</code> (老方法)<br>const value &#x3D; [1, 2, 3];<br>console.log(Object.prototype.toString.call(value) &#x3D;&#x3D;&#x3D; ‘[object Array]’); &#x2F;&#x2F; true</li>\n</ul>\n<h3 id=\"写一个可以判断任意数据类型的方法（原生数据类型）\"><a href=\"#写一个可以判断任意数据类型的方法（原生数据类型）\" class=\"headerlink\" title=\"写一个可以判断任意数据类型的方法（原生数据类型）\"></a>写一个可以判断任意数据类型的方法（<code>原生数据类型</code>）</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getType</span>(<span class=\"params\">value</span>) &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 使用 Object.prototype.toString.call() 获取类型标签</span></span><br><span class=\"line\">\t<span class=\"keyword\">const</span> typeTag = <span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(value)</span><br><span class=\"line\">\t<span class=\"comment\">// 从标签中提取类型名称（如 &quot;[object String]&quot; → &quot;String&quot;）</span></span><br><span class=\"line\">\t<span class=\"keyword\">const</span> typeText = typeTag.<span class=\"title function_\">slice</span>(<span class=\"number\">8</span>, -<span class=\"number\">1</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> typeText <span class=\"comment\">// 返回类型: 首字母大写的字符串</span></span><br><span class=\"line\">\t<span class=\"comment\">// return typeText.toLowerCase();  // 全部小写</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 测试示例</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"string\">&#x27;hello&#x27;</span>)) <span class=\"comment\">// &quot;String&quot;（字符串）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"number\">123</span>)) <span class=\"comment\">// &quot;Number&quot;（数字）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"literal\">true</span>)) <span class=\"comment\">// &quot;Boolean&quot;（布尔值）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"literal\">null</span>)) <span class=\"comment\">// &quot;Null&quot;（null）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"literal\">undefined</span>)) <span class=\"comment\">// &quot;Undefined&quot;（undefined）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(&#123;&#125;)) <span class=\"comment\">// &quot;Object&quot;（普通对象）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>([])) <span class=\"comment\">// &quot;Array&quot;（数组）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;)) <span class=\"comment\">// &quot;Function&quot;（函数）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>())) <span class=\"comment\">// &quot;Date&quot;（日期对象）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"regexp\">/\\d+/</span>)) <span class=\"comment\">// &quot;RegExp&quot;（正则对象）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Map</span>())) <span class=\"comment\">// &quot;Map&quot;（Map对象）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">WeakMap</span>())) <span class=\"comment\">// &quot;WeakMap&quot;（WeakMap对象）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Set</span>())) <span class=\"comment\">// &quot;Set&quot;（Set对象）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">WeakSet</span>())) <span class=\"comment\">// &quot;WeakSet&quot;（WeakSet对象）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"title class_\">Symbol</span>())) <span class=\"comment\">// &quot;Symbol&quot;（Symbol类型）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>())) <span class=\"comment\">// &quot;Error&quot;（错误对象）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">() =&gt;</span> &#123;&#125;))) <span class=\"comment\">// &#x27;Promise&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">ArrayBuffer</span>(<span class=\"number\">10</span>))) <span class=\"comment\">// &#x27;Arraybuffer&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Int32Array</span>())) <span class=\"comment\">// &#x27;Typedarray&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"title class_\">NaN</span>)) <span class=\"comment\">// &#x27;Number&#x27;（NaN属于数字类型）</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"写一个可以判断原生数据类型-自定义数据类型的方法\"><a href=\"#写一个可以判断原生数据类型-自定义数据类型的方法\" class=\"headerlink\" title=\"写一个可以判断原生数据类型+自定义数据类型的方法\"></a>写一个可以判断<code>原生数据类型+自定义数据类型</code>的方法</h3><ul>\n<li><p>在 JS 中，除了原生数据类型，还可以自定义数据类型</p>\n<ul>\n<li>在 JavaScript 中，自定义数据类型通常通过构造函数（new 关键字）或 ES6 Class（class 关键字）实现，本质是创建具有特定属性和方法的对象类型</li>\n<li>自定义数据类型，无法用 Object.prototype.toString.call()判断类型，得到的都是 Object<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\">name, age</span>) &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">age</span> = age</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> alice = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>(<span class=\"string\">&#x27;Alice&#x27;</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(alice) <span class=\"comment\">// &#x27;[object Object]&#x27;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>先判断自定义数据类型，是则返回自定义数据类型的构造函数名，否则返回对应原生数据类型</p>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 综合判断所有数据类型，包括原生类型和自定义类型</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">*</span>&#125; <span class=\"variable\">value</span> - 需要判断类型的值</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@returns</span> &#123;<span class=\"type\">string</span>&#125; 类型名称（如 &#x27;number&#x27;、&#x27;string&#x27;、&#x27;array&#x27;、&#x27;Person&#x27;、&#x27;Book&#x27; 等）</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getFullType</span>(<span class=\"params\">value</span>) &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 处理TypedArray</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"title class_\">ArrayBuffer</span>.<span class=\"title function_\">isView</span>(value)) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">&#x27;typedarray&#x27;</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// 处理自定义类型 —— 检查构造函数名称</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (value.<span class=\"property\">constructor</span> &amp;&amp; <span class=\"keyword\">typeof</span> value.<span class=\"property\">constructor</span> === <span class=\"string\">&#x27;function&#x27;</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">const</span> constructorName = value.<span class=\"property\">constructor</span>.<span class=\"property\">name</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// 排除Object构造函数（避免所有对象都返回&#x27;Object&#x27;）</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (constructorName !== <span class=\"string\">&#x27;Object&#x27;</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> constructorName</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// 处理自定义标识（如果对象有Symbol.toStringTag）</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> value[<span class=\"title class_\">Symbol</span>.<span class=\"property\">toStringTag</span>] === <span class=\"string\">&#x27;string&#x27;</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> value[<span class=\"title class_\">Symbol</span>.<span class=\"property\">toStringTag</span>]</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 判断原生数据类型</span></span><br><span class=\"line\">\t<span class=\"keyword\">const</span> typeTag = <span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(value)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> typeTag.<span class=\"title function_\">slice</span>(<span class=\"number\">8</span>, -<span class=\"number\">1</span>).<span class=\"title function_\">toLowerCase</span>()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 测试原生类型</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getFullType</span>(<span class=\"string\">&#x27;hello&#x27;</span>)) <span class=\"comment\">// &#x27;string&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getFullType</span>(<span class=\"number\">123</span>)) <span class=\"comment\">// &#x27;number&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getFullType</span>(<span class=\"literal\">true</span>)) <span class=\"comment\">// &#x27;boolean&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getFullType</span>(<span class=\"literal\">null</span>)) <span class=\"comment\">// &#x27;null&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getFullType</span>(<span class=\"literal\">undefined</span>)) <span class=\"comment\">// &#x27;undefined&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getFullType</span>([])) <span class=\"comment\">// &#x27;array&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getFullType</span>(&#123;&#125;)) <span class=\"comment\">// &#x27;object&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getFullType</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>())) <span class=\"comment\">// &#x27;date&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getFullType</span>(<span class=\"regexp\">/\\d+/</span>)) <span class=\"comment\">// &#x27;regexp&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getFullType</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Map</span>())) <span class=\"comment\">// &#x27;map&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getFullType</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;)) <span class=\"comment\">// &#x27;function&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 测试自定义构造函数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\">name</span>) &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getFullType</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>(<span class=\"string\">&#x27;张三&#x27;</span>))) <span class=\"comment\">// &#x27;Person&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 测试ES6类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Book</span> &#123;</span><br><span class=\"line\">\t<span class=\"title function_\">constructor</span>(<span class=\"params\">title</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">this</span>.<span class=\"property\">title</span> = title</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getFullType</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Book</span>(<span class=\"string\">&#x27;JavaScript指南&#x27;</span>))) <span class=\"comment\">// &#x27;Book&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 测试带自定义标识的类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Product</span> &#123;</span><br><span class=\"line\">\t<span class=\"title function_\">constructor</span>(<span class=\"params\">id</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">this</span>.<span class=\"property\">id</span> = id</span><br><span class=\"line\">\t\t<span class=\"variable language_\">this</span>[<span class=\"title class_\">Symbol</span>.<span class=\"property\">toStringTag</span>] = <span class=\"string\">&#x27;Product&#x27;</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getFullType</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Product</span>(<span class=\"number\">1001</span>))) <span class=\"comment\">// &#x27;Product&#x27;</span></span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h3 id=\"typeof-A-判断数据类型\"><a href=\"#typeof-A-判断数据类型\" class=\"headerlink\" title=\"typeof A 判断数据类型\"></a>typeof A 判断数据类型</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 基础数据类型：数字、字符串、布尔值、未定义、空值、Symbol(ES6新增)、BigInt(ES2020新增)</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> <span class=\"number\">42</span>) <span class=\"comment\">// &quot;number&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> <span class=\"string\">&#x27;Hello, world!&#x27;</span>) <span class=\"comment\">// &quot;string&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> <span class=\"literal\">true</span>) <span class=\"comment\">// &quot;boolean&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> <span class=\"literal\">undefined</span>) <span class=\"comment\">// &quot;undefined&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> <span class=\"literal\">null</span>) <span class=\"comment\">// &quot;object&quot; (这是一个历史遗留问题)</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> <span class=\"title class_\">Symbol</span>(<span class=\"string\">&#x27;symbol&#x27;</span>)) <span class=\"comment\">// &quot;symbol&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> <span class=\"number\">123n</span>) <span class=\"comment\">// &quot;bigint&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 引用数据类型：普通对象、数组、函数、new Date()等</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Alice&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">25</span> &#125;) <span class=\"comment\">// &quot;object&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]) <span class=\"comment\">// &quot;object&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()) <span class=\"comment\">// &quot;object&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125; || <span class=\"keyword\">typeof</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Function</span>()) <span class=\"comment\">// &quot;function&quot; (特殊)</span></span><br></pre></td></tr></table></figure>\n\n<p>【注意】</p>\n<ul>\n<li>基础数据类型：typeof 返回对应类型，除了 null，typeof null 返回”object”是一个 JS 的历史遗留问题</li>\n<li>数组 Array&#x2F;函数 Function&#x2F;new Date()&#x2F;new RegExp()&#x2F;new XXX 等都属于对象类型范畴，属于广义的”对象”，但不是狭义的”普通对象”，所以 typeof 判断类型都返回”object”，除了函数 Function</li>\n<li>JavaScript 为了突出函数的”可执行性”和简化类型判断而做的特殊设计 —— 函数本质上是一种”可调用的对象”，但 typeof 刻意返回”function”来强调其特殊性</li>\n</ul>\n<h3 id=\"A-instanceof-B-判断数据类型\"><a href=\"#A-instanceof-B-判断数据类型\" class=\"headerlink\" title=\"A instanceof B 判断数据类型\"></a>A instanceof B 判断数据类型</h3><ul>\n<li>instanceof  用于判断一个对象是否是另一个对象的实例</li>\n<li>instanceof  对于内置对象类型和自定义类都有效</li>\n<li>instanceof  对于原始类型无效，但可以通过构造函数包装对象进行判断</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建一个构造函数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\">name</span>) &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 创建一个实例</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> alice = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>(<span class=\"string\">&#x27;Alice&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 判断实例与构造函数的关系</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(alice <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Person</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 判断内置对象类型</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>([] <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Array</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(&#123;&#125; <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Object</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>() <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Date</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"regexp\">/regex/</span> <span class=\"keyword\">instanceof</span> <span class=\"title class_\">RegExp</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"comment\">// 自定义类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Animal</span> &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Dog</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">Animal</span> &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> myDog = <span class=\"keyword\">new</span> <span class=\"title class_\">Dog</span>()</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myDog <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Dog</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myDog <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Animal</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myDog <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Object</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 注意 `instanceof` 只对对象有效，对原始类型无效</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">42</span> <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Number</span>) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Hello&#x27;</span> <span class=\"keyword\">instanceof</span> <span class=\"title class_\">String</span>) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"literal\">true</span> <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Boolean</span>) <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 对于原始类型，可以使用构造函数包装对象进行判断</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Number</span>(<span class=\"number\">42</span>) <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Number</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(<span class=\"string\">&#x27;Hello&#x27;</span>) <span class=\"keyword\">instanceof</span> <span class=\"title class_\">String</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Boolean</span>(<span class=\"literal\">true</span>) <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Boolean</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"literal\">null</span> <span class=\"keyword\">instanceof</span> <span class=\"literal\">null</span> <span class=\"comment\">// 控制台报错：右侧不是对象</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Array-isArray-value-：专门用于判断一个值是否为数组\"><a href=\"#Array-isArray-value-：专门用于判断一个值是否为数组\" class=\"headerlink\" title=\"Array.isArray(value)：专门用于判断一个值是否为数组\"></a>Array.isArray(value)：专门用于判断一个值是否为数组</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 数组</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>])) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"comment\">// 对象</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Alice&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">25</span> &#125;)) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"comment\">// 字符串</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(<span class=\"string\">&#x27;Hello, world!&#x27;</span>)) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"comment\">// 数字</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(<span class=\"number\">42</span>)) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"comment\">// 布尔值</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(<span class=\"literal\">true</span>)) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"comment\">// null</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(<span class=\"literal\">null</span>)) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"comment\">// undefined</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(<span class=\"literal\">undefined</span>)) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"comment\">// 函数</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;)) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"comment\">// Date 对象</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>())) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"comment\">// 正则表达式</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(<span class=\"regexp\">/regex/</span>)) <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"判断是否为数组的方法\"><a href=\"#判断是否为数组的方法\" class=\"headerlink\" title=\"判断是否为数组的方法\"></a>判断是否为数组的方法</h3><ul>\n<li>推荐使用<code>Array.isArray(arr)</code>方法，它是最简洁和可靠的，Es6 专门为此设计的方法</li>\n<li><code>A instanceof B</code><br>const value &#x3D; [1, 2, 3];<br>console.log(value instanceof Array); &#x2F;&#x2F; true</li>\n<li><code>Object.prototype.toString</code> (老方法)<br>const value &#x3D; [1, 2, 3];<br>console.log(Object.prototype.toString.call(value) &#x3D;&#x3D;&#x3D; ‘[object Array]’); &#x2F;&#x2F; true</li>\n</ul>\n<h3 id=\"写一个可以判断任意数据类型的方法（原生数据类型）\"><a href=\"#写一个可以判断任意数据类型的方法（原生数据类型）\" class=\"headerlink\" title=\"写一个可以判断任意数据类型的方法（原生数据类型）\"></a>写一个可以判断任意数据类型的方法（<code>原生数据类型</code>）</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getType</span>(<span class=\"params\">value</span>) &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 使用 Object.prototype.toString.call() 获取类型标签</span></span><br><span class=\"line\">\t<span class=\"keyword\">const</span> typeTag = <span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(value)</span><br><span class=\"line\">\t<span class=\"comment\">// 从标签中提取类型名称（如 &quot;[object String]&quot; → &quot;String&quot;）</span></span><br><span class=\"line\">\t<span class=\"keyword\">const</span> typeText = typeTag.<span class=\"title function_\">slice</span>(<span class=\"number\">8</span>, -<span class=\"number\">1</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> typeText <span class=\"comment\">// 返回类型: 首字母大写的字符串</span></span><br><span class=\"line\">\t<span class=\"comment\">// return typeText.toLowerCase();  // 全部小写</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 测试示例</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"string\">&#x27;hello&#x27;</span>)) <span class=\"comment\">// &quot;String&quot;（字符串）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"number\">123</span>)) <span class=\"comment\">// &quot;Number&quot;（数字）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"literal\">true</span>)) <span class=\"comment\">// &quot;Boolean&quot;（布尔值）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"literal\">null</span>)) <span class=\"comment\">// &quot;Null&quot;（null）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"literal\">undefined</span>)) <span class=\"comment\">// &quot;Undefined&quot;（undefined）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(&#123;&#125;)) <span class=\"comment\">// &quot;Object&quot;（普通对象）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>([])) <span class=\"comment\">// &quot;Array&quot;（数组）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;)) <span class=\"comment\">// &quot;Function&quot;（函数）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>())) <span class=\"comment\">// &quot;Date&quot;（日期对象）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"regexp\">/\\d+/</span>)) <span class=\"comment\">// &quot;RegExp&quot;（正则对象）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Map</span>())) <span class=\"comment\">// &quot;Map&quot;（Map对象）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">WeakMap</span>())) <span class=\"comment\">// &quot;WeakMap&quot;（WeakMap对象）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Set</span>())) <span class=\"comment\">// &quot;Set&quot;（Set对象）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">WeakSet</span>())) <span class=\"comment\">// &quot;WeakSet&quot;（WeakSet对象）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"title class_\">Symbol</span>())) <span class=\"comment\">// &quot;Symbol&quot;（Symbol类型）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>())) <span class=\"comment\">// &quot;Error&quot;（错误对象）</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">() =&gt;</span> &#123;&#125;))) <span class=\"comment\">// &#x27;Promise&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">ArrayBuffer</span>(<span class=\"number\">10</span>))) <span class=\"comment\">// &#x27;Arraybuffer&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Int32Array</span>())) <span class=\"comment\">// &#x27;Typedarray&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getType</span>(<span class=\"title class_\">NaN</span>)) <span class=\"comment\">// &#x27;Number&#x27;（NaN属于数字类型）</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"写一个可以判断原生数据类型-自定义数据类型的方法\"><a href=\"#写一个可以判断原生数据类型-自定义数据类型的方法\" class=\"headerlink\" title=\"写一个可以判断原生数据类型+自定义数据类型的方法\"></a>写一个可以判断<code>原生数据类型+自定义数据类型</code>的方法</h3><ul>\n<li><p>在 JS 中，除了原生数据类型，还可以自定义数据类型</p>\n<ul>\n<li>在 JavaScript 中，自定义数据类型通常通过构造函数（new 关键字）或 ES6 Class（class 关键字）实现，本质是创建具有特定属性和方法的对象类型</li>\n<li>自定义数据类型，无法用 Object.prototype.toString.call()判断类型，得到的都是 Object<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\">name, age</span>) &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">age</span> = age</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> alice = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>(<span class=\"string\">&#x27;Alice&#x27;</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(alice) <span class=\"comment\">// &#x27;[object Object]&#x27;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>先判断自定义数据类型，是则返回自定义数据类型的构造函数名，否则返回对应原生数据类型</p>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 综合判断所有数据类型，包括原生类型和自定义类型</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">*</span>&#125; <span class=\"variable\">value</span> - 需要判断类型的值</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@returns</span> &#123;<span class=\"type\">string</span>&#125; 类型名称（如 &#x27;number&#x27;、&#x27;string&#x27;、&#x27;array&#x27;、&#x27;Person&#x27;、&#x27;Book&#x27; 等）</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getFullType</span>(<span class=\"params\">value</span>) &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 处理TypedArray</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"title class_\">ArrayBuffer</span>.<span class=\"title function_\">isView</span>(value)) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">&#x27;typedarray&#x27;</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// 处理自定义类型 —— 检查构造函数名称</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (value.<span class=\"property\">constructor</span> &amp;&amp; <span class=\"keyword\">typeof</span> value.<span class=\"property\">constructor</span> === <span class=\"string\">&#x27;function&#x27;</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">const</span> constructorName = value.<span class=\"property\">constructor</span>.<span class=\"property\">name</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// 排除Object构造函数（避免所有对象都返回&#x27;Object&#x27;）</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (constructorName !== <span class=\"string\">&#x27;Object&#x27;</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> constructorName</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// 处理自定义标识（如果对象有Symbol.toStringTag）</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> value[<span class=\"title class_\">Symbol</span>.<span class=\"property\">toStringTag</span>] === <span class=\"string\">&#x27;string&#x27;</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> value[<span class=\"title class_\">Symbol</span>.<span class=\"property\">toStringTag</span>]</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 判断原生数据类型</span></span><br><span class=\"line\">\t<span class=\"keyword\">const</span> typeTag = <span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(value)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> typeTag.<span class=\"title function_\">slice</span>(<span class=\"number\">8</span>, -<span class=\"number\">1</span>).<span class=\"title function_\">toLowerCase</span>()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 测试原生类型</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getFullType</span>(<span class=\"string\">&#x27;hello&#x27;</span>)) <span class=\"comment\">// &#x27;string&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getFullType</span>(<span class=\"number\">123</span>)) <span class=\"comment\">// &#x27;number&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getFullType</span>(<span class=\"literal\">true</span>)) <span class=\"comment\">// &#x27;boolean&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getFullType</span>(<span class=\"literal\">null</span>)) <span class=\"comment\">// &#x27;null&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getFullType</span>(<span class=\"literal\">undefined</span>)) <span class=\"comment\">// &#x27;undefined&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getFullType</span>([])) <span class=\"comment\">// &#x27;array&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getFullType</span>(&#123;&#125;)) <span class=\"comment\">// &#x27;object&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getFullType</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>())) <span class=\"comment\">// &#x27;date&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getFullType</span>(<span class=\"regexp\">/\\d+/</span>)) <span class=\"comment\">// &#x27;regexp&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getFullType</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Map</span>())) <span class=\"comment\">// &#x27;map&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getFullType</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;)) <span class=\"comment\">// &#x27;function&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 测试自定义构造函数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\">name</span>) &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getFullType</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>(<span class=\"string\">&#x27;张三&#x27;</span>))) <span class=\"comment\">// &#x27;Person&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 测试ES6类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Book</span> &#123;</span><br><span class=\"line\">\t<span class=\"title function_\">constructor</span>(<span class=\"params\">title</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">this</span>.<span class=\"property\">title</span> = title</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getFullType</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Book</span>(<span class=\"string\">&#x27;JavaScript指南&#x27;</span>))) <span class=\"comment\">// &#x27;Book&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 测试带自定义标识的类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Product</span> &#123;</span><br><span class=\"line\">\t<span class=\"title function_\">constructor</span>(<span class=\"params\">id</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">this</span>.<span class=\"property\">id</span> = id</span><br><span class=\"line\">\t\t<span class=\"variable language_\">this</span>[<span class=\"title class_\">Symbol</span>.<span class=\"property\">toStringTag</span>] = <span class=\"string\">&#x27;Product&#x27;</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">getFullType</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Product</span>(<span class=\"number\">1001</span>))) <span class=\"comment\">// &#x27;Product&#x27;</span></span><br></pre></td></tr></table></figure>\n"},{"title":"搭建个人博客","date":"2025-07-23T04:07:48.000Z","cover":"/images/搭建个人博客/cover.jpg","_content":"\n### ***搭建开发环境(安装 node.js)\n\n```bash\nnpm - v\nnode - v // 检查是否安装完成\n```\n\n### ***安装博客框架 hexo 脚手架\n\n```bash\nnpm install -g hexo-cli\n```\n\n### ***切换到国内镜像源\n\n```bash\nnpm config set https://registry.npmmirror.com  // 淘宝镜像源(安装更快)\n```\n\n### ***搭建博客项目\n\n```bash\nhexo init my-blog\ncd my-blog\nnpm i\nhexo server   // 本地预览博客，简写 hexo s\n```\n\n![](/images/搭建个人博客/hexo_init.png)\n\n### ***代码托管到 gitlab 或 github\n\n- 新建一个 gitlab 仓库，仓库名是 xxx.gitlab.io，xxx 是你的 gitlab 用户名\n- 与本地仓库 my-blog 建立连接\n\n  ```bash\n  git init   // 初始化.git\n  git remote add origin https://gitlab.com/xxx.gitlab.io.git  // 建立连接\n  git branch -M main  // 修改分支名称\n  ```\n\n- 配置 Hexo 部署\n\n  - 安装 Gitlab Pages 部署插件 npm install hexo-deployer-git -D (hexo deploy 命令用到该插件)\n  - 修改  _config.yml  文件中的部署配置\n\n  ```yaml\n  deploy:\n    type: git\n    repository: git@gitlab.com:xxx.gitlab.io.gi\n    branch: main\n  ```\n\n- 创建 .gitlab-ci.yml （GitLab 内置功能 CI/CD 的配置文件：代码部署上线全自动化）\n  ![](/images/搭建个人博客/gitlab-ci-yml.png)\n\n- 推送本地代码到远程\n  - 可以新增 .gitignore 文件，忽略 node_modules 等代码提交\n  - 取消仓库 main 分支保护 Settings → Repository → Protected branches (如果代码推送失败，取消分支保护重新推送)\n  - 生成静态文件并部署代码到仓库：hexo clean; hexo generate; hexo deploy\n  - 推送到远程仓库 【每次推送代码会自动触发管道 CI/CD】\n  ```bash\n  git add .\n  git commit -m \"first commit\"\n  git push -u origin main\n  ```\n- 访问博客链接：Deploy → Pages → 可以找到博客链接 https://xxx.gitlab.io/ (等待 1-5 分钟就可以打开了)\n\n### ***扩展\n\n- 如果在 Gitlab 没有找到 Pages，检查一下`仓库`以及`仓库所在项目组`的权限是否是最高权限且公开(Public)的\n\n- 第一次推送代码到远程，我构建失败了(在 Build → Pipelines 下可以查看构建状态)\n  - 找到构建失败的原因(我是因为需要进行账号或者身份认证认证)，解决之后重新推送代码即可\n    ![](/images/搭建个人博客/gitRuning0.png)\n- 新增一篇博客内容\n  - 执行 \"hexo new post 文章标题 xxx\" 创建一篇新博客\n    ![](/images/搭建个人博客/firstBlog.png)\n  - 本地预览效果：hexo clean; hexo g; hexo d; hexo s\n  - 推送到远程【每次推送代码会自动触发管道 CI/CI】\n    - 当状态 Runing → Passed，即构建成功，刷新线上博客即可看到\n      ![](/images/搭建个人博客/gitRuning.png)\n- 更换博客主题，hexo 有很多开源免费的主题：https://hexo.io/themes\n  - 使用 npm 方式下载主题依赖，如 butterfly 主题官网 https://butterfly.js.org/\n    - 在 Hexo 项目根目录下执行： npm install hexo-theme-butterfly -D\n    - 安装这个主题需要的插件：npm install hexo-renderer-pug hexo-renderer-stylus -D\n    - 修改 Hexo 根目录下的  _config.yml  文件 theme: butterfly\n    - 创建主题配置文件 \\_config.butterfly.yml，从 node_modules/hexo-theme-butterfly/\\_config.yml 复制默认配置到 \\_config.butterfly.yml 文件\n    - 重启查看效果：hexo clean; hexo g; hexo s (如下：主题修改成功)\n      ![](/images/搭建个人博客/hexo_themes.png)\n    - 将代码推送到远程，等构建完成(1-5 分钟)，线上博客链接的主题也完成了更换\n","source":"_posts/2025-07-23-搭建个人博客.md","raw":"---\ntitle: 搭建个人博客\ndate: 2025-07-23 12:07:48\ntags:\n  - hexo\n  - gitlab\ncover: /images/搭建个人博客/cover.jpg  # 封面图\ncategories: Hexo   # 分类\n---\n\n### ***搭建开发环境(安装 node.js)\n\n```bash\nnpm - v\nnode - v // 检查是否安装完成\n```\n\n### ***安装博客框架 hexo 脚手架\n\n```bash\nnpm install -g hexo-cli\n```\n\n### ***切换到国内镜像源\n\n```bash\nnpm config set https://registry.npmmirror.com  // 淘宝镜像源(安装更快)\n```\n\n### ***搭建博客项目\n\n```bash\nhexo init my-blog\ncd my-blog\nnpm i\nhexo server   // 本地预览博客，简写 hexo s\n```\n\n![](/images/搭建个人博客/hexo_init.png)\n\n### ***代码托管到 gitlab 或 github\n\n- 新建一个 gitlab 仓库，仓库名是 xxx.gitlab.io，xxx 是你的 gitlab 用户名\n- 与本地仓库 my-blog 建立连接\n\n  ```bash\n  git init   // 初始化.git\n  git remote add origin https://gitlab.com/xxx.gitlab.io.git  // 建立连接\n  git branch -M main  // 修改分支名称\n  ```\n\n- 配置 Hexo 部署\n\n  - 安装 Gitlab Pages 部署插件 npm install hexo-deployer-git -D (hexo deploy 命令用到该插件)\n  - 修改  _config.yml  文件中的部署配置\n\n  ```yaml\n  deploy:\n    type: git\n    repository: git@gitlab.com:xxx.gitlab.io.gi\n    branch: main\n  ```\n\n- 创建 .gitlab-ci.yml （GitLab 内置功能 CI/CD 的配置文件：代码部署上线全自动化）\n  ![](/images/搭建个人博客/gitlab-ci-yml.png)\n\n- 推送本地代码到远程\n  - 可以新增 .gitignore 文件，忽略 node_modules 等代码提交\n  - 取消仓库 main 分支保护 Settings → Repository → Protected branches (如果代码推送失败，取消分支保护重新推送)\n  - 生成静态文件并部署代码到仓库：hexo clean; hexo generate; hexo deploy\n  - 推送到远程仓库 【每次推送代码会自动触发管道 CI/CD】\n  ```bash\n  git add .\n  git commit -m \"first commit\"\n  git push -u origin main\n  ```\n- 访问博客链接：Deploy → Pages → 可以找到博客链接 https://xxx.gitlab.io/ (等待 1-5 分钟就可以打开了)\n\n### ***扩展\n\n- 如果在 Gitlab 没有找到 Pages，检查一下`仓库`以及`仓库所在项目组`的权限是否是最高权限且公开(Public)的\n\n- 第一次推送代码到远程，我构建失败了(在 Build → Pipelines 下可以查看构建状态)\n  - 找到构建失败的原因(我是因为需要进行账号或者身份认证认证)，解决之后重新推送代码即可\n    ![](/images/搭建个人博客/gitRuning0.png)\n- 新增一篇博客内容\n  - 执行 \"hexo new post 文章标题 xxx\" 创建一篇新博客\n    ![](/images/搭建个人博客/firstBlog.png)\n  - 本地预览效果：hexo clean; hexo g; hexo d; hexo s\n  - 推送到远程【每次推送代码会自动触发管道 CI/CI】\n    - 当状态 Runing → Passed，即构建成功，刷新线上博客即可看到\n      ![](/images/搭建个人博客/gitRuning.png)\n- 更换博客主题，hexo 有很多开源免费的主题：https://hexo.io/themes\n  - 使用 npm 方式下载主题依赖，如 butterfly 主题官网 https://butterfly.js.org/\n    - 在 Hexo 项目根目录下执行： npm install hexo-theme-butterfly -D\n    - 安装这个主题需要的插件：npm install hexo-renderer-pug hexo-renderer-stylus -D\n    - 修改 Hexo 根目录下的  _config.yml  文件 theme: butterfly\n    - 创建主题配置文件 \\_config.butterfly.yml，从 node_modules/hexo-theme-butterfly/\\_config.yml 复制默认配置到 \\_config.butterfly.yml 文件\n    - 重启查看效果：hexo clean; hexo g; hexo s (如下：主题修改成功)\n      ![](/images/搭建个人博客/hexo_themes.png)\n    - 将代码推送到远程，等构建完成(1-5 分钟)，线上博客链接的主题也完成了更换\n","slug":"搭建个人博客","published":1,"updated":"2025-09-13T08:09:15.103Z","_id":"cmel89pe6000brwncezxkdmi0","comments":1,"layout":"post","photos":[],"content":"<h3 id=\"搭建开发环境-安装-node-js\"><a href=\"#搭建开发环境-安装-node-js\" class=\"headerlink\" title=\"***搭建开发环境(安装 node.js)\"></a>***搭建开发环境(安装 node.js)</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm - v</span><br><span class=\"line\">node - v // 检查是否安装完成</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"安装博客框架-hexo-脚手架\"><a href=\"#安装博客框架-hexo-脚手架\" class=\"headerlink\" title=\"***安装博客框架 hexo 脚手架\"></a>***安装博客框架 hexo 脚手架</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"切换到国内镜像源\"><a href=\"#切换到国内镜像源\" class=\"headerlink\" title=\"***切换到国内镜像源\"></a>***切换到国内镜像源</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"built_in\">set</span> https://registry.npmmirror.com  // 淘宝镜像源(安装更快)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"搭建博客项目\"><a href=\"#搭建博客项目\" class=\"headerlink\" title=\"***搭建博客项目\"></a>***搭建博客项目</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init my-blog</span><br><span class=\"line\"><span class=\"built_in\">cd</span> my-blog</span><br><span class=\"line\">npm i</span><br><span class=\"line\">hexo server   // 本地预览博客，简写 hexo s</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/hexo_init.png\"></p>\n<h3 id=\"代码托管到-gitlab-或-github\"><a href=\"#代码托管到-gitlab-或-github\" class=\"headerlink\" title=\"***代码托管到 gitlab 或 github\"></a>***代码托管到 gitlab 或 github</h3><ul>\n<li><p>新建一个 gitlab 仓库，仓库名是 xxx.gitlab.io，xxx 是你的 gitlab 用户名</p>\n</li>\n<li><p>与本地仓库 my-blog 建立连接</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init   // 初始化.git</span><br><span class=\"line\">git remote add origin https://gitlab.com/xxx.gitlab.io.git  // 建立连接</span><br><span class=\"line\">git branch -M main  // 修改分支名称</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置 Hexo 部署</p>\n<ul>\n<li>安装 Gitlab Pages 部署插件 npm install hexo-deployer-git -D (hexo deploy 命令用到该插件)</li>\n<li>修改  _config.yml  文件中的部署配置</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repository:</span> <span class=\"string\">git@gitlab.com:xxx.gitlab.io.gi</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">main</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建 .gitlab-ci.yml （GitLab 内置功能 CI&#x2F;CD 的配置文件：代码部署上线全自动化）<br><img src=\"/images/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/gitlab-ci-yml.png\"></p>\n</li>\n<li><p>推送本地代码到远程</p>\n<ul>\n<li>可以新增 .gitignore 文件，忽略 node_modules 等代码提交</li>\n<li>取消仓库 main 分支保护 Settings → Repository → Protected branches (如果代码推送失败，取消分支保护重新推送)</li>\n<li>生成静态文件并部署代码到仓库：hexo clean; hexo generate; hexo deploy</li>\n<li>推送到远程仓库 【每次推送代码会自动触发管道 CI&#x2F;CD】</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;first commit&quot;</span></span><br><span class=\"line\">git push -u origin main</span><br></pre></td></tr></table></figure></li>\n<li><p>访问博客链接：Deploy → Pages → 可以找到博客链接 <a href=\"https://xxx.gitlab.io/\">https://xxx.gitlab.io/</a> (等待 1-5 分钟就可以打开了)</p>\n</li>\n</ul>\n<h3 id=\"扩展\"><a href=\"#扩展\" class=\"headerlink\" title=\"***扩展\"></a>***扩展</h3><ul>\n<li><p>如果在 Gitlab 没有找到 Pages，检查一下<code>仓库</code>以及<code>仓库所在项目组</code>的权限是否是最高权限且公开(Public)的</p>\n</li>\n<li><p>第一次推送代码到远程，我构建失败了(在 Build → Pipelines 下可以查看构建状态)</p>\n<ul>\n<li>找到构建失败的原因(我是因为需要进行账号或者身份认证认证)，解决之后重新推送代码即可<br><img src=\"/images/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/gitRuning0.png\"></li>\n</ul>\n</li>\n<li><p>新增一篇博客内容</p>\n<ul>\n<li>执行 “hexo new post 文章标题 xxx” 创建一篇新博客<br><img src=\"/images/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/firstBlog.png\"></li>\n<li>本地预览效果：hexo clean; hexo g; hexo d; hexo s</li>\n<li>推送到远程【每次推送代码会自动触发管道 CI&#x2F;CI】<ul>\n<li>当状态 Runing → Passed，即构建成功，刷新线上博客即可看到<br><img src=\"/images/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/gitRuning.png\"></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>更换博客主题，hexo 有很多开源免费的主题：<a href=\"https://hexo.io/themes\">https://hexo.io/themes</a></p>\n<ul>\n<li>使用 npm 方式下载主题依赖，如 butterfly 主题官网 <a href=\"https://butterfly.js.org/\">https://butterfly.js.org/</a><ul>\n<li>在 Hexo 项目根目录下执行： npm install hexo-theme-butterfly -D</li>\n<li>安装这个主题需要的插件：npm install hexo-renderer-pug hexo-renderer-stylus -D</li>\n<li>修改 Hexo 根目录下的  _config.yml  文件 theme: butterfly</li>\n<li>创建主题配置文件 _config.butterfly.yml，从 node_modules&#x2F;hexo-theme-butterfly&#x2F;_config.yml 复制默认配置到 _config.butterfly.yml 文件</li>\n<li>重启查看效果：hexo clean; hexo g; hexo s (如下：主题修改成功)<br><img src=\"/images/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/hexo_themes.png\"></li>\n<li>将代码推送到远程，等构建完成(1-5 分钟)，线上博客链接的主题也完成了更换</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n","excerpt":"","more":"<h3 id=\"搭建开发环境-安装-node-js\"><a href=\"#搭建开发环境-安装-node-js\" class=\"headerlink\" title=\"***搭建开发环境(安装 node.js)\"></a>***搭建开发环境(安装 node.js)</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm - v</span><br><span class=\"line\">node - v // 检查是否安装完成</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"安装博客框架-hexo-脚手架\"><a href=\"#安装博客框架-hexo-脚手架\" class=\"headerlink\" title=\"***安装博客框架 hexo 脚手架\"></a>***安装博客框架 hexo 脚手架</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"切换到国内镜像源\"><a href=\"#切换到国内镜像源\" class=\"headerlink\" title=\"***切换到国内镜像源\"></a>***切换到国内镜像源</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"built_in\">set</span> https://registry.npmmirror.com  // 淘宝镜像源(安装更快)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"搭建博客项目\"><a href=\"#搭建博客项目\" class=\"headerlink\" title=\"***搭建博客项目\"></a>***搭建博客项目</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init my-blog</span><br><span class=\"line\"><span class=\"built_in\">cd</span> my-blog</span><br><span class=\"line\">npm i</span><br><span class=\"line\">hexo server   // 本地预览博客，简写 hexo s</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/hexo_init.png\"></p>\n<h3 id=\"代码托管到-gitlab-或-github\"><a href=\"#代码托管到-gitlab-或-github\" class=\"headerlink\" title=\"***代码托管到 gitlab 或 github\"></a>***代码托管到 gitlab 或 github</h3><ul>\n<li><p>新建一个 gitlab 仓库，仓库名是 xxx.gitlab.io，xxx 是你的 gitlab 用户名</p>\n</li>\n<li><p>与本地仓库 my-blog 建立连接</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init   // 初始化.git</span><br><span class=\"line\">git remote add origin https://gitlab.com/xxx.gitlab.io.git  // 建立连接</span><br><span class=\"line\">git branch -M main  // 修改分支名称</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置 Hexo 部署</p>\n<ul>\n<li>安装 Gitlab Pages 部署插件 npm install hexo-deployer-git -D (hexo deploy 命令用到该插件)</li>\n<li>修改  _config.yml  文件中的部署配置</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repository:</span> <span class=\"string\">git@gitlab.com:xxx.gitlab.io.gi</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">main</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建 .gitlab-ci.yml （GitLab 内置功能 CI&#x2F;CD 的配置文件：代码部署上线全自动化）<br><img src=\"/images/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/gitlab-ci-yml.png\"></p>\n</li>\n<li><p>推送本地代码到远程</p>\n<ul>\n<li>可以新增 .gitignore 文件，忽略 node_modules 等代码提交</li>\n<li>取消仓库 main 分支保护 Settings → Repository → Protected branches (如果代码推送失败，取消分支保护重新推送)</li>\n<li>生成静态文件并部署代码到仓库：hexo clean; hexo generate; hexo deploy</li>\n<li>推送到远程仓库 【每次推送代码会自动触发管道 CI&#x2F;CD】</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;first commit&quot;</span></span><br><span class=\"line\">git push -u origin main</span><br></pre></td></tr></table></figure></li>\n<li><p>访问博客链接：Deploy → Pages → 可以找到博客链接 <a href=\"https://xxx.gitlab.io/\">https://xxx.gitlab.io/</a> (等待 1-5 分钟就可以打开了)</p>\n</li>\n</ul>\n<h3 id=\"扩展\"><a href=\"#扩展\" class=\"headerlink\" title=\"***扩展\"></a>***扩展</h3><ul>\n<li><p>如果在 Gitlab 没有找到 Pages，检查一下<code>仓库</code>以及<code>仓库所在项目组</code>的权限是否是最高权限且公开(Public)的</p>\n</li>\n<li><p>第一次推送代码到远程，我构建失败了(在 Build → Pipelines 下可以查看构建状态)</p>\n<ul>\n<li>找到构建失败的原因(我是因为需要进行账号或者身份认证认证)，解决之后重新推送代码即可<br><img src=\"/images/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/gitRuning0.png\"></li>\n</ul>\n</li>\n<li><p>新增一篇博客内容</p>\n<ul>\n<li>执行 “hexo new post 文章标题 xxx” 创建一篇新博客<br><img src=\"/images/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/firstBlog.png\"></li>\n<li>本地预览效果：hexo clean; hexo g; hexo d; hexo s</li>\n<li>推送到远程【每次推送代码会自动触发管道 CI&#x2F;CI】<ul>\n<li>当状态 Runing → Passed，即构建成功，刷新线上博客即可看到<br><img src=\"/images/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/gitRuning.png\"></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>更换博客主题，hexo 有很多开源免费的主题：<a href=\"https://hexo.io/themes\">https://hexo.io/themes</a></p>\n<ul>\n<li>使用 npm 方式下载主题依赖，如 butterfly 主题官网 <a href=\"https://butterfly.js.org/\">https://butterfly.js.org/</a><ul>\n<li>在 Hexo 项目根目录下执行： npm install hexo-theme-butterfly -D</li>\n<li>安装这个主题需要的插件：npm install hexo-renderer-pug hexo-renderer-stylus -D</li>\n<li>修改 Hexo 根目录下的  _config.yml  文件 theme: butterfly</li>\n<li>创建主题配置文件 _config.butterfly.yml，从 node_modules&#x2F;hexo-theme-butterfly&#x2F;_config.yml 复制默认配置到 _config.butterfly.yml 文件</li>\n<li>重启查看效果：hexo clean; hexo g; hexo s (如下：主题修改成功)<br><img src=\"/images/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/hexo_themes.png\"></li>\n<li>将代码推送到远程，等构建完成(1-5 分钟)，线上博客链接的主题也完成了更换</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n"},{"title":"forEach不能直接支持异步等待?","date":"2025-07-14T03:59:44.000Z","_content":"\n#### forEach 的设计是同步执行回调函数：\n\n- 不会等待 Promise 解决\n- 会立即执行所有回调（即使回调中包含异步操作）\n- 没有内置机制来处理异步操作的完成\n\n```javascript\n// delay是返回Promise的延迟函数\nconst delay = (times) => {\n\treturn new Promise((resolve, rejected) => {\n\t\tsetTimeout(() => {\n\t\t\tresolve()\n\t\t}, times)\n\t})\n}\n```\n\n##### 示例对比：\n\n1. 原始异步 forEach（不按顺序）\n\n```javascript\n[1, 2, 3].forEach(async (item) => {\n\tawait delay(1000)\n\tconsole.log(item)\n})\nprocess() // 会几乎同时输出1, 2, 3\n```\n\n2. 修改后的同步执行版本\n\n```javascript\nasync function process() {\n\tfor (const item of [1, 2, 3]) {\n\t\tawait delay(1000)\n\t\tconsole.log(item)\n\t}\n}\nprocess() // 会每隔1秒依次输出1, 2, 3\n```\n\n#### 注意事项\n\n- 顺序执行异步操作会显著增加总执行时间\n- 如果不需要顺序执行，Promise.all 可能是更好的选择\n- 在 Node.js 10+ 中，可以使用 for await...of 语法\n- 选择哪种方法取决于你的具体需求，但通常 for...of 循环是最清晰易读的解决方案\n","source":"_posts/2025-07-14-forEach不能直接支持异步等待.md","raw":"---\ntitle: forEach不能直接支持异步等待?\ndate: 2025-07-14 11:59:44\ntags:\n  - forEach\n  - async/await\ncategories: Javascript\n---\n\n#### forEach 的设计是同步执行回调函数：\n\n- 不会等待 Promise 解决\n- 会立即执行所有回调（即使回调中包含异步操作）\n- 没有内置机制来处理异步操作的完成\n\n```javascript\n// delay是返回Promise的延迟函数\nconst delay = (times) => {\n\treturn new Promise((resolve, rejected) => {\n\t\tsetTimeout(() => {\n\t\t\tresolve()\n\t\t}, times)\n\t})\n}\n```\n\n##### 示例对比：\n\n1. 原始异步 forEach（不按顺序）\n\n```javascript\n[1, 2, 3].forEach(async (item) => {\n\tawait delay(1000)\n\tconsole.log(item)\n})\nprocess() // 会几乎同时输出1, 2, 3\n```\n\n2. 修改后的同步执行版本\n\n```javascript\nasync function process() {\n\tfor (const item of [1, 2, 3]) {\n\t\tawait delay(1000)\n\t\tconsole.log(item)\n\t}\n}\nprocess() // 会每隔1秒依次输出1, 2, 3\n```\n\n#### 注意事项\n\n- 顺序执行异步操作会显著增加总执行时间\n- 如果不需要顺序执行，Promise.all 可能是更好的选择\n- 在 Node.js 10+ 中，可以使用 for await...of 语法\n- 选择哪种方法取决于你的具体需求，但通常 for...of 循环是最清晰易读的解决方案\n","slug":"forEach不能直接支持异步等待","published":1,"updated":"2025-07-28T06:37:30.874Z","comments":1,"layout":"post","photos":[],"_id":"cmel89pe7000erwncajds2znh","content":"<h4 id=\"forEach-的设计是同步执行回调函数：\"><a href=\"#forEach-的设计是同步执行回调函数：\" class=\"headerlink\" title=\"forEach 的设计是同步执行回调函数：\"></a>forEach 的设计是同步执行回调函数：</h4><ul>\n<li>不会等待 Promise 解决</li>\n<li>会立即执行所有回调（即使回调中包含异步操作）</li>\n<li>没有内置机制来处理异步操作的完成</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// delay是返回Promise的延迟函数</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">delay</span> = (<span class=\"params\">times</span>) =&gt; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, rejected</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"title function_\">resolve</span>()</span><br><span class=\"line\">\t\t&#125;, times)</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"示例对比：\"><a href=\"#示例对比：\" class=\"headerlink\" title=\"示例对比：\"></a>示例对比：</h5><ol>\n<li>原始异步 forEach（不按顺序）</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].<span class=\"title function_\">forEach</span>(<span class=\"title function_\">async</span> (item) =&gt; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">await</span> <span class=\"title function_\">delay</span>(<span class=\"number\">1000</span>)</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(item)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"title function_\">process</span>() <span class=\"comment\">// 会几乎同时输出1, 2, 3</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>修改后的同步执行版本</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">process</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> item <span class=\"keyword\">of</span> [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">await</span> <span class=\"title function_\">delay</span>(<span class=\"number\">1000</span>)</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(item)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">process</span>() <span class=\"comment\">// 会每隔1秒依次输出1, 2, 3</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h4><ul>\n<li>顺序执行异步操作会显著增加总执行时间</li>\n<li>如果不需要顺序执行，Promise.all 可能是更好的选择</li>\n<li>在 Node.js 10+ 中，可以使用 for await…of 语法</li>\n<li>选择哪种方法取决于你的具体需求，但通常 for…of 循环是最清晰易读的解决方案</li>\n</ul>\n","excerpt":"","more":"<h4 id=\"forEach-的设计是同步执行回调函数：\"><a href=\"#forEach-的设计是同步执行回调函数：\" class=\"headerlink\" title=\"forEach 的设计是同步执行回调函数：\"></a>forEach 的设计是同步执行回调函数：</h4><ul>\n<li>不会等待 Promise 解决</li>\n<li>会立即执行所有回调（即使回调中包含异步操作）</li>\n<li>没有内置机制来处理异步操作的完成</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// delay是返回Promise的延迟函数</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">delay</span> = (<span class=\"params\">times</span>) =&gt; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, rejected</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"title function_\">resolve</span>()</span><br><span class=\"line\">\t\t&#125;, times)</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"示例对比：\"><a href=\"#示例对比：\" class=\"headerlink\" title=\"示例对比：\"></a>示例对比：</h5><ol>\n<li>原始异步 forEach（不按顺序）</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].<span class=\"title function_\">forEach</span>(<span class=\"title function_\">async</span> (item) =&gt; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">await</span> <span class=\"title function_\">delay</span>(<span class=\"number\">1000</span>)</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(item)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"title function_\">process</span>() <span class=\"comment\">// 会几乎同时输出1, 2, 3</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>修改后的同步执行版本</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">process</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> item <span class=\"keyword\">of</span> [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">await</span> <span class=\"title function_\">delay</span>(<span class=\"number\">1000</span>)</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(item)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">process</span>() <span class=\"comment\">// 会每隔1秒依次输出1, 2, 3</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h4><ul>\n<li>顺序执行异步操作会显著增加总执行时间</li>\n<li>如果不需要顺序执行，Promise.all 可能是更好的选择</li>\n<li>在 Node.js 10+ 中，可以使用 for await…of 语法</li>\n<li>选择哪种方法取决于你的具体需求，但通常 for…of 循环是最清晰易读的解决方案</li>\n</ul>\n"},{"title":"compoents下组件自动注册","date":"2025-07-24T06:32:22.000Z","cover":"/images/compoents下组件自动注册/cover.jpg","_content":"\n**Vue 项目常用的构建工具：Vue-cli、Webpack、Vite**\n\n### **** 构建工具是 vite ****\n\n- 新建目录\n\n![](/images/compoents下组件自动注册/vite_com.png)\n\n- index.js\n\n```javascript\n// 自动注册全局组件components\nimport { defineAsyncComponent } from 'vue'\n/**\n * @description 在src/components目录下创建文件，即 src/components/xxx.vue\n * @description 在src/components目录下创建目录及文件，即 src/components/xxx文件夹/xxx.vue\n */\nconst components = import.meta.glob('./**/**.vue')\nexport default function install(app) {\n\tfor (const [key, value] of Object.entries(components)) {\n\t\tconst name = key.slice(key.lastIndexOf('/') + 1, key.lastIndexOf('.'))\n\t\tapp.component(name, defineAsyncComponent(value))\n\t}\n}\n```\n\n- main.js\n\n```javascript\nimport { createApp } from 'vue'\nimport App from './App.vue'\nimport router from '@/router'\nimport autoRegCom from '@/components/index.js'\nconst app = createApp(App)\napp.use(router).use(autoRegCom).mount('#app')\n```\n\n- 直接使用\n\n```html\n<Header></Header>\n<Footer></Footer>\n```\n\n### **** 构建工具不是 vite ****\n\n- 新建目录\n\n![](/images/compoents下组件自动注册/vue_com.png)\n\n- index.js\n\n```javascript\n// 全局组件自动注册\nexport default {\n\tinstallCom(app) {\n\t\t// ('components文件夹下', '是否取子集', '正则匹配.vue结尾的的文件')\n\t\tconst ctx = require.context('../components', true, /\\.vue$/)\n\t\t// console.log('ctx:', ctx)\n\t\tif (ctx && ctx.keys()) {\n\t\t\tctx.keys()?.forEach((item) => {\n\t\t\t\tconst component = ctx(item).default\n\t\t\t\tlet path = (item || component.__file)?.split('/')\n\t\t\t\tconst componentName =\n\t\t\t\t\tpath && path.length && path[path.length - 1].split('.')[0]\n\t\t\t\t// console.log(componentName, component)\n\t\t\t\tapp.component(componentName, component)\n\t\t\t})\n\t\t}\n\t},\n}\n```\n\n- main.js\n\n```javascript\nimport { createApp } from 'vue'\nimport App from './App.vue'\nimport autoRegCom from '@/components/index.js'\nconst app = createApp(App)\nautoRegCom.installCom(app)\n```\n\n- 直接使用\n\n```html\n<Header></Header>\n<Footer></Footer>\n```\n","source":"_posts/2025-07-24-compoents下组件自动注册.md","raw":"---\ntitle: compoents下组件自动注册\ndate: 2025-07-24 14:32:22\ntags:\n  - vite\n  - vue-cli\ncategories: Vue # 分类\ncover: /images/compoents下组件自动注册/cover.jpg # 封面图\n---\n\n**Vue 项目常用的构建工具：Vue-cli、Webpack、Vite**\n\n### **** 构建工具是 vite ****\n\n- 新建目录\n\n![](/images/compoents下组件自动注册/vite_com.png)\n\n- index.js\n\n```javascript\n// 自动注册全局组件components\nimport { defineAsyncComponent } from 'vue'\n/**\n * @description 在src/components目录下创建文件，即 src/components/xxx.vue\n * @description 在src/components目录下创建目录及文件，即 src/components/xxx文件夹/xxx.vue\n */\nconst components = import.meta.glob('./**/**.vue')\nexport default function install(app) {\n\tfor (const [key, value] of Object.entries(components)) {\n\t\tconst name = key.slice(key.lastIndexOf('/') + 1, key.lastIndexOf('.'))\n\t\tapp.component(name, defineAsyncComponent(value))\n\t}\n}\n```\n\n- main.js\n\n```javascript\nimport { createApp } from 'vue'\nimport App from './App.vue'\nimport router from '@/router'\nimport autoRegCom from '@/components/index.js'\nconst app = createApp(App)\napp.use(router).use(autoRegCom).mount('#app')\n```\n\n- 直接使用\n\n```html\n<Header></Header>\n<Footer></Footer>\n```\n\n### **** 构建工具不是 vite ****\n\n- 新建目录\n\n![](/images/compoents下组件自动注册/vue_com.png)\n\n- index.js\n\n```javascript\n// 全局组件自动注册\nexport default {\n\tinstallCom(app) {\n\t\t// ('components文件夹下', '是否取子集', '正则匹配.vue结尾的的文件')\n\t\tconst ctx = require.context('../components', true, /\\.vue$/)\n\t\t// console.log('ctx:', ctx)\n\t\tif (ctx && ctx.keys()) {\n\t\t\tctx.keys()?.forEach((item) => {\n\t\t\t\tconst component = ctx(item).default\n\t\t\t\tlet path = (item || component.__file)?.split('/')\n\t\t\t\tconst componentName =\n\t\t\t\t\tpath && path.length && path[path.length - 1].split('.')[0]\n\t\t\t\t// console.log(componentName, component)\n\t\t\t\tapp.component(componentName, component)\n\t\t\t})\n\t\t}\n\t},\n}\n```\n\n- main.js\n\n```javascript\nimport { createApp } from 'vue'\nimport App from './App.vue'\nimport autoRegCom from '@/components/index.js'\nconst app = createApp(App)\nautoRegCom.installCom(app)\n```\n\n- 直接使用\n\n```html\n<Header></Header>\n<Footer></Footer>\n```\n","slug":"compoents下组件自动注册","published":1,"updated":"2025-09-13T08:09:15.104Z","_id":"cmel89pe9000frwncc11z64dv","comments":1,"layout":"post","photos":[],"content":"<p><strong>Vue 项目常用的构建工具：Vue-cli、Webpack、Vite</strong></p>\n<h3 id=\"构建工具是-vite\"><a href=\"#构建工具是-vite\" class=\"headerlink\" title=\"**** 构建工具是 vite ****\"></a>**** 构建工具是 vite ****</h3><ul>\n<li>新建目录</li>\n</ul>\n<p><img src=\"/images/compoents%E4%B8%8B%E7%BB%84%E4%BB%B6%E8%87%AA%E5%8A%A8%E6%B3%A8%E5%86%8C/vite_com.png\"></p>\n<ul>\n<li>index.js</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 自动注册全局组件components</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; defineAsyncComponent &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@description</span> 在src/components目录下创建文件，即 src/components/xxx.vue</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@description</span> 在src/components目录下创建目录及文件，即 src/components/xxx文件夹/xxx.vue</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> components = <span class=\"keyword\">import</span>.<span class=\"property\">meta</span>.<span class=\"title function_\">glob</span>(<span class=\"string\">&#x27;./**/**.vue&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">function</span> <span class=\"title function_\">install</span>(<span class=\"params\">app</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> [key, value] <span class=\"keyword\">of</span> <span class=\"title class_\">Object</span>.<span class=\"title function_\">entries</span>(components)) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">const</span> name = key.<span class=\"title function_\">slice</span>(key.<span class=\"title function_\">lastIndexOf</span>(<span class=\"string\">&#x27;/&#x27;</span>) + <span class=\"number\">1</span>, key.<span class=\"title function_\">lastIndexOf</span>(<span class=\"string\">&#x27;.&#x27;</span>))</span><br><span class=\"line\">\t\tapp.<span class=\"title function_\">component</span>(name, <span class=\"title function_\">defineAsyncComponent</span>(value))</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>main.js</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createApp &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App.vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/router&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> autoRegCom <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/components/index.js&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"title function_\">createApp</span>(<span class=\"title class_\">App</span>)</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(router).<span class=\"title function_\">use</span>(autoRegCom).<span class=\"title function_\">mount</span>(<span class=\"string\">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>直接使用</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Header</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Header</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Footer</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Footer</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"构建工具不是-vite\"><a href=\"#构建工具不是-vite\" class=\"headerlink\" title=\"**** 构建工具不是 vite ****\"></a>**** 构建工具不是 vite ****</h3><ul>\n<li>新建目录</li>\n</ul>\n<p><img src=\"/images/compoents%E4%B8%8B%E7%BB%84%E4%BB%B6%E8%87%AA%E5%8A%A8%E6%B3%A8%E5%86%8C/vue_com.png\"></p>\n<ul>\n<li>index.js</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 全局组件自动注册</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">\t<span class=\"title function_\">installCom</span>(<span class=\"params\">app</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// (&#x27;components文件夹下&#x27;, &#x27;是否取子集&#x27;, &#x27;正则匹配.vue结尾的的文件&#x27;)</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">const</span> ctx = <span class=\"built_in\">require</span>.<span class=\"title function_\">context</span>(<span class=\"string\">&#x27;../components&#x27;</span>, <span class=\"literal\">true</span>, <span class=\"regexp\">/\\.vue$/</span>)</span><br><span class=\"line\">\t\t<span class=\"comment\">// console.log(&#x27;ctx:&#x27;, ctx)</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (ctx &amp;&amp; ctx.<span class=\"title function_\">keys</span>()) &#123;</span><br><span class=\"line\">\t\t\tctx.<span class=\"title function_\">keys</span>()?.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">const</span> component = <span class=\"title function_\">ctx</span>(item).<span class=\"property\">default</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">let</span> path = (item || component.<span class=\"property\">__file</span>)?.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;/&#x27;</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">const</span> componentName =</span><br><span class=\"line\">\t\t\t\t\tpath &amp;&amp; path.<span class=\"property\">length</span> &amp;&amp; path[path.<span class=\"property\">length</span> - <span class=\"number\">1</span>].<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;.&#x27;</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// console.log(componentName, component)</span></span><br><span class=\"line\">\t\t\t\tapp.<span class=\"title function_\">component</span>(componentName, component)</span><br><span class=\"line\">\t\t\t&#125;)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>main.js</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createApp &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App.vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> autoRegCom <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/components/index.js&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"title function_\">createApp</span>(<span class=\"title class_\">App</span>)</span><br><span class=\"line\">autoRegCom.<span class=\"title function_\">installCom</span>(app)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>直接使用</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Header</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Header</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Footer</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Footer</span>&gt;</span></span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<p><strong>Vue 项目常用的构建工具：Vue-cli、Webpack、Vite</strong></p>\n<h3 id=\"构建工具是-vite\"><a href=\"#构建工具是-vite\" class=\"headerlink\" title=\"**** 构建工具是 vite ****\"></a>**** 构建工具是 vite ****</h3><ul>\n<li>新建目录</li>\n</ul>\n<p><img src=\"/images/compoents%E4%B8%8B%E7%BB%84%E4%BB%B6%E8%87%AA%E5%8A%A8%E6%B3%A8%E5%86%8C/vite_com.png\"></p>\n<ul>\n<li>index.js</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 自动注册全局组件components</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; defineAsyncComponent &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@description</span> 在src/components目录下创建文件，即 src/components/xxx.vue</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@description</span> 在src/components目录下创建目录及文件，即 src/components/xxx文件夹/xxx.vue</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> components = <span class=\"keyword\">import</span>.<span class=\"property\">meta</span>.<span class=\"title function_\">glob</span>(<span class=\"string\">&#x27;./**/**.vue&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">function</span> <span class=\"title function_\">install</span>(<span class=\"params\">app</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> [key, value] <span class=\"keyword\">of</span> <span class=\"title class_\">Object</span>.<span class=\"title function_\">entries</span>(components)) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">const</span> name = key.<span class=\"title function_\">slice</span>(key.<span class=\"title function_\">lastIndexOf</span>(<span class=\"string\">&#x27;/&#x27;</span>) + <span class=\"number\">1</span>, key.<span class=\"title function_\">lastIndexOf</span>(<span class=\"string\">&#x27;.&#x27;</span>))</span><br><span class=\"line\">\t\tapp.<span class=\"title function_\">component</span>(name, <span class=\"title function_\">defineAsyncComponent</span>(value))</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>main.js</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createApp &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App.vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/router&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> autoRegCom <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/components/index.js&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"title function_\">createApp</span>(<span class=\"title class_\">App</span>)</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(router).<span class=\"title function_\">use</span>(autoRegCom).<span class=\"title function_\">mount</span>(<span class=\"string\">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>直接使用</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Header</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Header</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Footer</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Footer</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"构建工具不是-vite\"><a href=\"#构建工具不是-vite\" class=\"headerlink\" title=\"**** 构建工具不是 vite ****\"></a>**** 构建工具不是 vite ****</h3><ul>\n<li>新建目录</li>\n</ul>\n<p><img src=\"/images/compoents%E4%B8%8B%E7%BB%84%E4%BB%B6%E8%87%AA%E5%8A%A8%E6%B3%A8%E5%86%8C/vue_com.png\"></p>\n<ul>\n<li>index.js</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 全局组件自动注册</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">\t<span class=\"title function_\">installCom</span>(<span class=\"params\">app</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// (&#x27;components文件夹下&#x27;, &#x27;是否取子集&#x27;, &#x27;正则匹配.vue结尾的的文件&#x27;)</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">const</span> ctx = <span class=\"built_in\">require</span>.<span class=\"title function_\">context</span>(<span class=\"string\">&#x27;../components&#x27;</span>, <span class=\"literal\">true</span>, <span class=\"regexp\">/\\.vue$/</span>)</span><br><span class=\"line\">\t\t<span class=\"comment\">// console.log(&#x27;ctx:&#x27;, ctx)</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (ctx &amp;&amp; ctx.<span class=\"title function_\">keys</span>()) &#123;</span><br><span class=\"line\">\t\t\tctx.<span class=\"title function_\">keys</span>()?.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">const</span> component = <span class=\"title function_\">ctx</span>(item).<span class=\"property\">default</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">let</span> path = (item || component.<span class=\"property\">__file</span>)?.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;/&#x27;</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">const</span> componentName =</span><br><span class=\"line\">\t\t\t\t\tpath &amp;&amp; path.<span class=\"property\">length</span> &amp;&amp; path[path.<span class=\"property\">length</span> - <span class=\"number\">1</span>].<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;.&#x27;</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// console.log(componentName, component)</span></span><br><span class=\"line\">\t\t\t\tapp.<span class=\"title function_\">component</span>(componentName, component)</span><br><span class=\"line\">\t\t\t&#125;)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>main.js</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createApp &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App.vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> autoRegCom <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/components/index.js&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"title function_\">createApp</span>(<span class=\"title class_\">App</span>)</span><br><span class=\"line\">autoRegCom.<span class=\"title function_\">installCom</span>(app)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>直接使用</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Header</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Header</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Footer</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Footer</span>&gt;</span></span><br></pre></td></tr></table></figure>\n"},{"title":"nvm管理node","date":"2025-07-14T02:41:46.000Z","cover":"/images/nvm管理node/cover.jpg","_content":"\n#### 1、安装nvm \n+ https://github.com/coreybutler/nvm-windows/releases\n![](images/nvm管理node/node.png)\n\n+ 点击`.exe`文件 → `accept` → nvm的安装路径 (`D:\\NVM\\nvm`) → 创建nodejs文件放在`D:\\NVM\\nvm`下 → 一直点击`next`安装完成\n\n#### 2、给该文件添加这两行命令\nnode_mirror: https://npm.taobao.org/mirrors/node/\nnpm_mirror: https://npm.taobao.org/mirrors/npm/\n\n![](images/nvm管理node/nvms1.png)\n![](images/nvm管理node/nvms2.png)\n\n#### 3、配置环境变量\n![](images/nvm管理node/path1.png)\n\n#### 4、测试一下\n```bash\n  nvm -v  // 查看当前版本\n  nvm --config \n  nvm ls // 查看已安装的node版本\n  nvm install 版本号  // 下载对应node版本, nvm install 16.16.0\n  nvm use 版本号 // 切换node版本, nvm use 16.16.0\n  nvm on  // 开启nvm\n  nvm off  // 关闭nvm\n  nvm list available  // 查看node所有可以下载的版本\n  node -v  // 查看node版本\n```\n\n#### Tips: 如果原本电脑已安装某个版本的nodejs\n* 在安装nvm会检测是否安装某个版本的nodejs, 并提示该版本是否需要被nvm管理，如果选择是，该node的安装路径会自动变到对应的nvm安装目录下\n![](images/nvm管理node/nvms3.png)\n* 当 \"`nvm install node版本`\" 时报错，可以改一下node镜像\n![](images/nvm管理node/path2.png)\n\n","source":"_posts/2025-07-14-nvm管理node.md","raw":"---\ntitle: nvm管理node\ndate: 2025-07-14 10:41:46\ntags:\n  - nvm\n  - nodejs\ncover: /images/nvm管理node/cover.jpg\n---\n\n#### 1、安装nvm \n+ https://github.com/coreybutler/nvm-windows/releases\n![](images/nvm管理node/node.png)\n\n+ 点击`.exe`文件 → `accept` → nvm的安装路径 (`D:\\NVM\\nvm`) → 创建nodejs文件放在`D:\\NVM\\nvm`下 → 一直点击`next`安装完成\n\n#### 2、给该文件添加这两行命令\nnode_mirror: https://npm.taobao.org/mirrors/node/\nnpm_mirror: https://npm.taobao.org/mirrors/npm/\n\n![](images/nvm管理node/nvms1.png)\n![](images/nvm管理node/nvms2.png)\n\n#### 3、配置环境变量\n![](images/nvm管理node/path1.png)\n\n#### 4、测试一下\n```bash\n  nvm -v  // 查看当前版本\n  nvm --config \n  nvm ls // 查看已安装的node版本\n  nvm install 版本号  // 下载对应node版本, nvm install 16.16.0\n  nvm use 版本号 // 切换node版本, nvm use 16.16.0\n  nvm on  // 开启nvm\n  nvm off  // 关闭nvm\n  nvm list available  // 查看node所有可以下载的版本\n  node -v  // 查看node版本\n```\n\n#### Tips: 如果原本电脑已安装某个版本的nodejs\n* 在安装nvm会检测是否安装某个版本的nodejs, 并提示该版本是否需要被nvm管理，如果选择是，该node的安装路径会自动变到对应的nvm安装目录下\n![](images/nvm管理node/nvms3.png)\n* 当 \"`nvm install node版本`\" 时报错，可以改一下node镜像\n![](images/nvm管理node/path2.png)\n\n","slug":"nvm管理node","published":1,"updated":"2025-09-13T08:09:15.102Z","_id":"cmel89peb000irwnc52ktd2gn","comments":1,"layout":"post","photos":[],"content":"<h4 id=\"1、安装nvm\"><a href=\"#1、安装nvm\" class=\"headerlink\" title=\"1、安装nvm\"></a>1、安装nvm</h4><ul>\n<li><p><a href=\"https://github.com/coreybutler/nvm-windows/releases\">https://github.com/coreybutler/nvm-windows/releases</a><br><img src=\"/images/nvm%E7%AE%A1%E7%90%86node/node.png\"></p>\n</li>\n<li><p>点击<code>.exe</code>文件 → <code>accept</code> → nvm的安装路径 (<code>D:\\NVM\\nvm</code>) → 创建nodejs文件放在<code>D:\\NVM\\nvm</code>下 → 一直点击<code>next</code>安装完成</p>\n</li>\n</ul>\n<h4 id=\"2、给该文件添加这两行命令\"><a href=\"#2、给该文件添加这两行命令\" class=\"headerlink\" title=\"2、给该文件添加这两行命令\"></a>2、给该文件添加这两行命令</h4><p>node_mirror: <a href=\"https://npm.taobao.org/mirrors/node/\">https://npm.taobao.org/mirrors/node/</a><br>npm_mirror: <a href=\"https://npm.taobao.org/mirrors/npm/\">https://npm.taobao.org/mirrors/npm/</a></p>\n<p><img src=\"/images/nvm%E7%AE%A1%E7%90%86node/nvms1.png\"><br><img src=\"/images/nvm%E7%AE%A1%E7%90%86node/nvms2.png\"></p>\n<h4 id=\"3、配置环境变量\"><a href=\"#3、配置环境变量\" class=\"headerlink\" title=\"3、配置环境变量\"></a>3、配置环境变量</h4><p><img src=\"/images/nvm%E7%AE%A1%E7%90%86node/path1.png\"></p>\n<h4 id=\"4、测试一下\"><a href=\"#4、测试一下\" class=\"headerlink\" title=\"4、测试一下\"></a>4、测试一下</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm -v  // 查看当前版本</span><br><span class=\"line\">nvm --config </span><br><span class=\"line\">nvm <span class=\"built_in\">ls</span> // 查看已安装的node版本</span><br><span class=\"line\">nvm install 版本号  // 下载对应node版本, nvm install 16.16.0</span><br><span class=\"line\">nvm use 版本号 // 切换node版本, nvm use 16.16.0</span><br><span class=\"line\">nvm on  // 开启nvm</span><br><span class=\"line\">nvm off  // 关闭nvm</span><br><span class=\"line\">nvm list available  // 查看node所有可以下载的版本</span><br><span class=\"line\">node -v  // 查看node版本</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Tips-如果原本电脑已安装某个版本的nodejs\"><a href=\"#Tips-如果原本电脑已安装某个版本的nodejs\" class=\"headerlink\" title=\"Tips: 如果原本电脑已安装某个版本的nodejs\"></a>Tips: 如果原本电脑已安装某个版本的nodejs</h4><ul>\n<li>在安装nvm会检测是否安装某个版本的nodejs, 并提示该版本是否需要被nvm管理，如果选择是，该node的安装路径会自动变到对应的nvm安装目录下<br><img src=\"/images/nvm%E7%AE%A1%E7%90%86node/nvms3.png\"></li>\n<li>当 “<code>nvm install node版本</code>“ 时报错，可以改一下node镜像<br><img src=\"/images/nvm%E7%AE%A1%E7%90%86node/path2.png\"></li>\n</ul>\n","excerpt":"","more":"<h4 id=\"1、安装nvm\"><a href=\"#1、安装nvm\" class=\"headerlink\" title=\"1、安装nvm\"></a>1、安装nvm</h4><ul>\n<li><p><a href=\"https://github.com/coreybutler/nvm-windows/releases\">https://github.com/coreybutler/nvm-windows/releases</a><br><img src=\"/images/nvm%E7%AE%A1%E7%90%86node/node.png\"></p>\n</li>\n<li><p>点击<code>.exe</code>文件 → <code>accept</code> → nvm的安装路径 (<code>D:\\NVM\\nvm</code>) → 创建nodejs文件放在<code>D:\\NVM\\nvm</code>下 → 一直点击<code>next</code>安装完成</p>\n</li>\n</ul>\n<h4 id=\"2、给该文件添加这两行命令\"><a href=\"#2、给该文件添加这两行命令\" class=\"headerlink\" title=\"2、给该文件添加这两行命令\"></a>2、给该文件添加这两行命令</h4><p>node_mirror: <a href=\"https://npm.taobao.org/mirrors/node/\">https://npm.taobao.org/mirrors/node/</a><br>npm_mirror: <a href=\"https://npm.taobao.org/mirrors/npm/\">https://npm.taobao.org/mirrors/npm/</a></p>\n<p><img src=\"/images/nvm%E7%AE%A1%E7%90%86node/nvms1.png\"><br><img src=\"/images/nvm%E7%AE%A1%E7%90%86node/nvms2.png\"></p>\n<h4 id=\"3、配置环境变量\"><a href=\"#3、配置环境变量\" class=\"headerlink\" title=\"3、配置环境变量\"></a>3、配置环境变量</h4><p><img src=\"/images/nvm%E7%AE%A1%E7%90%86node/path1.png\"></p>\n<h4 id=\"4、测试一下\"><a href=\"#4、测试一下\" class=\"headerlink\" title=\"4、测试一下\"></a>4、测试一下</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm -v  // 查看当前版本</span><br><span class=\"line\">nvm --config </span><br><span class=\"line\">nvm <span class=\"built_in\">ls</span> // 查看已安装的node版本</span><br><span class=\"line\">nvm install 版本号  // 下载对应node版本, nvm install 16.16.0</span><br><span class=\"line\">nvm use 版本号 // 切换node版本, nvm use 16.16.0</span><br><span class=\"line\">nvm on  // 开启nvm</span><br><span class=\"line\">nvm off  // 关闭nvm</span><br><span class=\"line\">nvm list available  // 查看node所有可以下载的版本</span><br><span class=\"line\">node -v  // 查看node版本</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Tips-如果原本电脑已安装某个版本的nodejs\"><a href=\"#Tips-如果原本电脑已安装某个版本的nodejs\" class=\"headerlink\" title=\"Tips: 如果原本电脑已安装某个版本的nodejs\"></a>Tips: 如果原本电脑已安装某个版本的nodejs</h4><ul>\n<li>在安装nvm会检测是否安装某个版本的nodejs, 并提示该版本是否需要被nvm管理，如果选择是，该node的安装路径会自动变到对应的nvm安装目录下<br><img src=\"/images/nvm%E7%AE%A1%E7%90%86node/nvms3.png\"></li>\n<li>当 “<code>nvm install node版本</code>“ 时报错，可以改一下node镜像<br><img src=\"/images/nvm%E7%AE%A1%E7%90%86node/path2.png\"></li>\n</ul>\n"},{"title":"setTimeout与闭包","date":"2025-07-28T03:10:21.000Z","cover":"/images/setTimeout与闭包/cover.jpg","_content":"\n```javascript\nfor (var i = 0; i < 5; i++) {\n\tsetTimeout(function () {\n\t\tconsole.log(i)\n\t}, i * 1000)\n}\n```\n\n- 问题：上述代码的输出结果是什么？如何修改代码使其按预期输出 0 到 4？\n\n---\n\n- 答案：输出结果是连续输出 5 个 5\n\n- 原因：var 声明的变量没有块级作用域，setTimeout 中的回调函数会在循环结束(同步代码执行完成，异步队列开始轮训 setTimeout)后才执行，此时 i 的值已经变为 5\n\n- 修改方案 1：可以使用 let 声明变量来解决这个问题，因为 let 有块级作用域，每个回调函数都会捕获到不同的 i 值\n\n```javascript\n// 修改后的代码\nfor (let i = 0; i < 5; i++) {\n\tsetTimeout(function () {\n\t\tconsole.log(i)\n\t}, i * 1000)\n}\n```\n\n- 修改方案 2：使用 setTimeout 的第三个参数，作为回调函数的参数传递进去，可以将当前 i 值传递给回调函数\n\n```javascript\n// 修改后的代码\nfor (var i = 0; i < 5; i++) {\n\tsetTimeout(function (index) {\n\t\tconsole.log(index)\n\t}, i * 1000, i)\n}\n```\n\n","source":"_posts/2025-07-28-setTimeout与闭包.md","raw":"---\ntitle: setTimeout与闭包\ndate: 2025-07-28 11:10:21\ntags: setTimeout\ncategories: Javascript\ncover: /images/setTimeout与闭包/cover.jpg # 封面图\n---\n\n```javascript\nfor (var i = 0; i < 5; i++) {\n\tsetTimeout(function () {\n\t\tconsole.log(i)\n\t}, i * 1000)\n}\n```\n\n- 问题：上述代码的输出结果是什么？如何修改代码使其按预期输出 0 到 4？\n\n---\n\n- 答案：输出结果是连续输出 5 个 5\n\n- 原因：var 声明的变量没有块级作用域，setTimeout 中的回调函数会在循环结束(同步代码执行完成，异步队列开始轮训 setTimeout)后才执行，此时 i 的值已经变为 5\n\n- 修改方案 1：可以使用 let 声明变量来解决这个问题，因为 let 有块级作用域，每个回调函数都会捕获到不同的 i 值\n\n```javascript\n// 修改后的代码\nfor (let i = 0; i < 5; i++) {\n\tsetTimeout(function () {\n\t\tconsole.log(i)\n\t}, i * 1000)\n}\n```\n\n- 修改方案 2：使用 setTimeout 的第三个参数，作为回调函数的参数传递进去，可以将当前 i 值传递给回调函数\n\n```javascript\n// 修改后的代码\nfor (var i = 0; i < 5; i++) {\n\tsetTimeout(function (index) {\n\t\tconsole.log(index)\n\t}, i * 1000, i)\n}\n```\n\n","slug":"setTimeout与闭包","published":1,"updated":"2025-07-28T07:22:05.400Z","comments":1,"layout":"post","photos":[],"_id":"cmel89pec000jrwncgh71a9np","content":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i)</span><br><span class=\"line\">\t&#125;, i * <span class=\"number\">1000</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>问题：上述代码的输出结果是什么？如何修改代码使其按预期输出 0 到 4？</li>\n</ul>\n<hr>\n<ul>\n<li><p>答案：输出结果是连续输出 5 个 5</p>\n</li>\n<li><p>原因：var 声明的变量没有块级作用域，setTimeout 中的回调函数会在循环结束(同步代码执行完成，异步队列开始轮训 setTimeout)后才执行，此时 i 的值已经变为 5</p>\n</li>\n<li><p>修改方案 1：可以使用 let 声明变量来解决这个问题，因为 let 有块级作用域，每个回调函数都会捕获到不同的 i 值</p>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 修改后的代码</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i)</span><br><span class=\"line\">\t&#125;, i * <span class=\"number\">1000</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>修改方案 2：使用 setTimeout 的第三个参数，作为回调函数的参数传递进去，可以将当前 i 值传递给回调函数</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 修改后的代码</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\">index</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(index)</span><br><span class=\"line\">\t&#125;, i * <span class=\"number\">1000</span>, i)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","excerpt":"","more":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i)</span><br><span class=\"line\">\t&#125;, i * <span class=\"number\">1000</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>问题：上述代码的输出结果是什么？如何修改代码使其按预期输出 0 到 4？</li>\n</ul>\n<hr>\n<ul>\n<li><p>答案：输出结果是连续输出 5 个 5</p>\n</li>\n<li><p>原因：var 声明的变量没有块级作用域，setTimeout 中的回调函数会在循环结束(同步代码执行完成，异步队列开始轮训 setTimeout)后才执行，此时 i 的值已经变为 5</p>\n</li>\n<li><p>修改方案 1：可以使用 let 声明变量来解决这个问题，因为 let 有块级作用域，每个回调函数都会捕获到不同的 i 值</p>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 修改后的代码</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i)</span><br><span class=\"line\">\t&#125;, i * <span class=\"number\">1000</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>修改方案 2：使用 setTimeout 的第三个参数，作为回调函数的参数传递进去，可以将当前 i 值传递给回调函数</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 修改后的代码</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\">index</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(index)</span><br><span class=\"line\">\t&#125;, i * <span class=\"number\">1000</span>, i)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Event事件循环","date":"2025-07-29T02:51:52.000Z","cover":"/images/Event事件循环/cover.jpg","_content":"\n```javascript\nconsole.log('Start')\nsetTimeout(() => {\n\tconsole.log('Timeout1')\n}, 10000)\nPromise.resolve().then(() => {\n\tconsole.log('Promise1')\n})\nsetTimeout(() => {\n\tconsole.log('Timeout2')\n}, 0)\nconst timmer = setInterval(() => {\n\tconsole.log('Interval')\n}, 3000)\nPromise.resolve().then(() => {\n\tconsole.log('Promise2')\n})\nconsole.log('End')\nclearInterval()\n```\n\n- 问题：请解释上述代码的执行顺序，为什么会按照这样的顺序输出结果？\n\n---\n\n- Event Loop：在事件循环机制中，任务分为 微任务(Promise 回调、DOM 变化监听等) 和 宏任务(setTimeout/setInterval、DOM 事件回调 click/scroll 等)\n\n- 解答：\n  - 代码开始执行，首先输出 `Start`\n  - 遇到  `setTimeout(() => { console.log('Timeout1'); }, 10000)`，它会在 10 秒后将回调函数  () => { console.log('Timeout1'); }  放入宏任务队列\n  - 接着  `Promise.resolve().then(() => { console.log('Promise1'); })`，Promise.resolve()  会返回一个已解决的  Promise  对象，其  then  方法里的回调函数  () => { console.log('Promise1'); }  会被添加到微任务队列\n  - 再碰到 `setTimeout(() => { console.log('Timeout2'); }, 0)`，尽管延迟时间设为 0 毫秒，在 0 秒把回调函数  () => { console.log('Timeout2'); }  放入宏任务队列\n  - 之后是 `setInterval(() => { console.log('Interval'); }, 3000)`，它会在 3 秒后将回调函数  () => { console.log('Interval'); }  放入宏任务队列，并且之后每隔 3 秒放入一次\n  - 又遇到 `Promise.resolve().then(() => { console.log('Promise2'); })`，then  方法的回调函数  () => { console.log('Promise2'); }  会被加入微任务队列\n  - 接着输出 `End`\n  - 接着执行 `clearInterval()` (clearInterval 是同步)，无任何入参，所以它不会清除任何定时器，也不会抛出错误\n  - **当主线程的同步代码执行完后，事件循环会优先处理微任务队列**，会输出  Promise1、接着输出 Promise2\n  - **微任务队列处理完毕后，事件循环会从宏任务队列中取出任务执行**，所以最后输出 Timeout2、3 次 Interval、Timeout1、n 次 Interval\n  - 综上所述，代码的输出顺序为 `Start、End、Promise1、Promise2、Timeout2、Interval、Interval、Interval、Timeout1、Interval、Interval、Interval...`\n","source":"_posts/2025-07-29-Event事件循环.md","raw":"---\ntitle: Event事件循环\ndate: 2025-07-29 10:51:52\ntags: event loop\ncategories: Javascript\ncover: /images/Event事件循环/cover.jpg # 封面图\n---\n\n```javascript\nconsole.log('Start')\nsetTimeout(() => {\n\tconsole.log('Timeout1')\n}, 10000)\nPromise.resolve().then(() => {\n\tconsole.log('Promise1')\n})\nsetTimeout(() => {\n\tconsole.log('Timeout2')\n}, 0)\nconst timmer = setInterval(() => {\n\tconsole.log('Interval')\n}, 3000)\nPromise.resolve().then(() => {\n\tconsole.log('Promise2')\n})\nconsole.log('End')\nclearInterval()\n```\n\n- 问题：请解释上述代码的执行顺序，为什么会按照这样的顺序输出结果？\n\n---\n\n- Event Loop：在事件循环机制中，任务分为 微任务(Promise 回调、DOM 变化监听等) 和 宏任务(setTimeout/setInterval、DOM 事件回调 click/scroll 等)\n\n- 解答：\n  - 代码开始执行，首先输出 `Start`\n  - 遇到  `setTimeout(() => { console.log('Timeout1'); }, 10000)`，它会在 10 秒后将回调函数  () => { console.log('Timeout1'); }  放入宏任务队列\n  - 接着  `Promise.resolve().then(() => { console.log('Promise1'); })`，Promise.resolve()  会返回一个已解决的  Promise  对象，其  then  方法里的回调函数  () => { console.log('Promise1'); }  会被添加到微任务队列\n  - 再碰到 `setTimeout(() => { console.log('Timeout2'); }, 0)`，尽管延迟时间设为 0 毫秒，在 0 秒把回调函数  () => { console.log('Timeout2'); }  放入宏任务队列\n  - 之后是 `setInterval(() => { console.log('Interval'); }, 3000)`，它会在 3 秒后将回调函数  () => { console.log('Interval'); }  放入宏任务队列，并且之后每隔 3 秒放入一次\n  - 又遇到 `Promise.resolve().then(() => { console.log('Promise2'); })`，then  方法的回调函数  () => { console.log('Promise2'); }  会被加入微任务队列\n  - 接着输出 `End`\n  - 接着执行 `clearInterval()` (clearInterval 是同步)，无任何入参，所以它不会清除任何定时器，也不会抛出错误\n  - **当主线程的同步代码执行完后，事件循环会优先处理微任务队列**，会输出  Promise1、接着输出 Promise2\n  - **微任务队列处理完毕后，事件循环会从宏任务队列中取出任务执行**，所以最后输出 Timeout2、3 次 Interval、Timeout1、n 次 Interval\n  - 综上所述，代码的输出顺序为 `Start、End、Promise1、Promise2、Timeout2、Interval、Interval、Interval、Timeout1、Interval、Interval、Interval...`\n","slug":"Event事件循环","published":1,"updated":"2025-09-13T08:09:15.104Z","_id":"cmel89ped000nrwnc3akfhhnx","comments":1,"layout":"post","photos":[],"content":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Start&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Timeout1&#x27;</span>)</span><br><span class=\"line\">&#125;, <span class=\"number\">10000</span>)</span><br><span class=\"line\"><span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>().<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Promise1&#x27;</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Timeout2&#x27;</span>)</span><br><span class=\"line\">&#125;, <span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> timmer = <span class=\"built_in\">setInterval</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Interval&#x27;</span>)</span><br><span class=\"line\">&#125;, <span class=\"number\">3000</span>)</span><br><span class=\"line\"><span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>().<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Promise2&#x27;</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;End&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">clearInterval</span>()</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>问题：请解释上述代码的执行顺序，为什么会按照这样的顺序输出结果？</li>\n</ul>\n<hr>\n<ul>\n<li><p>Event Loop：在事件循环机制中，任务分为 微任务(Promise 回调、DOM 变化监听等) 和 宏任务(setTimeout&#x2F;setInterval、DOM 事件回调 click&#x2F;scroll 等)</p>\n</li>\n<li><p>解答：</p>\n<ul>\n<li>代码开始执行，首先输出 <code>Start</code></li>\n<li>遇到  <code>setTimeout(() =&gt; &#123; console.log(&#39;Timeout1&#39;); &#125;, 10000)</code>，它会在 10 秒后将回调函数  () &#x3D;&gt; { console.log(‘Timeout1’); }  放入宏任务队列</li>\n<li>接着  <code>Promise.resolve().then(() =&gt; &#123; console.log(&#39;Promise1&#39;); &#125;)</code>，Promise.resolve()  会返回一个已解决的  Promise  对象，其  then  方法里的回调函数  () &#x3D;&gt; { console.log(‘Promise1’); }  会被添加到微任务队列</li>\n<li>再碰到 <code>setTimeout(() =&gt; &#123; console.log(&#39;Timeout2&#39;); &#125;, 0)</code>，尽管延迟时间设为 0 毫秒，在 0 秒把回调函数  () &#x3D;&gt; { console.log(‘Timeout2’); }  放入宏任务队列</li>\n<li>之后是 <code>setInterval(() =&gt; &#123; console.log(&#39;Interval&#39;); &#125;, 3000)</code>，它会在 3 秒后将回调函数  () &#x3D;&gt; { console.log(‘Interval’); }  放入宏任务队列，并且之后每隔 3 秒放入一次</li>\n<li>又遇到 <code>Promise.resolve().then(() =&gt; &#123; console.log(&#39;Promise2&#39;); &#125;)</code>，then  方法的回调函数  () &#x3D;&gt; { console.log(‘Promise2’); }  会被加入微任务队列</li>\n<li>接着输出 <code>End</code></li>\n<li>接着执行 <code>clearInterval()</code> (clearInterval 是同步)，无任何入参，所以它不会清除任何定时器，也不会抛出错误</li>\n<li><strong>当主线程的同步代码执行完后，事件循环会优先处理微任务队列</strong>，会输出  Promise1、接着输出 Promise2</li>\n<li><strong>微任务队列处理完毕后，事件循环会从宏任务队列中取出任务执行</strong>，所以最后输出 Timeout2、3 次 Interval、Timeout1、n 次 Interval</li>\n<li>综上所述，代码的输出顺序为 <code>Start、End、Promise1、Promise2、Timeout2、Interval、Interval、Interval、Timeout1、Interval、Interval、Interval...</code></li>\n</ul>\n</li>\n</ul>\n","excerpt":"","more":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Start&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Timeout1&#x27;</span>)</span><br><span class=\"line\">&#125;, <span class=\"number\">10000</span>)</span><br><span class=\"line\"><span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>().<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Promise1&#x27;</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Timeout2&#x27;</span>)</span><br><span class=\"line\">&#125;, <span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> timmer = <span class=\"built_in\">setInterval</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Interval&#x27;</span>)</span><br><span class=\"line\">&#125;, <span class=\"number\">3000</span>)</span><br><span class=\"line\"><span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>().<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Promise2&#x27;</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;End&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">clearInterval</span>()</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>问题：请解释上述代码的执行顺序，为什么会按照这样的顺序输出结果？</li>\n</ul>\n<hr>\n<ul>\n<li><p>Event Loop：在事件循环机制中，任务分为 微任务(Promise 回调、DOM 变化监听等) 和 宏任务(setTimeout&#x2F;setInterval、DOM 事件回调 click&#x2F;scroll 等)</p>\n</li>\n<li><p>解答：</p>\n<ul>\n<li>代码开始执行，首先输出 <code>Start</code></li>\n<li>遇到  <code>setTimeout(() =&gt; &#123; console.log(&#39;Timeout1&#39;); &#125;, 10000)</code>，它会在 10 秒后将回调函数  () &#x3D;&gt; { console.log(‘Timeout1’); }  放入宏任务队列</li>\n<li>接着  <code>Promise.resolve().then(() =&gt; &#123; console.log(&#39;Promise1&#39;); &#125;)</code>，Promise.resolve()  会返回一个已解决的  Promise  对象，其  then  方法里的回调函数  () &#x3D;&gt; { console.log(‘Promise1’); }  会被添加到微任务队列</li>\n<li>再碰到 <code>setTimeout(() =&gt; &#123; console.log(&#39;Timeout2&#39;); &#125;, 0)</code>，尽管延迟时间设为 0 毫秒，在 0 秒把回调函数  () &#x3D;&gt; { console.log(‘Timeout2’); }  放入宏任务队列</li>\n<li>之后是 <code>setInterval(() =&gt; &#123; console.log(&#39;Interval&#39;); &#125;, 3000)</code>，它会在 3 秒后将回调函数  () &#x3D;&gt; { console.log(‘Interval’); }  放入宏任务队列，并且之后每隔 3 秒放入一次</li>\n<li>又遇到 <code>Promise.resolve().then(() =&gt; &#123; console.log(&#39;Promise2&#39;); &#125;)</code>，then  方法的回调函数  () &#x3D;&gt; { console.log(‘Promise2’); }  会被加入微任务队列</li>\n<li>接着输出 <code>End</code></li>\n<li>接着执行 <code>clearInterval()</code> (clearInterval 是同步)，无任何入参，所以它不会清除任何定时器，也不会抛出错误</li>\n<li><strong>当主线程的同步代码执行完后，事件循环会优先处理微任务队列</strong>，会输出  Promise1、接着输出 Promise2</li>\n<li><strong>微任务队列处理完毕后，事件循环会从宏任务队列中取出任务执行</strong>，所以最后输出 Timeout2、3 次 Interval、Timeout1、n 次 Interval</li>\n<li>综上所述，代码的输出顺序为 <code>Start、End、Promise1、Promise2、Timeout2、Interval、Interval、Interval、Timeout1、Interval、Interval、Interval...</code></li>\n</ul>\n</li>\n</ul>\n"},{"title":"【微信小程序实战】之准备工作详解","date":"2025-07-31T03:03:53.000Z","cover":"/images/微信小程序实战/准备工作/cover.jpg","_content":"\n### ✍️ 小程序和普通网页的区别\n\n- 运行环境不同\n  - 网页运行在浏览器环境中\n  - 小程序运行在微信小程序中\n- API 不同\n  - 小程序：由于运行环境不同，所以在小程序中无法调用 DOM 和 BOM 的 API\n  - 但是，小程序可以调用微信环境提供的各种 API\n    - 地理定位\n    - 扫码\n    - 支付\n    - ...\n- 开发模式不同\n  - 网页开发模式：浏览器+代码编辑器(Vscode、Cursor...)\n  - 小程序有自己的一套标准开发模式：\n    - 申请小程序开发账号\n    - 安装小程序开发者工具\n    - 创建和配置小程序项目\n\n### ✍️ 申请小程序账号\n\n- 开发微信小程序的第一步，是需要在[微信公众平台](https://mp.weixin.qq.com/)先申请一个小程序的账号，通过这个账号可以管理自己的小程序\n  ![](/images/微信小程序实战/准备工作/wxgzpt.png)\n\n- 点击“立即注册” → 选择注册账号类型，微信公众平台提供了四种类型的账号注册，分别为：订阅号、服务号、小程序、企业微信\n  {% raw %}\n  <!-- ![](/images/微信小程序实战/准备工作/wxtype4.png) -->\n  {% endraw %}\n  <img src=\"/images/微信小程序实战/准备工作/wxtype4.png\" alt=\"image\" class=\"max600\"/>\n\n  - 订阅号，对所有主体开放，包括政府、企事业单位、非盈利性机构、社会组织、媒体、个人等，推送消息在用户消息盒子中显示，每天可以推送一次，对开发者提供的开放能力有限\n  - 服务号，不对个人主体开放，只对组织主体开放注册，包括政府、企事业单位、非盈利性机构、社会组织、媒体，推送消息在用户的消息列表中显示，对开发者提供更全面的开放能力\n  - 小程序，一种全新的连接用户与服务的方式，具有更加出色的交互体验，小程序内具有调用手机硬件能力，适合所有主体注册，为了保护用户隐私，尽量减少对用户的打扰，小程序不支持信息推送\n  - 企业微信，为企业提供更高效的协同办公体验，只对企业及组织开发注册权限\n\n- 注册小程序\n\n  - 小程序注册规则：\n\n    - 小程序的注册上限：\n      - 1）同一个邮箱只能申请 1 个小程序\n      - 2）同一个手机号码可绑定 5 个小程序\n      - 3）同一身份证注册个人类型小程序数量上限为 5 个\n      - 4）同一企业、政府、媒体、其他组织资料注册小程序数量上限为 50 个\n      - 5）同一个体工商户注册小程序数量上限为 5 个\n    - 小程序的绑定上限：\n      - 1）同一身份证可绑定 5 个小程序\n      - 2）同一手机号可绑定 5 个小程序\n      - 3）同一微信号可绑定 5 个小程序\n\n  - 账号信息：填写邮箱/验证码/密码 → 注册\n    ![](/images/微信小程序实战/准备工作/registerAccount.png)\n\n  - 信息登记：选择主体类型\"个人\" → 填写姓名/身份证号/手机号/短信验证 → 扫码(扫码的微信号成为小程序账号的管理员) → 继续\n    ![](/images/微信小程序实战/准备工作/infoRecord.png)\n\n  - 主体一旦提交并认证成功之后，被认证的主体信息不可变更\n    <img src=\"/images/微信小程序实战/准备工作/confirmInfo.png\" alt=\"image\" class=\"max450\"/>\n\n  - 提交后，等待官方对注册主体的认证结果，认证成功后，注册过程就结束了，就有了自己的小程序账号\n    ![](/images/微信小程序实战/准备工作/accountManage.png)\n\n- [微信公众平台](https://mp.weixin.qq.com/)\n  - 两种登录方式：邮箱+密码登录 、 微信扫码登录\n\n### ✍️ 微信开发者工具下载与安装\n\n- [微信开发者工具](https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html)下载\n  ![](/images/微信小程序实战/准备工作/wxtooldowload.png)\n\n- 安装步骤很简单：选择安装路径，一直下一步就好了\n  ![](/images/微信小程序实战/准备工作/wxtoolexe.png)\n\n- 微信扫码登录开发工具(游客模式功能受限)\n  <img src=\"/images/微信小程序实战/准备工作/wxtool.png\" alt=\"image\" class=\"max600\"/>\n\n### ✍️ 编写第一个小程序\n\n- 点击\"+\"创建小程序，AppId 填写刚申请的小程序账号上的，项目名称、后端服务、模板等都可以自行选择\n  ![](/images/微信小程序实战/准备工作/createProject1.png)\n  ![](/images/微信小程序实战/准备工作/createProject0.png)\n\n- 默认项目效果如图：\n  ![](/images/微信小程序实战/准备工作/createProject2.png)\n\n- 熟悉：微信开发者工具的使用\n\n- 预览：微信开发者工具提供了两种在真机中预览小程序的方式\n\n  - 扫描二维码预览\n  - 自动预览，免去了每次看效果时都要扫码的步骤，点击工具栏中的“预览”按钮，然后在手机中保持微信的前台运行状态既可以自动唤出小程序\n    ![](/images/微信小程序实战/准备工作/preview.png)\n\n- 上传代码\n\n  - 填写版本号和 commit 备注信息\n    ![](/images/微信小程序实战/准备工作/uploadcode.png)\n\n  - 上传成功之后：微信公众平台(小程序管理后台) → 版本管理 → 需要管理员将本次上传设置为体验版本\n    ![](/images/微信小程序实战/准备工作/updateVersion.png)\n\n  - 体验版本：有一个二维码，扫码即可体验小程序\n    ![](/images/微信小程序实战/准备工作/updateVersion2.png)\n\n- 发布小程序：在后台中提交审核，待审核通过后即实现小程序的发布上线\n  - 【注】提交审核前，小程序还需备案，填写小程序的基本设置、第三方设置、关联设置等等\n    ![](/images/微信小程序实战/准备工作/release.png)\n\n  - 小程序的基本信息填写之后：小程序的名称和 logo 就出现在登录账号上了(可以更清晰的区分小程序了)\n    ![](/images/微信小程序实战/准备工作/release1.png)\n\n### ✍️ 代码管理(远程仓库)\n\n- 详细步骤可以在 [微信官方文档/微信开发者·代码管理](https://developers.weixin.qq.com/miniprogram/dev/devtools/wechatvcs.html) 这里查看\n\n- 我的步骤：\n\n  - [微信开发者·代码管理](https://git.weixin.qq.com/)，然后微信授权登录，面板如下所示：【和 gitlab、gitee、github 是一样的代码托管平台】\n    ![](/images/微信小程序实战/准备工作/wx_git_magage.png)\n\n  - Git 初始化：输入一个账号名称 lqh_wx (自定义)\n    <img src=\"/images/微信小程序实战/准备工作/wx_git_account.png\" alt=\"image\" class=\"max500\"/>\n\n  - Git 初始化：个人设置 → 账户 → 设置密码(自定义)\n    <img src=\"/images/微信小程序实战/准备工作/wx_git_password.png\" alt=\"image\" class=\"max500\"/>\n\n  - 新建一个项目 wxDemo\n    <img src=\"/images/微信小程序实战/准备工作/wx_git_newproject.png\" alt=\"image\" class=\"max600\"/>\n\n  - 在本地项目 wxDemo 中，执行 git 命令连接远程仓库 (第一次推送代码到远程需要账号/密码验证)\n    <img src=\"/images/微信小程序实战/准备工作/wx_git_link_origin.png\" alt=\"image\" class=\"max500\"/>\n\n    ```bash\n      git init\n      git remote add origin https://git.weixin.qq.com/lqh_wx/wxDemo.git\n      git add .\n      git commit -m \"第一次提交\"\n      git push -u origin master\n    ```\n\n    ![](/images/微信小程序实战/准备工作/wx_git_push_origin.png)\n\n  - 代码推送到远程仓库，成功\n    ![](/images/微信小程序实战/准备工作/wx_git_push_origin2.png)\n\n  - 后续开发提交远程，可以使用\"版本管理\"功能【类似于 Sourcetree】，也可在终端使用 git 命令推送代码\n    ![](/images/微信小程序实战/准备工作/wx_git_version.png)\n\n{% raw %}\n<!-- 防止 Hexo 标签冲突：Hexo 使用 {% %} 作为标签语法 -->\n<div id=\"box\">🔒点击一下我</div><span id=\"tips\"></span>\n<script>\n  document.getElementById('box').onclick = function(event) {\n    var tips = document.getElementById('tips')\n    if(!tips.innerText) {\n      tips.innerText = '🔑看到这里，你真是太棒了👍┗(•̀ᴗ•́)┛👍'\n    }\n    else {\n      tips.innerText = ''\n    }\n  }\n</script>\n<style>\n  #box {\n    display: inline-block;\n    border: 1px solid #666;\n    border-radius: 5px;\n    padding: 4px 12px;\n    margin-top: 20px;\n    cursor: pointer;\n  }\n  #tips {\n    margin: 0 0 0 15px;\n  }\n</style>\n{% endraw %}\n","source":"_posts/2025-07-31-【微信小程序实战】之准备工作详解.md","raw":"---\ntitle: 【微信小程序实战】之准备工作详解\ndate: 2025-07-31 11:03:53\ntags: 微信小程序\ncategories: 小程序\ncover: /images/微信小程序实战/准备工作/cover.jpg # 封面图\n---\n\n### ✍️ 小程序和普通网页的区别\n\n- 运行环境不同\n  - 网页运行在浏览器环境中\n  - 小程序运行在微信小程序中\n- API 不同\n  - 小程序：由于运行环境不同，所以在小程序中无法调用 DOM 和 BOM 的 API\n  - 但是，小程序可以调用微信环境提供的各种 API\n    - 地理定位\n    - 扫码\n    - 支付\n    - ...\n- 开发模式不同\n  - 网页开发模式：浏览器+代码编辑器(Vscode、Cursor...)\n  - 小程序有自己的一套标准开发模式：\n    - 申请小程序开发账号\n    - 安装小程序开发者工具\n    - 创建和配置小程序项目\n\n### ✍️ 申请小程序账号\n\n- 开发微信小程序的第一步，是需要在[微信公众平台](https://mp.weixin.qq.com/)先申请一个小程序的账号，通过这个账号可以管理自己的小程序\n  ![](/images/微信小程序实战/准备工作/wxgzpt.png)\n\n- 点击“立即注册” → 选择注册账号类型，微信公众平台提供了四种类型的账号注册，分别为：订阅号、服务号、小程序、企业微信\n  {% raw %}\n  <!-- ![](/images/微信小程序实战/准备工作/wxtype4.png) -->\n  {% endraw %}\n  <img src=\"/images/微信小程序实战/准备工作/wxtype4.png\" alt=\"image\" class=\"max600\"/>\n\n  - 订阅号，对所有主体开放，包括政府、企事业单位、非盈利性机构、社会组织、媒体、个人等，推送消息在用户消息盒子中显示，每天可以推送一次，对开发者提供的开放能力有限\n  - 服务号，不对个人主体开放，只对组织主体开放注册，包括政府、企事业单位、非盈利性机构、社会组织、媒体，推送消息在用户的消息列表中显示，对开发者提供更全面的开放能力\n  - 小程序，一种全新的连接用户与服务的方式，具有更加出色的交互体验，小程序内具有调用手机硬件能力，适合所有主体注册，为了保护用户隐私，尽量减少对用户的打扰，小程序不支持信息推送\n  - 企业微信，为企业提供更高效的协同办公体验，只对企业及组织开发注册权限\n\n- 注册小程序\n\n  - 小程序注册规则：\n\n    - 小程序的注册上限：\n      - 1）同一个邮箱只能申请 1 个小程序\n      - 2）同一个手机号码可绑定 5 个小程序\n      - 3）同一身份证注册个人类型小程序数量上限为 5 个\n      - 4）同一企业、政府、媒体、其他组织资料注册小程序数量上限为 50 个\n      - 5）同一个体工商户注册小程序数量上限为 5 个\n    - 小程序的绑定上限：\n      - 1）同一身份证可绑定 5 个小程序\n      - 2）同一手机号可绑定 5 个小程序\n      - 3）同一微信号可绑定 5 个小程序\n\n  - 账号信息：填写邮箱/验证码/密码 → 注册\n    ![](/images/微信小程序实战/准备工作/registerAccount.png)\n\n  - 信息登记：选择主体类型\"个人\" → 填写姓名/身份证号/手机号/短信验证 → 扫码(扫码的微信号成为小程序账号的管理员) → 继续\n    ![](/images/微信小程序实战/准备工作/infoRecord.png)\n\n  - 主体一旦提交并认证成功之后，被认证的主体信息不可变更\n    <img src=\"/images/微信小程序实战/准备工作/confirmInfo.png\" alt=\"image\" class=\"max450\"/>\n\n  - 提交后，等待官方对注册主体的认证结果，认证成功后，注册过程就结束了，就有了自己的小程序账号\n    ![](/images/微信小程序实战/准备工作/accountManage.png)\n\n- [微信公众平台](https://mp.weixin.qq.com/)\n  - 两种登录方式：邮箱+密码登录 、 微信扫码登录\n\n### ✍️ 微信开发者工具下载与安装\n\n- [微信开发者工具](https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html)下载\n  ![](/images/微信小程序实战/准备工作/wxtooldowload.png)\n\n- 安装步骤很简单：选择安装路径，一直下一步就好了\n  ![](/images/微信小程序实战/准备工作/wxtoolexe.png)\n\n- 微信扫码登录开发工具(游客模式功能受限)\n  <img src=\"/images/微信小程序实战/准备工作/wxtool.png\" alt=\"image\" class=\"max600\"/>\n\n### ✍️ 编写第一个小程序\n\n- 点击\"+\"创建小程序，AppId 填写刚申请的小程序账号上的，项目名称、后端服务、模板等都可以自行选择\n  ![](/images/微信小程序实战/准备工作/createProject1.png)\n  ![](/images/微信小程序实战/准备工作/createProject0.png)\n\n- 默认项目效果如图：\n  ![](/images/微信小程序实战/准备工作/createProject2.png)\n\n- 熟悉：微信开发者工具的使用\n\n- 预览：微信开发者工具提供了两种在真机中预览小程序的方式\n\n  - 扫描二维码预览\n  - 自动预览，免去了每次看效果时都要扫码的步骤，点击工具栏中的“预览”按钮，然后在手机中保持微信的前台运行状态既可以自动唤出小程序\n    ![](/images/微信小程序实战/准备工作/preview.png)\n\n- 上传代码\n\n  - 填写版本号和 commit 备注信息\n    ![](/images/微信小程序实战/准备工作/uploadcode.png)\n\n  - 上传成功之后：微信公众平台(小程序管理后台) → 版本管理 → 需要管理员将本次上传设置为体验版本\n    ![](/images/微信小程序实战/准备工作/updateVersion.png)\n\n  - 体验版本：有一个二维码，扫码即可体验小程序\n    ![](/images/微信小程序实战/准备工作/updateVersion2.png)\n\n- 发布小程序：在后台中提交审核，待审核通过后即实现小程序的发布上线\n  - 【注】提交审核前，小程序还需备案，填写小程序的基本设置、第三方设置、关联设置等等\n    ![](/images/微信小程序实战/准备工作/release.png)\n\n  - 小程序的基本信息填写之后：小程序的名称和 logo 就出现在登录账号上了(可以更清晰的区分小程序了)\n    ![](/images/微信小程序实战/准备工作/release1.png)\n\n### ✍️ 代码管理(远程仓库)\n\n- 详细步骤可以在 [微信官方文档/微信开发者·代码管理](https://developers.weixin.qq.com/miniprogram/dev/devtools/wechatvcs.html) 这里查看\n\n- 我的步骤：\n\n  - [微信开发者·代码管理](https://git.weixin.qq.com/)，然后微信授权登录，面板如下所示：【和 gitlab、gitee、github 是一样的代码托管平台】\n    ![](/images/微信小程序实战/准备工作/wx_git_magage.png)\n\n  - Git 初始化：输入一个账号名称 lqh_wx (自定义)\n    <img src=\"/images/微信小程序实战/准备工作/wx_git_account.png\" alt=\"image\" class=\"max500\"/>\n\n  - Git 初始化：个人设置 → 账户 → 设置密码(自定义)\n    <img src=\"/images/微信小程序实战/准备工作/wx_git_password.png\" alt=\"image\" class=\"max500\"/>\n\n  - 新建一个项目 wxDemo\n    <img src=\"/images/微信小程序实战/准备工作/wx_git_newproject.png\" alt=\"image\" class=\"max600\"/>\n\n  - 在本地项目 wxDemo 中，执行 git 命令连接远程仓库 (第一次推送代码到远程需要账号/密码验证)\n    <img src=\"/images/微信小程序实战/准备工作/wx_git_link_origin.png\" alt=\"image\" class=\"max500\"/>\n\n    ```bash\n      git init\n      git remote add origin https://git.weixin.qq.com/lqh_wx/wxDemo.git\n      git add .\n      git commit -m \"第一次提交\"\n      git push -u origin master\n    ```\n\n    ![](/images/微信小程序实战/准备工作/wx_git_push_origin.png)\n\n  - 代码推送到远程仓库，成功\n    ![](/images/微信小程序实战/准备工作/wx_git_push_origin2.png)\n\n  - 后续开发提交远程，可以使用\"版本管理\"功能【类似于 Sourcetree】，也可在终端使用 git 命令推送代码\n    ![](/images/微信小程序实战/准备工作/wx_git_version.png)\n\n{% raw %}\n<!-- 防止 Hexo 标签冲突：Hexo 使用 {% %} 作为标签语法 -->\n<div id=\"box\">🔒点击一下我</div><span id=\"tips\"></span>\n<script>\n  document.getElementById('box').onclick = function(event) {\n    var tips = document.getElementById('tips')\n    if(!tips.innerText) {\n      tips.innerText = '🔑看到这里，你真是太棒了👍┗(•̀ᴗ•́)┛👍'\n    }\n    else {\n      tips.innerText = ''\n    }\n  }\n</script>\n<style>\n  #box {\n    display: inline-block;\n    border: 1px solid #666;\n    border-radius: 5px;\n    padding: 4px 12px;\n    margin-top: 20px;\n    cursor: pointer;\n  }\n  #tips {\n    margin: 0 0 0 15px;\n  }\n</style>\n{% endraw %}\n","slug":"【微信小程序实战】之准备工作详解","published":1,"updated":"2025-09-13T08:09:15.105Z","_id":"cmel89pee000orwnc4fspa6m3","comments":1,"layout":"post","photos":[],"content":"<h3 id=\"✍️-小程序和普通网页的区别\"><a href=\"#✍️-小程序和普通网页的区别\" class=\"headerlink\" title=\"✍️ 小程序和普通网页的区别\"></a>✍️ 小程序和普通网页的区别</h3><ul>\n<li>运行环境不同<ul>\n<li>网页运行在浏览器环境中</li>\n<li>小程序运行在微信小程序中</li>\n</ul>\n</li>\n<li>API 不同<ul>\n<li>小程序：由于运行环境不同，所以在小程序中无法调用 DOM 和 BOM 的 API</li>\n<li>但是，小程序可以调用微信环境提供的各种 API<ul>\n<li>地理定位</li>\n<li>扫码</li>\n<li>支付</li>\n<li>…</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>开发模式不同<ul>\n<li>网页开发模式：浏览器+代码编辑器(Vscode、Cursor…)</li>\n<li>小程序有自己的一套标准开发模式：<ul>\n<li>申请小程序开发账号</li>\n<li>安装小程序开发者工具</li>\n<li>创建和配置小程序项目</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"✍️-申请小程序账号\"><a href=\"#✍️-申请小程序账号\" class=\"headerlink\" title=\"✍️ 申请小程序账号\"></a>✍️ 申请小程序账号</h3><ul>\n<li><p>开发微信小程序的第一步，是需要在<a href=\"https://mp.weixin.qq.com/\">微信公众平台</a>先申请一个小程序的账号，通过这个账号可以管理自己的小程序<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/wxgzpt.png\"></p>\n</li>\n<li><p>点击“立即注册” → 选择注册账号类型，微信公众平台提供了四种类型的账号注册，分别为：订阅号、服务号、小程序、企业微信</p>\n\n  <!-- ![](/images/微信小程序实战/准备工作/wxtype4.png) -->\n  \n<img src=\"/images/微信小程序实战/准备工作/wxtype4.png\" alt=\"image\" class=\"max600\"/>\n\n<ul>\n<li>订阅号，对所有主体开放，包括政府、企事业单位、非盈利性机构、社会组织、媒体、个人等，推送消息在用户消息盒子中显示，每天可以推送一次，对开发者提供的开放能力有限</li>\n<li>服务号，不对个人主体开放，只对组织主体开放注册，包括政府、企事业单位、非盈利性机构、社会组织、媒体，推送消息在用户的消息列表中显示，对开发者提供更全面的开放能力</li>\n<li>小程序，一种全新的连接用户与服务的方式，具有更加出色的交互体验，小程序内具有调用手机硬件能力，适合所有主体注册，为了保护用户隐私，尽量减少对用户的打扰，小程序不支持信息推送</li>\n<li>企业微信，为企业提供更高效的协同办公体验，只对企业及组织开发注册权限</li>\n</ul>\n</li>\n<li><p>注册小程序</p>\n<ul>\n<li><p>小程序注册规则：</p>\n<ul>\n<li>小程序的注册上限：<ul>\n<li>1）同一个邮箱只能申请 1 个小程序</li>\n<li>2）同一个手机号码可绑定 5 个小程序</li>\n<li>3）同一身份证注册个人类型小程序数量上限为 5 个</li>\n<li>4）同一企业、政府、媒体、其他组织资料注册小程序数量上限为 50 个</li>\n<li>5）同一个体工商户注册小程序数量上限为 5 个</li>\n</ul>\n</li>\n<li>小程序的绑定上限：<ul>\n<li>1）同一身份证可绑定 5 个小程序</li>\n<li>2）同一手机号可绑定 5 个小程序</li>\n<li>3）同一微信号可绑定 5 个小程序</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>账号信息：填写邮箱&#x2F;验证码&#x2F;密码 → 注册<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/registerAccount.png\"></p>\n</li>\n<li><p>信息登记：选择主体类型”个人” → 填写姓名&#x2F;身份证号&#x2F;手机号&#x2F;短信验证 → 扫码(扫码的微信号成为小程序账号的管理员) → 继续<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/infoRecord.png\"></p>\n</li>\n<li><p>主体一旦提交并认证成功之后，被认证的主体信息不可变更</p>\n<img src=\"/images/微信小程序实战/准备工作/confirmInfo.png\" alt=\"image\" class=\"max450\"/>\n</li>\n<li><p>提交后，等待官方对注册主体的认证结果，认证成功后，注册过程就结束了，就有了自己的小程序账号<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/accountManage.png\"></p>\n</li>\n</ul>\n</li>\n<li><p><a href=\"https://mp.weixin.qq.com/\">微信公众平台</a></p>\n<ul>\n<li>两种登录方式：邮箱+密码登录 、 微信扫码登录</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"✍️-微信开发者工具下载与安装\"><a href=\"#✍️-微信开发者工具下载与安装\" class=\"headerlink\" title=\"✍️ 微信开发者工具下载与安装\"></a>✍️ 微信开发者工具下载与安装</h3><ul>\n<li><p><a href=\"https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html\">微信开发者工具</a>下载<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/wxtooldowload.png\"></p>\n</li>\n<li><p>安装步骤很简单：选择安装路径，一直下一步就好了<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/wxtoolexe.png\"></p>\n</li>\n<li><p>微信扫码登录开发工具(游客模式功能受限)</p>\n<img src=\"/images/微信小程序实战/准备工作/wxtool.png\" alt=\"image\" class=\"max600\"/></li>\n</ul>\n<h3 id=\"✍️-编写第一个小程序\"><a href=\"#✍️-编写第一个小程序\" class=\"headerlink\" title=\"✍️ 编写第一个小程序\"></a>✍️ 编写第一个小程序</h3><ul>\n<li><p>点击”+”创建小程序，AppId 填写刚申请的小程序账号上的，项目名称、后端服务、模板等都可以自行选择<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/createProject1.png\"><br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/createProject0.png\"></p>\n</li>\n<li><p>默认项目效果如图：<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/createProject2.png\"></p>\n</li>\n<li><p>熟悉：微信开发者工具的使用</p>\n</li>\n<li><p>预览：微信开发者工具提供了两种在真机中预览小程序的方式</p>\n<ul>\n<li>扫描二维码预览</li>\n<li>自动预览，免去了每次看效果时都要扫码的步骤，点击工具栏中的“预览”按钮，然后在手机中保持微信的前台运行状态既可以自动唤出小程序<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/preview.png\"></li>\n</ul>\n</li>\n<li><p>上传代码</p>\n<ul>\n<li><p>填写版本号和 commit 备注信息<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/uploadcode.png\"></p>\n</li>\n<li><p>上传成功之后：微信公众平台(小程序管理后台) → 版本管理 → 需要管理员将本次上传设置为体验版本<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/updateVersion.png\"></p>\n</li>\n<li><p>体验版本：有一个二维码，扫码即可体验小程序<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/updateVersion2.png\"></p>\n</li>\n</ul>\n</li>\n<li><p>发布小程序：在后台中提交审核，待审核通过后即实现小程序的发布上线</p>\n<ul>\n<li><p>【注】提交审核前，小程序还需备案，填写小程序的基本设置、第三方设置、关联设置等等<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/release.png\"></p>\n</li>\n<li><p>小程序的基本信息填写之后：小程序的名称和 logo 就出现在登录账号上了(可以更清晰的区分小程序了)<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/release1.png\"></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"✍️-代码管理-远程仓库\"><a href=\"#✍️-代码管理-远程仓库\" class=\"headerlink\" title=\"✍️ 代码管理(远程仓库)\"></a>✍️ 代码管理(远程仓库)</h3><ul>\n<li><p>详细步骤可以在 <a href=\"https://developers.weixin.qq.com/miniprogram/dev/devtools/wechatvcs.html\">微信官方文档&#x2F;微信开发者·代码管理</a> 这里查看</p>\n</li>\n<li><p>我的步骤：</p>\n<ul>\n<li><p><a href=\"https://git.weixin.qq.com/\">微信开发者·代码管理</a>，然后微信授权登录，面板如下所示：【和 gitlab、gitee、github 是一样的代码托管平台】<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/wx_git_magage.png\"></p>\n</li>\n<li><p>Git 初始化：输入一个账号名称 lqh_wx (自定义)</p>\n<img src=\"/images/微信小程序实战/准备工作/wx_git_account.png\" alt=\"image\" class=\"max500\"/>\n</li>\n<li><p>Git 初始化：个人设置 → 账户 → 设置密码(自定义)</p>\n<img src=\"/images/微信小程序实战/准备工作/wx_git_password.png\" alt=\"image\" class=\"max500\"/>\n</li>\n<li><p>新建一个项目 wxDemo</p>\n<img src=\"/images/微信小程序实战/准备工作/wx_git_newproject.png\" alt=\"image\" class=\"max600\"/>\n</li>\n<li><p>在本地项目 wxDemo 中，执行 git 命令连接远程仓库 (第一次推送代码到远程需要账号&#x2F;密码验证)</p>\n<img src=\"/images/微信小程序实战/准备工作/wx_git_link_origin.png\" alt=\"image\" class=\"max500\"/>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br><span class=\"line\">git remote add origin https://git.weixin.qq.com/lqh_wx/wxDemo.git</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;第一次提交&quot;</span></span><br><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/wx_git_push_origin.png\"></p>\n</li>\n<li><p>代码推送到远程仓库，成功<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/wx_git_push_origin2.png\"></p>\n</li>\n<li><p>后续开发提交远程，可以使用”版本管理”功能【类似于 Sourcetree】，也可在终端使用 git 命令推送代码<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/wx_git_version.png\"></p>\n</li>\n</ul>\n</li>\n</ul>\n\n<!-- 防止 Hexo 标签冲突：Hexo 使用 {% %} 作为标签语法 -->\n<div id=\"box\">🔒点击一下我</div><span id=\"tips\"></span>\n<script>\n  document.getElementById('box').onclick = function(event) {\n    var tips = document.getElementById('tips')\n    if(!tips.innerText) {\n      tips.innerText = '🔑看到这里，你真是太棒了👍┗(•̀ᴗ•́)┛👍'\n    }\n    else {\n      tips.innerText = ''\n    }\n  }\n</script>\n<style>\n  #box {\n    display: inline-block;\n    border: 1px solid #666;\n    border-radius: 5px;\n    padding: 4px 12px;\n    margin-top: 20px;\n    cursor: pointer;\n  }\n  #tips {\n    margin: 0 0 0 15px;\n  }\n</style>\n\n","excerpt":"","more":"<h3 id=\"✍️-小程序和普通网页的区别\"><a href=\"#✍️-小程序和普通网页的区别\" class=\"headerlink\" title=\"✍️ 小程序和普通网页的区别\"></a>✍️ 小程序和普通网页的区别</h3><ul>\n<li>运行环境不同<ul>\n<li>网页运行在浏览器环境中</li>\n<li>小程序运行在微信小程序中</li>\n</ul>\n</li>\n<li>API 不同<ul>\n<li>小程序：由于运行环境不同，所以在小程序中无法调用 DOM 和 BOM 的 API</li>\n<li>但是，小程序可以调用微信环境提供的各种 API<ul>\n<li>地理定位</li>\n<li>扫码</li>\n<li>支付</li>\n<li>…</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>开发模式不同<ul>\n<li>网页开发模式：浏览器+代码编辑器(Vscode、Cursor…)</li>\n<li>小程序有自己的一套标准开发模式：<ul>\n<li>申请小程序开发账号</li>\n<li>安装小程序开发者工具</li>\n<li>创建和配置小程序项目</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"✍️-申请小程序账号\"><a href=\"#✍️-申请小程序账号\" class=\"headerlink\" title=\"✍️ 申请小程序账号\"></a>✍️ 申请小程序账号</h3><ul>\n<li><p>开发微信小程序的第一步，是需要在<a href=\"https://mp.weixin.qq.com/\">微信公众平台</a>先申请一个小程序的账号，通过这个账号可以管理自己的小程序<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/wxgzpt.png\"></p>\n</li>\n<li><p>点击“立即注册” → 选择注册账号类型，微信公众平台提供了四种类型的账号注册，分别为：订阅号、服务号、小程序、企业微信</p>\n\n  <!-- ![](/images/微信小程序实战/准备工作/wxtype4.png) -->\n  \n<img src=\"/images/微信小程序实战/准备工作/wxtype4.png\" alt=\"image\" class=\"max600\"/>\n\n<ul>\n<li>订阅号，对所有主体开放，包括政府、企事业单位、非盈利性机构、社会组织、媒体、个人等，推送消息在用户消息盒子中显示，每天可以推送一次，对开发者提供的开放能力有限</li>\n<li>服务号，不对个人主体开放，只对组织主体开放注册，包括政府、企事业单位、非盈利性机构、社会组织、媒体，推送消息在用户的消息列表中显示，对开发者提供更全面的开放能力</li>\n<li>小程序，一种全新的连接用户与服务的方式，具有更加出色的交互体验，小程序内具有调用手机硬件能力，适合所有主体注册，为了保护用户隐私，尽量减少对用户的打扰，小程序不支持信息推送</li>\n<li>企业微信，为企业提供更高效的协同办公体验，只对企业及组织开发注册权限</li>\n</ul>\n</li>\n<li><p>注册小程序</p>\n<ul>\n<li><p>小程序注册规则：</p>\n<ul>\n<li>小程序的注册上限：<ul>\n<li>1）同一个邮箱只能申请 1 个小程序</li>\n<li>2）同一个手机号码可绑定 5 个小程序</li>\n<li>3）同一身份证注册个人类型小程序数量上限为 5 个</li>\n<li>4）同一企业、政府、媒体、其他组织资料注册小程序数量上限为 50 个</li>\n<li>5）同一个体工商户注册小程序数量上限为 5 个</li>\n</ul>\n</li>\n<li>小程序的绑定上限：<ul>\n<li>1）同一身份证可绑定 5 个小程序</li>\n<li>2）同一手机号可绑定 5 个小程序</li>\n<li>3）同一微信号可绑定 5 个小程序</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>账号信息：填写邮箱&#x2F;验证码&#x2F;密码 → 注册<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/registerAccount.png\"></p>\n</li>\n<li><p>信息登记：选择主体类型”个人” → 填写姓名&#x2F;身份证号&#x2F;手机号&#x2F;短信验证 → 扫码(扫码的微信号成为小程序账号的管理员) → 继续<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/infoRecord.png\"></p>\n</li>\n<li><p>主体一旦提交并认证成功之后，被认证的主体信息不可变更</p>\n<img src=\"/images/微信小程序实战/准备工作/confirmInfo.png\" alt=\"image\" class=\"max450\"/>\n</li>\n<li><p>提交后，等待官方对注册主体的认证结果，认证成功后，注册过程就结束了，就有了自己的小程序账号<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/accountManage.png\"></p>\n</li>\n</ul>\n</li>\n<li><p><a href=\"https://mp.weixin.qq.com/\">微信公众平台</a></p>\n<ul>\n<li>两种登录方式：邮箱+密码登录 、 微信扫码登录</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"✍️-微信开发者工具下载与安装\"><a href=\"#✍️-微信开发者工具下载与安装\" class=\"headerlink\" title=\"✍️ 微信开发者工具下载与安装\"></a>✍️ 微信开发者工具下载与安装</h3><ul>\n<li><p><a href=\"https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html\">微信开发者工具</a>下载<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/wxtooldowload.png\"></p>\n</li>\n<li><p>安装步骤很简单：选择安装路径，一直下一步就好了<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/wxtoolexe.png\"></p>\n</li>\n<li><p>微信扫码登录开发工具(游客模式功能受限)</p>\n<img src=\"/images/微信小程序实战/准备工作/wxtool.png\" alt=\"image\" class=\"max600\"/></li>\n</ul>\n<h3 id=\"✍️-编写第一个小程序\"><a href=\"#✍️-编写第一个小程序\" class=\"headerlink\" title=\"✍️ 编写第一个小程序\"></a>✍️ 编写第一个小程序</h3><ul>\n<li><p>点击”+”创建小程序，AppId 填写刚申请的小程序账号上的，项目名称、后端服务、模板等都可以自行选择<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/createProject1.png\"><br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/createProject0.png\"></p>\n</li>\n<li><p>默认项目效果如图：<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/createProject2.png\"></p>\n</li>\n<li><p>熟悉：微信开发者工具的使用</p>\n</li>\n<li><p>预览：微信开发者工具提供了两种在真机中预览小程序的方式</p>\n<ul>\n<li>扫描二维码预览</li>\n<li>自动预览，免去了每次看效果时都要扫码的步骤，点击工具栏中的“预览”按钮，然后在手机中保持微信的前台运行状态既可以自动唤出小程序<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/preview.png\"></li>\n</ul>\n</li>\n<li><p>上传代码</p>\n<ul>\n<li><p>填写版本号和 commit 备注信息<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/uploadcode.png\"></p>\n</li>\n<li><p>上传成功之后：微信公众平台(小程序管理后台) → 版本管理 → 需要管理员将本次上传设置为体验版本<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/updateVersion.png\"></p>\n</li>\n<li><p>体验版本：有一个二维码，扫码即可体验小程序<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/updateVersion2.png\"></p>\n</li>\n</ul>\n</li>\n<li><p>发布小程序：在后台中提交审核，待审核通过后即实现小程序的发布上线</p>\n<ul>\n<li><p>【注】提交审核前，小程序还需备案，填写小程序的基本设置、第三方设置、关联设置等等<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/release.png\"></p>\n</li>\n<li><p>小程序的基本信息填写之后：小程序的名称和 logo 就出现在登录账号上了(可以更清晰的区分小程序了)<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/release1.png\"></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"✍️-代码管理-远程仓库\"><a href=\"#✍️-代码管理-远程仓库\" class=\"headerlink\" title=\"✍️ 代码管理(远程仓库)\"></a>✍️ 代码管理(远程仓库)</h3><ul>\n<li><p>详细步骤可以在 <a href=\"https://developers.weixin.qq.com/miniprogram/dev/devtools/wechatvcs.html\">微信官方文档&#x2F;微信开发者·代码管理</a> 这里查看</p>\n</li>\n<li><p>我的步骤：</p>\n<ul>\n<li><p><a href=\"https://git.weixin.qq.com/\">微信开发者·代码管理</a>，然后微信授权登录，面板如下所示：【和 gitlab、gitee、github 是一样的代码托管平台】<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/wx_git_magage.png\"></p>\n</li>\n<li><p>Git 初始化：输入一个账号名称 lqh_wx (自定义)</p>\n<img src=\"/images/微信小程序实战/准备工作/wx_git_account.png\" alt=\"image\" class=\"max500\"/>\n</li>\n<li><p>Git 初始化：个人设置 → 账户 → 设置密码(自定义)</p>\n<img src=\"/images/微信小程序实战/准备工作/wx_git_password.png\" alt=\"image\" class=\"max500\"/>\n</li>\n<li><p>新建一个项目 wxDemo</p>\n<img src=\"/images/微信小程序实战/准备工作/wx_git_newproject.png\" alt=\"image\" class=\"max600\"/>\n</li>\n<li><p>在本地项目 wxDemo 中，执行 git 命令连接远程仓库 (第一次推送代码到远程需要账号&#x2F;密码验证)</p>\n<img src=\"/images/微信小程序实战/准备工作/wx_git_link_origin.png\" alt=\"image\" class=\"max500\"/>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br><span class=\"line\">git remote add origin https://git.weixin.qq.com/lqh_wx/wxDemo.git</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;第一次提交&quot;</span></span><br><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/wx_git_push_origin.png\"></p>\n</li>\n<li><p>代码推送到远程仓库，成功<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/wx_git_push_origin2.png\"></p>\n</li>\n<li><p>后续开发提交远程，可以使用”版本管理”功能【类似于 Sourcetree】，也可在终端使用 git 命令推送代码<br><img src=\"/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/wx_git_version.png\"></p>\n</li>\n</ul>\n</li>\n</ul>\n\n<!-- 防止 Hexo 标签冲突：Hexo 使用 {% %} 作为标签语法 -->\n<div id=\"box\">🔒点击一下我</div><span id=\"tips\"></span>\n<script>\n  document.getElementById('box').onclick = function(event) {\n    var tips = document.getElementById('tips')\n    if(!tips.innerText) {\n      tips.innerText = '🔑看到这里，你真是太棒了👍┗(•̀ᴗ•́)┛👍'\n    }\n    else {\n      tips.innerText = ''\n    }\n  }\n</script>\n<style>\n  #box {\n    display: inline-block;\n    border: 1px solid #666;\n    border-radius: 5px;\n    padding: 4px 12px;\n    margin-top: 20px;\n    cursor: pointer;\n  }\n  #tips {\n    margin: 0 0 0 15px;\n  }\n</style>\n\n"},{"title":"input文件上传","date":"2025-08-12T09:34:48.000Z","cover":"/images/input文件上传/cover.jpg","_content":"\n### *** Base64 的格式入参 ***\n\n```html\n<img :src=\"iconFile\" alt=\"\" @click=\"getResoureUrl(1)\" />\n<img :src=\"iconCamera\" alt=\"\" @click=\"getResoureUrl(2)\" />\n<img :src=\"iconVideo\" alt=\"\" @click=\"getResoureUrl(3)\" />\n<input type=\"file\" id=\"fileUpload\" v-show=\"false\" />\n<input type=\"file\" id=\"imageUpload\" accept=\"image/*\" v-show=\"false\" />\n<input type=\"file\" id=\"videoUpload\" accept=\"video/*\" v-show=\"false\" />\n```\n\n- 图片上传前，可以先进行压缩（图片优化处理） `npm i browser-image-compression`\n- 资源上传共用方法 `getResoureUrl()`\n- Base64 的格式入参资源文件\n  `const reader = new FileReader()`\n  `reader.readAsDataURL(file)`\n  `reader.onload = async (e) => {}`\n- 【注意】当重复上传相同的文件/图片/视频时，不会触发change函数，造成上传失败，原因是：浏览器认为选择了相同名称的文件并不代表用户有新的操作，所以没有触发 change 事件\n\n```javascript\n// 图片上传前压缩处理(推荐)\nimport imageCompression from 'browser-image-compression'\n\n// 正在上传的队列\nconst uploadQueue = ref([])\n// 上传 1所有文件类型、2图片和3视频\nconst getResoureUrl = (resourceType) => {\n\tlet idName = ''\n\tif (resourceType == 1) idName = 'fileUpload'\n\telse if (resourceType == 2) idName = 'imageUpload'\n\telse if (resourceType == 3) idName = 'videoUpload'\n\n\tnextTick(() => {\n\t\t/**\n\t\t * BUG：当多个上传入口同时操作时，input 状态混乱，最后url赋值错位\n\t\t * 解决：每个上传入口用独立的inputId，可以通过调用时传入(idName)\n\t\t */\n\t\tconst resoUp = document.getElementById(idName)\n\n\t\tif (!resoUp) return\n\t\t// 保证每次（点击）都能触发\n\t\tresoUp.value = ''\n\t\t// 先移除旧的监听\n\t\tresoUp.onchange = null\n\n\t\tresoUp?.click()\n\n\t\t// 事件监听用 onchange 代替 addEventListener('change')，每次覆盖，避免重复绑定\n\t\tresoUp.onchange = async function (event) {\n\t\t\tconst upFile = event.target.files[0] // 获取文件对象\n\t\t\tif (!upFile) return\n\n\t\t\t/************************************\n\t\t\t * 优化：（图片上传到服务器之前）先压缩图片\n\t\t\t *  (1) 下载依赖npm i browser-image-compression\n\t\t\t *  (2) vue文件中引入 import imageCompression from 'browser-image-compression';\n\t\t\t *  (3) 使用 imageCompression 函数进行压缩\n\t\t\t */\n\t\t\tconst options = {\n\t\t\t\tmaxSizeMB: 1, // 最大文件大小(MB)\n\t\t\t\tmaxWidthOrHeight: 700, // （压缩后的）最大宽/高\n\t\t\t\tuseWebWorker: true, // 使用WebWorker加速\n\t\t\t\tfileType: 'image/webp', // 可选转换为webp格式\n\t\t\t}\n\t\t\tconst compressedFile = await imageCompression(upFile, options)\n\t\t\t// ************************************\n\n\t\t\t// 使用压缩后的文件compressedFile 或 原文件upFile\n\t\t\tconst file = compressedFile || upFile\n\t\t\tconst reader = new FileReader()\n\t\t\treader.readAsDataURL(file) // 将文件读取为DataURL\n\n\t\t\t/*********************************\n\t\t\t * 问题：当重复上传相同的文件/图片/视频时，不会触发change函数，造成上传失败\n\t\t\t * 原因：浏览器认为选择了相同名称的文件并不代表用户有新的操作，所以没有触发 change 事件\n\t\t\t * 解决：清除input的值，以便下次可上传同一张图片\n\t\t\t */\n\t\t\tsetTimeout(() => {\n\t\t\t\tevent.target.value = ''\n\t\t\t})\n\t\t\t// ******************************\n\n\t\t\tif (file) {\n\t\t\t\t// input表单 file change监听文件上传事件多次触发， 使用数组uploadQueue帮助判断\n\t\t\t\t// console.log('*******图片点击多次*******')\n\t\t\t\tconst fileKey = generateFileKey(file)\n\t\t\t\tif (uploadQueue.value.includes(fileKey)) return\n\t\t\t\telse {\n\t\t\t\t\tuploadQueue.value.push(fileKey)\n\t\t\t\t}\n\t\t\t\treader.onload = async (e) => {\n\t\t\t\t\t// console.log('*******上传图片一次*******')\n\t\t\t\t\t// 开启loading\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst res = await postUploadImage({\n\t\t\t\t\t\t\tbase64Str: e.target?.result,\n\t\t\t\t\t\t\textName: file?.type.split('/')[1] || file?.name.split('.')[1], //文件后缀\n\t\t\t\t\t\t})\n\t\t\t\t\t\t// console.log('上传之后返回的资源链接：', res.data?.url)\n\t\t\t\t\t\t// 上传完成，置空，以便下次上传\n\t\t\t\t\t\tuploadQueue.value = []\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.log('error')\n\t\t\t\t\t} finally {\n\t\t\t\t\t\t// 关闭loading\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t})\n}\nconst generateFileKey = (file) => {\n\t// 使用文件名和大小生成唯一标识\n\treturn file.name + file.size\n}\n```\n\n- 资源上传接口(axios 封装)\n\n```javascript\n// 资源上传接口(axios封装)\nimport request from '../request.js'\n//图片上传\nexport const postUploadImage = (params) => {\n\tconst data = {\n\t\textName: params.extName || 'png',\n\t\tsourceType: 'oho',\n\t\tserviceType: import.meta.env.VITE_SYSTEM_NAME,\n\t\tbase64Str: params.base64Str.split(',')[1],\n\t}\n\n\treturn request.post('/upload/file/uploadVideo', data, {\n\t\theaders: {\n\t\t\t// 'Content-Type': 'application/json;charset=utf-8',\n\t\t\t'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\n\t\t},\n\t})\n}\n```\n\n### *** 文件流形式入参(表单提交、不需多加处理成 Base64) ***\n\n```html\n<div @click=\"changeAvater\">上传</div>\n<input v-show=\"false\" id=\"changeAvatarUpload\" type=\"file\" accept=\"image/*\" />\n```\n\n- 文件流形式入参资源文件 `formData.append('file', file)`\n\n```javascript\nconst formValue = ref({\n\tavatar: '',\n})\nfunction changeAvater() {\n\tnextTick(() => {\n\t\tconst resoUp = document.getElementById('changeAvatarUpload')\n\t\tresoUp?.click()\n\n\t\tresoUp?.addEventListener('change', async (event) => {\n\t\t\tconst file = event.target.files[0] // 获取文件对象\n\t\t\tconst formData = new FormData()\n\t\t\tformData.append('file', file) // file 入参字段名\n\t\t\tif (file) {\n\t\t\t\ttry {\n\t\t\t\t\tawait axios('/website/user/uploadAvatar', {\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\tbody: formData,\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'Accept-Language': 'zh-CN',\n\t\t\t\t\t\t\tAuthorization: token,\n\t\t\t\t\t\t\t// 'Content-Type': 'multipart/form-data',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonResponse({ response }) {\n\t\t\t\t\t\t\tconst { _data: res } = response\n\t\t\t\t\t\t\tif (res.code !== 0) {\n\t\t\t\t\t\t\t\tmessage.error(res?.msg || res?.message || 'error')\n\t\t\t\t\t\t\t\treturn null\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tformValue.value.avatar = res.data\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log('error')\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t})\n}\n```\n","source":"_posts/2025-08-12-input文件上传.md","raw":"---\ntitle: input文件上传\ndate: 2025-08-12 17:34:48\ntags:\n  - 上传\n  - input\n\ncategories: 上传/导出\ncover: /images/input文件上传/cover.jpg # 封面图\n---\n\n### *** Base64 的格式入参 ***\n\n```html\n<img :src=\"iconFile\" alt=\"\" @click=\"getResoureUrl(1)\" />\n<img :src=\"iconCamera\" alt=\"\" @click=\"getResoureUrl(2)\" />\n<img :src=\"iconVideo\" alt=\"\" @click=\"getResoureUrl(3)\" />\n<input type=\"file\" id=\"fileUpload\" v-show=\"false\" />\n<input type=\"file\" id=\"imageUpload\" accept=\"image/*\" v-show=\"false\" />\n<input type=\"file\" id=\"videoUpload\" accept=\"video/*\" v-show=\"false\" />\n```\n\n- 图片上传前，可以先进行压缩（图片优化处理） `npm i browser-image-compression`\n- 资源上传共用方法 `getResoureUrl()`\n- Base64 的格式入参资源文件\n  `const reader = new FileReader()`\n  `reader.readAsDataURL(file)`\n  `reader.onload = async (e) => {}`\n- 【注意】当重复上传相同的文件/图片/视频时，不会触发change函数，造成上传失败，原因是：浏览器认为选择了相同名称的文件并不代表用户有新的操作，所以没有触发 change 事件\n\n```javascript\n// 图片上传前压缩处理(推荐)\nimport imageCompression from 'browser-image-compression'\n\n// 正在上传的队列\nconst uploadQueue = ref([])\n// 上传 1所有文件类型、2图片和3视频\nconst getResoureUrl = (resourceType) => {\n\tlet idName = ''\n\tif (resourceType == 1) idName = 'fileUpload'\n\telse if (resourceType == 2) idName = 'imageUpload'\n\telse if (resourceType == 3) idName = 'videoUpload'\n\n\tnextTick(() => {\n\t\t/**\n\t\t * BUG：当多个上传入口同时操作时，input 状态混乱，最后url赋值错位\n\t\t * 解决：每个上传入口用独立的inputId，可以通过调用时传入(idName)\n\t\t */\n\t\tconst resoUp = document.getElementById(idName)\n\n\t\tif (!resoUp) return\n\t\t// 保证每次（点击）都能触发\n\t\tresoUp.value = ''\n\t\t// 先移除旧的监听\n\t\tresoUp.onchange = null\n\n\t\tresoUp?.click()\n\n\t\t// 事件监听用 onchange 代替 addEventListener('change')，每次覆盖，避免重复绑定\n\t\tresoUp.onchange = async function (event) {\n\t\t\tconst upFile = event.target.files[0] // 获取文件对象\n\t\t\tif (!upFile) return\n\n\t\t\t/************************************\n\t\t\t * 优化：（图片上传到服务器之前）先压缩图片\n\t\t\t *  (1) 下载依赖npm i browser-image-compression\n\t\t\t *  (2) vue文件中引入 import imageCompression from 'browser-image-compression';\n\t\t\t *  (3) 使用 imageCompression 函数进行压缩\n\t\t\t */\n\t\t\tconst options = {\n\t\t\t\tmaxSizeMB: 1, // 最大文件大小(MB)\n\t\t\t\tmaxWidthOrHeight: 700, // （压缩后的）最大宽/高\n\t\t\t\tuseWebWorker: true, // 使用WebWorker加速\n\t\t\t\tfileType: 'image/webp', // 可选转换为webp格式\n\t\t\t}\n\t\t\tconst compressedFile = await imageCompression(upFile, options)\n\t\t\t// ************************************\n\n\t\t\t// 使用压缩后的文件compressedFile 或 原文件upFile\n\t\t\tconst file = compressedFile || upFile\n\t\t\tconst reader = new FileReader()\n\t\t\treader.readAsDataURL(file) // 将文件读取为DataURL\n\n\t\t\t/*********************************\n\t\t\t * 问题：当重复上传相同的文件/图片/视频时，不会触发change函数，造成上传失败\n\t\t\t * 原因：浏览器认为选择了相同名称的文件并不代表用户有新的操作，所以没有触发 change 事件\n\t\t\t * 解决：清除input的值，以便下次可上传同一张图片\n\t\t\t */\n\t\t\tsetTimeout(() => {\n\t\t\t\tevent.target.value = ''\n\t\t\t})\n\t\t\t// ******************************\n\n\t\t\tif (file) {\n\t\t\t\t// input表单 file change监听文件上传事件多次触发， 使用数组uploadQueue帮助判断\n\t\t\t\t// console.log('*******图片点击多次*******')\n\t\t\t\tconst fileKey = generateFileKey(file)\n\t\t\t\tif (uploadQueue.value.includes(fileKey)) return\n\t\t\t\telse {\n\t\t\t\t\tuploadQueue.value.push(fileKey)\n\t\t\t\t}\n\t\t\t\treader.onload = async (e) => {\n\t\t\t\t\t// console.log('*******上传图片一次*******')\n\t\t\t\t\t// 开启loading\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst res = await postUploadImage({\n\t\t\t\t\t\t\tbase64Str: e.target?.result,\n\t\t\t\t\t\t\textName: file?.type.split('/')[1] || file?.name.split('.')[1], //文件后缀\n\t\t\t\t\t\t})\n\t\t\t\t\t\t// console.log('上传之后返回的资源链接：', res.data?.url)\n\t\t\t\t\t\t// 上传完成，置空，以便下次上传\n\t\t\t\t\t\tuploadQueue.value = []\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.log('error')\n\t\t\t\t\t} finally {\n\t\t\t\t\t\t// 关闭loading\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t})\n}\nconst generateFileKey = (file) => {\n\t// 使用文件名和大小生成唯一标识\n\treturn file.name + file.size\n}\n```\n\n- 资源上传接口(axios 封装)\n\n```javascript\n// 资源上传接口(axios封装)\nimport request from '../request.js'\n//图片上传\nexport const postUploadImage = (params) => {\n\tconst data = {\n\t\textName: params.extName || 'png',\n\t\tsourceType: 'oho',\n\t\tserviceType: import.meta.env.VITE_SYSTEM_NAME,\n\t\tbase64Str: params.base64Str.split(',')[1],\n\t}\n\n\treturn request.post('/upload/file/uploadVideo', data, {\n\t\theaders: {\n\t\t\t// 'Content-Type': 'application/json;charset=utf-8',\n\t\t\t'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\n\t\t},\n\t})\n}\n```\n\n### *** 文件流形式入参(表单提交、不需多加处理成 Base64) ***\n\n```html\n<div @click=\"changeAvater\">上传</div>\n<input v-show=\"false\" id=\"changeAvatarUpload\" type=\"file\" accept=\"image/*\" />\n```\n\n- 文件流形式入参资源文件 `formData.append('file', file)`\n\n```javascript\nconst formValue = ref({\n\tavatar: '',\n})\nfunction changeAvater() {\n\tnextTick(() => {\n\t\tconst resoUp = document.getElementById('changeAvatarUpload')\n\t\tresoUp?.click()\n\n\t\tresoUp?.addEventListener('change', async (event) => {\n\t\t\tconst file = event.target.files[0] // 获取文件对象\n\t\t\tconst formData = new FormData()\n\t\t\tformData.append('file', file) // file 入参字段名\n\t\t\tif (file) {\n\t\t\t\ttry {\n\t\t\t\t\tawait axios('/website/user/uploadAvatar', {\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\tbody: formData,\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'Accept-Language': 'zh-CN',\n\t\t\t\t\t\t\tAuthorization: token,\n\t\t\t\t\t\t\t// 'Content-Type': 'multipart/form-data',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonResponse({ response }) {\n\t\t\t\t\t\t\tconst { _data: res } = response\n\t\t\t\t\t\t\tif (res.code !== 0) {\n\t\t\t\t\t\t\t\tmessage.error(res?.msg || res?.message || 'error')\n\t\t\t\t\t\t\t\treturn null\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tformValue.value.avatar = res.data\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log('error')\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t})\n}\n```\n","slug":"input文件上传","published":1,"updated":"2025-09-13T08:09:15.106Z","_id":"cmel89pel001orwnc1qot5o9r","comments":1,"layout":"post","photos":[],"content":"<h3 id=\"Base64-的格式入参\"><a href=\"#Base64-的格式入参\" class=\"headerlink\" title=\"*** Base64 的格式入参 ***\"></a>*** Base64 的格式入参 ***</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">:src</span>=<span class=\"string\">&quot;iconFile&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;getResoureUrl(1)&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">:src</span>=<span class=\"string\">&quot;iconCamera&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;getResoureUrl(2)&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">:src</span>=<span class=\"string\">&quot;iconVideo&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;getResoureUrl(3)&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;fileUpload&quot;</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;false&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;imageUpload&quot;</span> <span class=\"attr\">accept</span>=<span class=\"string\">&quot;image/*&quot;</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;false&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;videoUpload&quot;</span> <span class=\"attr\">accept</span>=<span class=\"string\">&quot;video/*&quot;</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;false&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>图片上传前，可以先进行压缩（图片优化处理） <code>npm i browser-image-compression</code></li>\n<li>资源上传共用方法 <code>getResoureUrl()</code></li>\n<li>Base64 的格式入参资源文件<br><code>const reader = new FileReader()</code><br><code>reader.readAsDataURL(file)</code><br><code>reader.onload = async (e) =&gt; &#123;&#125;</code></li>\n<li>【注意】当重复上传相同的文件&#x2F;图片&#x2F;视频时，不会触发change函数，造成上传失败，原因是：浏览器认为选择了相同名称的文件并不代表用户有新的操作，所以没有触发 change 事件</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 图片上传前压缩处理(推荐)</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> imageCompression <span class=\"keyword\">from</span> <span class=\"string\">&#x27;browser-image-compression&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 正在上传的队列</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> uploadQueue = <span class=\"title function_\">ref</span>([])</span><br><span class=\"line\"><span class=\"comment\">// 上传 1所有文件类型、2图片和3视频</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">getResoureUrl</span> = (<span class=\"params\">resourceType</span>) =&gt; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> idName = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (resourceType == <span class=\"number\">1</span>) idName = <span class=\"string\">&#x27;fileUpload&#x27;</span></span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (resourceType == <span class=\"number\">2</span>) idName = <span class=\"string\">&#x27;imageUpload&#x27;</span></span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (resourceType == <span class=\"number\">3</span>) idName = <span class=\"string\">&#x27;videoUpload&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"title function_\">nextTick</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t\t * BUG：当多个上传入口同时操作时，input 状态混乱，最后url赋值错位</span></span><br><span class=\"line\"><span class=\"comment\">\t\t * 解决：每个上传入口用独立的inputId，可以通过调用时传入(idName)</span></span><br><span class=\"line\"><span class=\"comment\">\t\t */</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">const</span> resoUp = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(idName)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!resoUp) <span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// 保证每次（点击）都能触发</span></span><br><span class=\"line\">\t\tresoUp.<span class=\"property\">value</span> = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// 先移除旧的监听</span></span><br><span class=\"line\">\t\tresoUp.<span class=\"property\">onchange</span> = <span class=\"literal\">null</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\tresoUp?.<span class=\"title function_\">click</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// 事件监听用 onchange 代替 addEventListener(&#x27;change&#x27;)，每次覆盖，避免重复绑定</span></span><br><span class=\"line\">\t\tresoUp.<span class=\"property\">onchange</span> = <span class=\"keyword\">async</span> <span class=\"keyword\">function</span> (<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">const</span> upFile = event.<span class=\"property\">target</span>.<span class=\"property\">files</span>[<span class=\"number\">0</span>] <span class=\"comment\">// 获取文件对象</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!upFile) <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">/************************************</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t * 优化：（图片上传到服务器之前）先压缩图片</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t *  (1) 下载依赖npm i browser-image-compression</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t *  (2) vue文件中引入 import imageCompression from &#x27;browser-image-compression&#x27;;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t *  (3) 使用 imageCompression 函数进行压缩</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t */</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">const</span> options = &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">maxSizeMB</span>: <span class=\"number\">1</span>, <span class=\"comment\">// 最大文件大小(MB)</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">maxWidthOrHeight</span>: <span class=\"number\">700</span>, <span class=\"comment\">// （压缩后的）最大宽/高</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">useWebWorker</span>: <span class=\"literal\">true</span>, <span class=\"comment\">// 使用WebWorker加速</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">fileType</span>: <span class=\"string\">&#x27;image/webp&#x27;</span>, <span class=\"comment\">// 可选转换为webp格式</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">const</span> compressedFile = <span class=\"keyword\">await</span> <span class=\"title function_\">imageCompression</span>(upFile, options)</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// ************************************</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 使用压缩后的文件compressedFile 或 原文件upFile</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">const</span> file = compressedFile || upFile</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">const</span> reader = <span class=\"keyword\">new</span> <span class=\"title class_\">FileReader</span>()</span><br><span class=\"line\">\t\t\treader.<span class=\"title function_\">readAsDataURL</span>(file) <span class=\"comment\">// 将文件读取为DataURL</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">/*********************************</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t * 问题：当重复上传相同的文件/图片/视频时，不会触发change函数，造成上传失败</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t * 原因：浏览器认为选择了相同名称的文件并不代表用户有新的操作，所以没有触发 change 事件</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t * 解决：清除input的值，以便下次可上传同一张图片</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t */</span></span><br><span class=\"line\">\t\t\t<span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">\t\t\t\tevent.<span class=\"property\">target</span>.<span class=\"property\">value</span> = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">\t\t\t&#125;)</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// ******************************</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (file) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// input表单 file change监听文件上传事件多次触发， 使用数组uploadQueue帮助判断</span></span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// console.log(&#x27;*******图片点击多次*******&#x27;)</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">const</span> fileKey = <span class=\"title function_\">generateFileKey</span>(file)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (uploadQueue.<span class=\"property\">value</span>.<span class=\"title function_\">includes</span>(fileKey)) <span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t\tuploadQueue.<span class=\"property\">value</span>.<span class=\"title function_\">push</span>(fileKey)</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\treader.<span class=\"property\">onload</span> = <span class=\"title function_\">async</span> (e) =&gt; &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">// console.log(&#x27;*******上传图片一次*******&#x27;)</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">// 开启loading</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">const</span> res = <span class=\"keyword\">await</span> <span class=\"title function_\">postUploadImage</span>(&#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"attr\">base64Str</span>: e.<span class=\"property\">target</span>?.<span class=\"property\">result</span>,</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"attr\">extName</span>: file?.<span class=\"property\">type</span>.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;/&#x27;</span>)[<span class=\"number\">1</span>] || file?.<span class=\"property\">name</span>.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;.&#x27;</span>)[<span class=\"number\">1</span>], <span class=\"comment\">//文件后缀</span></span><br><span class=\"line\">\t\t\t\t\t\t&#125;)</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"comment\">// console.log(&#x27;上传之后返回的资源链接：&#x27;, res.data?.url)</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"comment\">// 上传完成，置空，以便下次上传</span></span><br><span class=\"line\">\t\t\t\t\t\tuploadQueue.<span class=\"property\">value</span> = []</span><br><span class=\"line\">\t\t\t\t\t&#125; <span class=\"keyword\">catch</span> (error) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;error&#x27;</span>)</span><br><span class=\"line\">\t\t\t\t\t&#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"comment\">// 关闭loading</span></span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">generateFileKey</span> = (<span class=\"params\">file</span>) =&gt; &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 使用文件名和大小生成唯一标识</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> file.<span class=\"property\">name</span> + file.<span class=\"property\">size</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>资源上传接口(axios 封装)</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 资源上传接口(axios封装)</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> request <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../request.js&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">//图片上传</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title function_\">postUploadImage</span> = (<span class=\"params\">params</span>) =&gt; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> data = &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">extName</span>: params.<span class=\"property\">extName</span> || <span class=\"string\">&#x27;png&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">sourceType</span>: <span class=\"string\">&#x27;oho&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">serviceType</span>: <span class=\"keyword\">import</span>.<span class=\"property\">meta</span>.<span class=\"property\">env</span>.<span class=\"property\">VITE_SYSTEM_NAME</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">base64Str</span>: params.<span class=\"property\">base64Str</span>.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;,&#x27;</span>)[<span class=\"number\">1</span>],</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> request.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/upload/file/uploadVideo&#x27;</span>, data, &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// &#x27;Content-Type&#x27;: &#x27;application/json;charset=utf-8&#x27;,</span></span><br><span class=\"line\">\t\t\t<span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/x-www-form-urlencoded;charset=UTF-8&#x27;</span>,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"文件流形式入参-表单提交、不需多加处理成-Base64\"><a href=\"#文件流形式入参-表单提交、不需多加处理成-Base64\" class=\"headerlink\" title=\"*** 文件流形式入参(表单提交、不需多加处理成 Base64) ***\"></a>*** 文件流形式入参(表单提交、不需多加处理成 Base64) ***</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;changeAvater&quot;</span>&gt;</span>上传<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;false&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;changeAvatarUpload&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">accept</span>=<span class=\"string\">&quot;image/*&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>文件流形式入参资源文件 <code>formData.append(&#39;file&#39;, file)</code></li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> formValue = <span class=\"title function_\">ref</span>(&#123;</span><br><span class=\"line\">\t<span class=\"attr\">avatar</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changeAvater</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t<span class=\"title function_\">nextTick</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">const</span> resoUp = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;changeAvatarUpload&#x27;</span>)</span><br><span class=\"line\">\t\tresoUp?.<span class=\"title function_\">click</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tresoUp?.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;change&#x27;</span>, <span class=\"title function_\">async</span> (event) =&gt; &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">const</span> file = event.<span class=\"property\">target</span>.<span class=\"property\">files</span>[<span class=\"number\">0</span>] <span class=\"comment\">// 获取文件对象</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">const</span> formData = <span class=\"keyword\">new</span> <span class=\"title class_\">FormData</span>()</span><br><span class=\"line\">\t\t\tformData.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;file&#x27;</span>, file) <span class=\"comment\">// file 入参字段名</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (file) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">await</span> <span class=\"title function_\">axios</span>(<span class=\"string\">&#x27;/website/user/uploadAvatar&#x27;</span>, &#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"attr\">method</span>: <span class=\"string\">&#x27;POST&#x27;</span>,</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"attr\">body</span>: formData,</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"string\">&#x27;Accept-Language&#x27;</span>: <span class=\"string\">&#x27;zh-CN&#x27;</span>,</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"title class_\">Authorization</span>: token,</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"comment\">// &#x27;Content-Type&#x27;: &#x27;multipart/form-data&#x27;,</span></span><br><span class=\"line\">\t\t\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"title function_\">onResponse</span>(<span class=\"params\">&#123; response &#125;</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"keyword\">const</span> &#123; <span class=\"attr\">_data</span>: res &#125; = response</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"keyword\">if</span> (res.<span class=\"property\">code</span> !== <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\tmessage.<span class=\"title function_\">error</span>(res?.<span class=\"property\">msg</span> || res?.<span class=\"property\">message</span> || <span class=\"string\">&#x27;error&#x27;</span>)</span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">null</span></span><br><span class=\"line\">\t\t\t\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\tformValue.<span class=\"property\">value</span>.<span class=\"property\">avatar</span> = res.<span class=\"property\">data</span></span><br><span class=\"line\">\t\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\t\t&#125;)</span><br><span class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">catch</span> (error) &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;error&#x27;</span>)</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h3 id=\"Base64-的格式入参\"><a href=\"#Base64-的格式入参\" class=\"headerlink\" title=\"*** Base64 的格式入参 ***\"></a>*** Base64 的格式入参 ***</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">:src</span>=<span class=\"string\">&quot;iconFile&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;getResoureUrl(1)&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">:src</span>=<span class=\"string\">&quot;iconCamera&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;getResoureUrl(2)&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">:src</span>=<span class=\"string\">&quot;iconVideo&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;getResoureUrl(3)&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;fileUpload&quot;</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;false&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;imageUpload&quot;</span> <span class=\"attr\">accept</span>=<span class=\"string\">&quot;image/*&quot;</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;false&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;videoUpload&quot;</span> <span class=\"attr\">accept</span>=<span class=\"string\">&quot;video/*&quot;</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;false&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>图片上传前，可以先进行压缩（图片优化处理） <code>npm i browser-image-compression</code></li>\n<li>资源上传共用方法 <code>getResoureUrl()</code></li>\n<li>Base64 的格式入参资源文件<br><code>const reader = new FileReader()</code><br><code>reader.readAsDataURL(file)</code><br><code>reader.onload = async (e) =&gt; &#123;&#125;</code></li>\n<li>【注意】当重复上传相同的文件&#x2F;图片&#x2F;视频时，不会触发change函数，造成上传失败，原因是：浏览器认为选择了相同名称的文件并不代表用户有新的操作，所以没有触发 change 事件</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 图片上传前压缩处理(推荐)</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> imageCompression <span class=\"keyword\">from</span> <span class=\"string\">&#x27;browser-image-compression&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 正在上传的队列</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> uploadQueue = <span class=\"title function_\">ref</span>([])</span><br><span class=\"line\"><span class=\"comment\">// 上传 1所有文件类型、2图片和3视频</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">getResoureUrl</span> = (<span class=\"params\">resourceType</span>) =&gt; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> idName = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (resourceType == <span class=\"number\">1</span>) idName = <span class=\"string\">&#x27;fileUpload&#x27;</span></span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (resourceType == <span class=\"number\">2</span>) idName = <span class=\"string\">&#x27;imageUpload&#x27;</span></span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (resourceType == <span class=\"number\">3</span>) idName = <span class=\"string\">&#x27;videoUpload&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"title function_\">nextTick</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t\t * BUG：当多个上传入口同时操作时，input 状态混乱，最后url赋值错位</span></span><br><span class=\"line\"><span class=\"comment\">\t\t * 解决：每个上传入口用独立的inputId，可以通过调用时传入(idName)</span></span><br><span class=\"line\"><span class=\"comment\">\t\t */</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">const</span> resoUp = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(idName)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!resoUp) <span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// 保证每次（点击）都能触发</span></span><br><span class=\"line\">\t\tresoUp.<span class=\"property\">value</span> = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// 先移除旧的监听</span></span><br><span class=\"line\">\t\tresoUp.<span class=\"property\">onchange</span> = <span class=\"literal\">null</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\tresoUp?.<span class=\"title function_\">click</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// 事件监听用 onchange 代替 addEventListener(&#x27;change&#x27;)，每次覆盖，避免重复绑定</span></span><br><span class=\"line\">\t\tresoUp.<span class=\"property\">onchange</span> = <span class=\"keyword\">async</span> <span class=\"keyword\">function</span> (<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">const</span> upFile = event.<span class=\"property\">target</span>.<span class=\"property\">files</span>[<span class=\"number\">0</span>] <span class=\"comment\">// 获取文件对象</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!upFile) <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">/************************************</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t * 优化：（图片上传到服务器之前）先压缩图片</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t *  (1) 下载依赖npm i browser-image-compression</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t *  (2) vue文件中引入 import imageCompression from &#x27;browser-image-compression&#x27;;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t *  (3) 使用 imageCompression 函数进行压缩</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t */</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">const</span> options = &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">maxSizeMB</span>: <span class=\"number\">1</span>, <span class=\"comment\">// 最大文件大小(MB)</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">maxWidthOrHeight</span>: <span class=\"number\">700</span>, <span class=\"comment\">// （压缩后的）最大宽/高</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">useWebWorker</span>: <span class=\"literal\">true</span>, <span class=\"comment\">// 使用WebWorker加速</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">fileType</span>: <span class=\"string\">&#x27;image/webp&#x27;</span>, <span class=\"comment\">// 可选转换为webp格式</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">const</span> compressedFile = <span class=\"keyword\">await</span> <span class=\"title function_\">imageCompression</span>(upFile, options)</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// ************************************</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 使用压缩后的文件compressedFile 或 原文件upFile</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">const</span> file = compressedFile || upFile</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">const</span> reader = <span class=\"keyword\">new</span> <span class=\"title class_\">FileReader</span>()</span><br><span class=\"line\">\t\t\treader.<span class=\"title function_\">readAsDataURL</span>(file) <span class=\"comment\">// 将文件读取为DataURL</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">/*********************************</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t * 问题：当重复上传相同的文件/图片/视频时，不会触发change函数，造成上传失败</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t * 原因：浏览器认为选择了相同名称的文件并不代表用户有新的操作，所以没有触发 change 事件</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t * 解决：清除input的值，以便下次可上传同一张图片</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t */</span></span><br><span class=\"line\">\t\t\t<span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">\t\t\t\tevent.<span class=\"property\">target</span>.<span class=\"property\">value</span> = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">\t\t\t&#125;)</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// ******************************</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (file) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// input表单 file change监听文件上传事件多次触发， 使用数组uploadQueue帮助判断</span></span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// console.log(&#x27;*******图片点击多次*******&#x27;)</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">const</span> fileKey = <span class=\"title function_\">generateFileKey</span>(file)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (uploadQueue.<span class=\"property\">value</span>.<span class=\"title function_\">includes</span>(fileKey)) <span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t\tuploadQueue.<span class=\"property\">value</span>.<span class=\"title function_\">push</span>(fileKey)</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\treader.<span class=\"property\">onload</span> = <span class=\"title function_\">async</span> (e) =&gt; &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">// console.log(&#x27;*******上传图片一次*******&#x27;)</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">// 开启loading</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">const</span> res = <span class=\"keyword\">await</span> <span class=\"title function_\">postUploadImage</span>(&#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"attr\">base64Str</span>: e.<span class=\"property\">target</span>?.<span class=\"property\">result</span>,</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"attr\">extName</span>: file?.<span class=\"property\">type</span>.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;/&#x27;</span>)[<span class=\"number\">1</span>] || file?.<span class=\"property\">name</span>.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;.&#x27;</span>)[<span class=\"number\">1</span>], <span class=\"comment\">//文件后缀</span></span><br><span class=\"line\">\t\t\t\t\t\t&#125;)</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"comment\">// console.log(&#x27;上传之后返回的资源链接：&#x27;, res.data?.url)</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"comment\">// 上传完成，置空，以便下次上传</span></span><br><span class=\"line\">\t\t\t\t\t\tuploadQueue.<span class=\"property\">value</span> = []</span><br><span class=\"line\">\t\t\t\t\t&#125; <span class=\"keyword\">catch</span> (error) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;error&#x27;</span>)</span><br><span class=\"line\">\t\t\t\t\t&#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"comment\">// 关闭loading</span></span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">generateFileKey</span> = (<span class=\"params\">file</span>) =&gt; &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 使用文件名和大小生成唯一标识</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> file.<span class=\"property\">name</span> + file.<span class=\"property\">size</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>资源上传接口(axios 封装)</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 资源上传接口(axios封装)</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> request <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../request.js&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">//图片上传</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title function_\">postUploadImage</span> = (<span class=\"params\">params</span>) =&gt; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> data = &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">extName</span>: params.<span class=\"property\">extName</span> || <span class=\"string\">&#x27;png&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">sourceType</span>: <span class=\"string\">&#x27;oho&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">serviceType</span>: <span class=\"keyword\">import</span>.<span class=\"property\">meta</span>.<span class=\"property\">env</span>.<span class=\"property\">VITE_SYSTEM_NAME</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">base64Str</span>: params.<span class=\"property\">base64Str</span>.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;,&#x27;</span>)[<span class=\"number\">1</span>],</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> request.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/upload/file/uploadVideo&#x27;</span>, data, &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// &#x27;Content-Type&#x27;: &#x27;application/json;charset=utf-8&#x27;,</span></span><br><span class=\"line\">\t\t\t<span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/x-www-form-urlencoded;charset=UTF-8&#x27;</span>,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"文件流形式入参-表单提交、不需多加处理成-Base64\"><a href=\"#文件流形式入参-表单提交、不需多加处理成-Base64\" class=\"headerlink\" title=\"*** 文件流形式入参(表单提交、不需多加处理成 Base64) ***\"></a>*** 文件流形式入参(表单提交、不需多加处理成 Base64) ***</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;changeAvater&quot;</span>&gt;</span>上传<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;false&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;changeAvatarUpload&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">accept</span>=<span class=\"string\">&quot;image/*&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>文件流形式入参资源文件 <code>formData.append(&#39;file&#39;, file)</code></li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> formValue = <span class=\"title function_\">ref</span>(&#123;</span><br><span class=\"line\">\t<span class=\"attr\">avatar</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changeAvater</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t<span class=\"title function_\">nextTick</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">const</span> resoUp = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;changeAvatarUpload&#x27;</span>)</span><br><span class=\"line\">\t\tresoUp?.<span class=\"title function_\">click</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tresoUp?.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;change&#x27;</span>, <span class=\"title function_\">async</span> (event) =&gt; &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">const</span> file = event.<span class=\"property\">target</span>.<span class=\"property\">files</span>[<span class=\"number\">0</span>] <span class=\"comment\">// 获取文件对象</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">const</span> formData = <span class=\"keyword\">new</span> <span class=\"title class_\">FormData</span>()</span><br><span class=\"line\">\t\t\tformData.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;file&#x27;</span>, file) <span class=\"comment\">// file 入参字段名</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (file) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">await</span> <span class=\"title function_\">axios</span>(<span class=\"string\">&#x27;/website/user/uploadAvatar&#x27;</span>, &#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"attr\">method</span>: <span class=\"string\">&#x27;POST&#x27;</span>,</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"attr\">body</span>: formData,</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"string\">&#x27;Accept-Language&#x27;</span>: <span class=\"string\">&#x27;zh-CN&#x27;</span>,</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"title class_\">Authorization</span>: token,</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"comment\">// &#x27;Content-Type&#x27;: &#x27;multipart/form-data&#x27;,</span></span><br><span class=\"line\">\t\t\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"title function_\">onResponse</span>(<span class=\"params\">&#123; response &#125;</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"keyword\">const</span> &#123; <span class=\"attr\">_data</span>: res &#125; = response</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"keyword\">if</span> (res.<span class=\"property\">code</span> !== <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\tmessage.<span class=\"title function_\">error</span>(res?.<span class=\"property\">msg</span> || res?.<span class=\"property\">message</span> || <span class=\"string\">&#x27;error&#x27;</span>)</span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">null</span></span><br><span class=\"line\">\t\t\t\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\tformValue.<span class=\"property\">value</span>.<span class=\"property\">avatar</span> = res.<span class=\"property\">data</span></span><br><span class=\"line\">\t\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\t\t&#125;)</span><br><span class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">catch</span> (error) &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;error&#x27;</span>)</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"css切割属性clip-path","date":"2025-08-07T07:46:30.000Z","cover":"/images/css切割属性clip-path/cover.jpg","_content":"\n### clip-path 属性切割图形\n\n```css\n.clipped-element {\n\twidth: 300px;\n\theight: 200px;\n\tbackground-color: rgb(232, 53, 53);\n\t/* 切割 clip-path */\n\n\tclip-path: none | circle | ellipse | inset | polygon | path('d');\n\t/* 1、默认值none, 不切割 */\n\tclip-path: none;\n\n\t/* 2、圆形 circle(radius at position) */\n\t/* 默认 (以中心为圆心，元素短边的一半为半径)*/\n\tclip-path: circle();\n\t/* 切割一个以(10px, 30px)为圆心、半径为50px的圆，超出部分不可见，position的值：left、right、top、bottom、 x% y% 、x y */\n\tclip-path: circle(50px at 10px 30px);\n\n\t/* 3、椭圆 ellipse(rx ry at position) */\n\tclip-path: ellipse(\n\n\t); /* 默认切割一个椭圆(以中心为中心，元素的两边长各一半为x和y方向的半径) */\n\tclip-path: ellipse(50% 50% at left 50%);\n\n\t/* 4、矩形 inset(top right bottom left round radius) */\n\tclip-path: inset(20px 30px 40px 50px);\n\n\t/* 5、多边形 polygon(x1 y1, x2 y2, ...)，x 和 y 分别是顶点的水平和垂直坐标，可以使用长度值或百分比 */\n\tclip-path: polygon(0 0, 50% 0, 100% 30%, 70% 100%, 0 50%);\n\n\t/* 6、path('d')，d 是 SVG 路径的描述字符串，使用 SVG 路径数据来创建剪切区域，灵活性更高，可以创建复杂的形状 */\n\tclip-path: path(\n\t\t'M140 20C73 20 20 74 20 140c0 135 136 170 228 303 88-132 229-173 229-303 0-66-54-120-120-120-48 0-90 28-109 69-19-41-60-69-108-69z'\n\t);\n}\n```\n\n### 示例 1\n\n- 效果\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"UTF-8\" />\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\t<style>\n\t\t:root {\n\t\t\t--clicp-width: 50px; /* 剪切区域宽度 */\n\t\t\t--elem-padding: 10px; /* 元素内边距 */\n\t\t\t--active-bg-color: #6f3ce7;\n\t\t}\n\t\t.clippedBox {\n\t\t\tdisplay: flex;\n\t\t\tposition: relative;\n\t\t\tmargin: 30px;\n\t\t}\n\t\t.clipped-element1,\n\t\t.clipped-element2,\n\t\t.clipped-element3 {\n\t\t\twidth: 260px;\n\t\t\theight: 70px;\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tbox-sizing: border-box;\n\t\t\tbackground-color: #999;\n\t\t\tposition: relative;\n\t\t\tcolor: white;\n\t\t\tfont-weight: bold;\n\t\t\tjustify-content: center;\n\t\t}\n\t\t/* 内边距 */\n\t\t.clipped-element1 {\n\t\t\tpadding: 0 calc(var(--elem-padding) + var(--clicp-width)) 0 var(--elem-padding);\n\t\t}\n\t\t.clipped-element2 {\n\t\t\tmargin: 0 calc(calc(var(--clicp-width) - 10px) * -1);\n\t\t\tpadding: 0 calc(var(--elem-padding) + var(--clicp-width));\n\t\t}\n\t\t.clipped-element3 {\n\t\t\tpadding: 0 var(--elem-padding) 0 calc(var(--elem-padding) + var(--clicp-width));\n\t\t}\n\t\t/* 第一个元素 */\n\t\t.clipped-element1 {\n\t\t\tborder-radius: 10px 0 0 10px;\n\t\t\tclip-path: polygon(\n\t\t\t\t0 0,\n\t\t\t\tcalc(100% - var(--clicp-width)) 0,\n\t\t\t\t100% 50%,\n\t\t\t\tcalc(100% - var(--clicp-width)) 100%,\n\t\t\t\t0 100%\n\t\t\t);\n\t\t}\n\t\t/* 第二个元素 */\n\t\t.clipped-element2 {\n\t\t\tclip-path: polygon(\n\t\t\t\t0 0,\n\t\t\t\tcalc(100% - var(--clicp-width)) 0,\n\t\t\t\t100% 50%,\n\t\t\t\tcalc(100% - var(--clicp-width)) 100%,\n\t\t\t\t0 100%,\n\t\t\t\tvar(--clicp-width) 50%\n\t\t\t);\n\t\t}\n\t\t/* 第三个元素 */\n\t\t.clipped-element3 {\n\t\t\tborder-radius: 0 10px 10px 0;\n\t\t\tclip-path: polygon(\n\t\t\t\t0 0,\n\t\t\t\t100% 0,\n\t\t\t\t100% 100%,\n\t\t\t\t0 100%,\n\t\t\t\tvar(--clicp-width) 50%\n\t\t\t);\n\t\t}\n\t\t/* 添加悬停效果 */\n\t\t.clipped-element1:hover,\n\t\t.clipped-element2:hover,\n\t\t.clipped-element3:hover {\n\t\t\tbackground-color: var(--active-bg-color);\n\t\t\ttransform: scale(1.02);\n\t\t\ttransition: all 0.3s ease;\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div class=\"clippedBox\">\n\t\t<div class=\"clipped-element1\" onclick=\"clinkBtn(event)\">未开始</div>\n\t\t<div class=\"clipped-element2\" onclick=\"clinkBtn(event)\">进行中</div>\n\t\t<div class=\"clipped-element3\" onclick=\"clinkBtn(event)\">已完成</div>\n\t</div>\n</body>\n<script>\n\tfunction clinkBtn(event) {\n\t\tconst target = event.target\n\t\tif (target.classList.contains('clipped-element1')) {\n\t\t\talert('未开始')\n\t\t} else if (target.classList.contains('clipped-element2')) {\n\t\t\talert('进行中')\n\t\t} else if (target.classList.contains('clipped-element3')) {\n\t\t\talert('已完成')\n\t\t}\n\t}\n</script>\n</html>\n\n- 代码\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\" />\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\t\t<style>\n\t\t\t:root {\n\t\t\t\t--clicp-width: 50px; /* 剪切区域宽度 */\n\t\t\t\t--elem-padding: 10px; /* 元素内边距 */\n\t\t\t\t--active-bg-color: #6f3ce7;\n\t\t\t}\n\t\t\t.clippedBox {\n\t\t\t\tdisplay: flex;\n\t\t\t\tposition: relative;\n\t\t\t\tmargin: 30px;\n\t\t\t}\n\t\t\t.clipped-element1,\n\t\t\t.clipped-element2,\n\t\t\t.clipped-element3 {\n\t\t\t\twidth: 260px;\n\t\t\t\theight: 70px;\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tbox-sizing: border-box;\n\t\t\t\tbackground-color: #999;\n\t\t\t\tposition: relative;\n\t\t\t\tcolor: white;\n\t\t\t\tfont-weight: bold;\n\t\t\t\tjustify-content: center;\n\t\t\t}\n\t\t\t/* 内边距 */\n\t\t\t.clipped-element1 {\n\t\t\t\tpadding: 0 calc(var(--elem-padding) + var(--clicp-width)) 0 var(\n\t\t\t\t\t\t--elem-padding\n\t\t\t\t\t);\n\t\t\t}\n\t\t\t.clipped-element2 {\n\t\t\t\tmargin: 0 calc(calc(var(--clicp-width) - 10px) * -1);\n\t\t\t\tpadding: 0 calc(var(--elem-padding) + var(--clicp-width));\n\t\t\t}\n\t\t\t.clipped-element3 {\n\t\t\t\tpadding: 0 var(--elem-padding) 0 calc(\n\t\t\t\t\t\tvar(--elem-padding) + var(--clicp-width)\n\t\t\t\t\t);\n\t\t\t}\n\t\t\t/* 第一个元素 */\n\t\t\t.clipped-element1 {\n\t\t\t\tborder-radius: 10px 0 0 10px;\n\t\t\t\tclip-path: polygon(\n\t\t\t\t\t0 0,\n\t\t\t\t\tcalc(100% - var(--clicp-width)) 0,\n\t\t\t\t\t100% 50%,\n\t\t\t\t\tcalc(100% - var(--clicp-width)) 100%,\n\t\t\t\t\t0 100%\n\t\t\t\t);\n\t\t\t}\n\t\t\t/* 第二个元素 */\n\t\t\t.clipped-element2 {\n\t\t\t\tclip-path: polygon(\n\t\t\t\t\t0 0,\n\t\t\t\t\tcalc(100% - var(--clicp-width)) 0,\n\t\t\t\t\t100% 50%,\n\t\t\t\t\tcalc(100% - var(--clicp-width)) 100%,\n\t\t\t\t\t0 100%,\n\t\t\t\t\tvar(--clicp-width) 50%\n\t\t\t\t);\n\t\t\t}\n\t\t\t/* 第三个元素 */\n\t\t\t.clipped-element3 {\n\t\t\t\tborder-radius: 0 10px 10px 0;\n\t\t\t\tclip-path: polygon(\n\t\t\t\t\t0 0,\n\t\t\t\t\t100% 0,\n\t\t\t\t\t100% 100%,\n\t\t\t\t\t0 100%,\n\t\t\t\t\tvar(--clicp-width) 50%\n\t\t\t\t);\n\t\t\t}\n\t\t\t/* 添加悬停效果 */\n\t\t\t.clipped-element1:hover,\n\t\t\t.clipped-element2:hover,\n\t\t\t.clipped-element3:hover {\n\t\t\t\tbackground-color: var(--active-bg-color);\n\t\t\t\ttransform: scale(1.02);\n\t\t\t\ttransition: all 0.3s ease;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div class=\"clippedBox\">\n\t\t\t<div class=\"clipped-element1\" onclick=\"clinkBtn(event)\">未开始</div>\n\t\t\t<div class=\"clipped-element2\" onclick=\"clinkBtn(event)\">进行中</div>\n\t\t\t<div class=\"clipped-element3\" onclick=\"clinkBtn(event)\">已完成</div>\n\t\t</div>\n\t</body>\n\t<script>\n\t\tfunction clinkBtn(event) {\n\t\t\tconst target = event.target\n\t\t\tif (target.classList.contains('clipped-element1')) {\n\t\t\t\talert('未开始')\n\t\t\t} else if (target.classList.contains('clipped-element2')) {\n\t\t\t\talert('进行中')\n\t\t\t} else if (target.classList.contains('clipped-element3')) {\n\t\t\t\talert('已完成')\n\t\t\t}\n\t\t}\n\t</script>\n</html>\n```\n\n### 示例 2\n\n- 效果\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"UTF-8\" />\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\t<style>\n\t\t.imgError {\n\t\t\t\tbackground-color: #ededed;\n\t\t\tborder-radius: 10px;\n\t\t\t\tposition: relative;\n\t\t\twidth: 600px;\n\t\t\theight: 360px;\n\t\t\tmargin: 30px;\n\t\t\toverflow: hidden;\n\t\t}\n\t\t\t.clipped1, .clipped2 {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\t\tbackground-color: rgba(95, 74, 254, 0.283);\n\t\t\t\tmask: linear-gradient(to left, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0.2));\n\t\t\t}\n\t\t.clipped1 {\n\t\t\tclip-path: ellipse(33% 40% at 31.5% 110%);\n\t\t}\n\t\t.clipped2 {\n\t\t\tclip-path: ellipse(55% 60% at 96% 110%);\n\t\t}\n\t\t.clipped3 {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tbackground-color: rgb(249, 88, 70);\n\t\t\tclip-path: circle(45px at 30% 20%);\n\t\t\t\t/* mask: linear-gradient(to left, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0.8)); */\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div class=\"imgError\">\n\t\t<div class=\"clipped1\"></div>\n\t\t<div class=\"clipped2\"></div>\n\t\t<div class=\"clipped3\"></div>\n\t</div>\n</body>\n</html>\n\n- 代码\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\" />\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\t\t<style>\n\t\t\t.imgError {\n\t\t\t\tbackground-color: #ededed;\n\t\t\t\tborder-radius: 10px;\n\t\t\t\tposition: relative;\n\t\t\t\twidth: 600px;\n\t\t\t\theight: 360px;\n\t\t\t\tmargin: 30px;\n\t\t\t\toverflow: hidden;\n\t\t\t}\n\t\t\t.clipped1,\n\t\t\t.clipped2 {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\tbackground-color: rgba(95, 74, 254, 0.283);\n\t\t\t\tmask: linear-gradient(to left, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0.2));\n\t\t\t}\n\t\t\t.clipped1 {\n\t\t\t\tclip-path: ellipse(33% 40% at 31.5% 110%);\n\t\t\t}\n\t\t\t.clipped2 {\n\t\t\t\tclip-path: ellipse(55% 60% at 96% 110%);\n\t\t\t}\n\t\t\t.clipped3 {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\tbackground-color: rgb(249, 88, 70);\n\t\t\t\tclip-path: circle(45px at 30% 20%);\n\t\t\t\t/* mask: linear-gradient(to left, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0.8)); */\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div class=\"imgError\">\n\t\t\t<div class=\"clipped1\"></div>\n\t\t\t<div class=\"clipped2\"></div>\n\t\t\t<div class=\"clipped3\"></div>\n\t\t</div>\n\t</body>\n</html>\n```\n","source":"_posts/2025-08-07-css切割属性clip-path.md","raw":"---\ntitle: css切割属性clip-path\ndate: 2025-08-07 15:46:30\ntags: css\ncategories: css\ncover: /images/css切割属性clip-path/cover.jpg # 封面图\n---\n\n### clip-path 属性切割图形\n\n```css\n.clipped-element {\n\twidth: 300px;\n\theight: 200px;\n\tbackground-color: rgb(232, 53, 53);\n\t/* 切割 clip-path */\n\n\tclip-path: none | circle | ellipse | inset | polygon | path('d');\n\t/* 1、默认值none, 不切割 */\n\tclip-path: none;\n\n\t/* 2、圆形 circle(radius at position) */\n\t/* 默认 (以中心为圆心，元素短边的一半为半径)*/\n\tclip-path: circle();\n\t/* 切割一个以(10px, 30px)为圆心、半径为50px的圆，超出部分不可见，position的值：left、right、top、bottom、 x% y% 、x y */\n\tclip-path: circle(50px at 10px 30px);\n\n\t/* 3、椭圆 ellipse(rx ry at position) */\n\tclip-path: ellipse(\n\n\t); /* 默认切割一个椭圆(以中心为中心，元素的两边长各一半为x和y方向的半径) */\n\tclip-path: ellipse(50% 50% at left 50%);\n\n\t/* 4、矩形 inset(top right bottom left round radius) */\n\tclip-path: inset(20px 30px 40px 50px);\n\n\t/* 5、多边形 polygon(x1 y1, x2 y2, ...)，x 和 y 分别是顶点的水平和垂直坐标，可以使用长度值或百分比 */\n\tclip-path: polygon(0 0, 50% 0, 100% 30%, 70% 100%, 0 50%);\n\n\t/* 6、path('d')，d 是 SVG 路径的描述字符串，使用 SVG 路径数据来创建剪切区域，灵活性更高，可以创建复杂的形状 */\n\tclip-path: path(\n\t\t'M140 20C73 20 20 74 20 140c0 135 136 170 228 303 88-132 229-173 229-303 0-66-54-120-120-120-48 0-90 28-109 69-19-41-60-69-108-69z'\n\t);\n}\n```\n\n### 示例 1\n\n- 效果\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"UTF-8\" />\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\t<style>\n\t\t:root {\n\t\t\t--clicp-width: 50px; /* 剪切区域宽度 */\n\t\t\t--elem-padding: 10px; /* 元素内边距 */\n\t\t\t--active-bg-color: #6f3ce7;\n\t\t}\n\t\t.clippedBox {\n\t\t\tdisplay: flex;\n\t\t\tposition: relative;\n\t\t\tmargin: 30px;\n\t\t}\n\t\t.clipped-element1,\n\t\t.clipped-element2,\n\t\t.clipped-element3 {\n\t\t\twidth: 260px;\n\t\t\theight: 70px;\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tbox-sizing: border-box;\n\t\t\tbackground-color: #999;\n\t\t\tposition: relative;\n\t\t\tcolor: white;\n\t\t\tfont-weight: bold;\n\t\t\tjustify-content: center;\n\t\t}\n\t\t/* 内边距 */\n\t\t.clipped-element1 {\n\t\t\tpadding: 0 calc(var(--elem-padding) + var(--clicp-width)) 0 var(--elem-padding);\n\t\t}\n\t\t.clipped-element2 {\n\t\t\tmargin: 0 calc(calc(var(--clicp-width) - 10px) * -1);\n\t\t\tpadding: 0 calc(var(--elem-padding) + var(--clicp-width));\n\t\t}\n\t\t.clipped-element3 {\n\t\t\tpadding: 0 var(--elem-padding) 0 calc(var(--elem-padding) + var(--clicp-width));\n\t\t}\n\t\t/* 第一个元素 */\n\t\t.clipped-element1 {\n\t\t\tborder-radius: 10px 0 0 10px;\n\t\t\tclip-path: polygon(\n\t\t\t\t0 0,\n\t\t\t\tcalc(100% - var(--clicp-width)) 0,\n\t\t\t\t100% 50%,\n\t\t\t\tcalc(100% - var(--clicp-width)) 100%,\n\t\t\t\t0 100%\n\t\t\t);\n\t\t}\n\t\t/* 第二个元素 */\n\t\t.clipped-element2 {\n\t\t\tclip-path: polygon(\n\t\t\t\t0 0,\n\t\t\t\tcalc(100% - var(--clicp-width)) 0,\n\t\t\t\t100% 50%,\n\t\t\t\tcalc(100% - var(--clicp-width)) 100%,\n\t\t\t\t0 100%,\n\t\t\t\tvar(--clicp-width) 50%\n\t\t\t);\n\t\t}\n\t\t/* 第三个元素 */\n\t\t.clipped-element3 {\n\t\t\tborder-radius: 0 10px 10px 0;\n\t\t\tclip-path: polygon(\n\t\t\t\t0 0,\n\t\t\t\t100% 0,\n\t\t\t\t100% 100%,\n\t\t\t\t0 100%,\n\t\t\t\tvar(--clicp-width) 50%\n\t\t\t);\n\t\t}\n\t\t/* 添加悬停效果 */\n\t\t.clipped-element1:hover,\n\t\t.clipped-element2:hover,\n\t\t.clipped-element3:hover {\n\t\t\tbackground-color: var(--active-bg-color);\n\t\t\ttransform: scale(1.02);\n\t\t\ttransition: all 0.3s ease;\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div class=\"clippedBox\">\n\t\t<div class=\"clipped-element1\" onclick=\"clinkBtn(event)\">未开始</div>\n\t\t<div class=\"clipped-element2\" onclick=\"clinkBtn(event)\">进行中</div>\n\t\t<div class=\"clipped-element3\" onclick=\"clinkBtn(event)\">已完成</div>\n\t</div>\n</body>\n<script>\n\tfunction clinkBtn(event) {\n\t\tconst target = event.target\n\t\tif (target.classList.contains('clipped-element1')) {\n\t\t\talert('未开始')\n\t\t} else if (target.classList.contains('clipped-element2')) {\n\t\t\talert('进行中')\n\t\t} else if (target.classList.contains('clipped-element3')) {\n\t\t\talert('已完成')\n\t\t}\n\t}\n</script>\n</html>\n\n- 代码\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\" />\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\t\t<style>\n\t\t\t:root {\n\t\t\t\t--clicp-width: 50px; /* 剪切区域宽度 */\n\t\t\t\t--elem-padding: 10px; /* 元素内边距 */\n\t\t\t\t--active-bg-color: #6f3ce7;\n\t\t\t}\n\t\t\t.clippedBox {\n\t\t\t\tdisplay: flex;\n\t\t\t\tposition: relative;\n\t\t\t\tmargin: 30px;\n\t\t\t}\n\t\t\t.clipped-element1,\n\t\t\t.clipped-element2,\n\t\t\t.clipped-element3 {\n\t\t\t\twidth: 260px;\n\t\t\t\theight: 70px;\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tbox-sizing: border-box;\n\t\t\t\tbackground-color: #999;\n\t\t\t\tposition: relative;\n\t\t\t\tcolor: white;\n\t\t\t\tfont-weight: bold;\n\t\t\t\tjustify-content: center;\n\t\t\t}\n\t\t\t/* 内边距 */\n\t\t\t.clipped-element1 {\n\t\t\t\tpadding: 0 calc(var(--elem-padding) + var(--clicp-width)) 0 var(\n\t\t\t\t\t\t--elem-padding\n\t\t\t\t\t);\n\t\t\t}\n\t\t\t.clipped-element2 {\n\t\t\t\tmargin: 0 calc(calc(var(--clicp-width) - 10px) * -1);\n\t\t\t\tpadding: 0 calc(var(--elem-padding) + var(--clicp-width));\n\t\t\t}\n\t\t\t.clipped-element3 {\n\t\t\t\tpadding: 0 var(--elem-padding) 0 calc(\n\t\t\t\t\t\tvar(--elem-padding) + var(--clicp-width)\n\t\t\t\t\t);\n\t\t\t}\n\t\t\t/* 第一个元素 */\n\t\t\t.clipped-element1 {\n\t\t\t\tborder-radius: 10px 0 0 10px;\n\t\t\t\tclip-path: polygon(\n\t\t\t\t\t0 0,\n\t\t\t\t\tcalc(100% - var(--clicp-width)) 0,\n\t\t\t\t\t100% 50%,\n\t\t\t\t\tcalc(100% - var(--clicp-width)) 100%,\n\t\t\t\t\t0 100%\n\t\t\t\t);\n\t\t\t}\n\t\t\t/* 第二个元素 */\n\t\t\t.clipped-element2 {\n\t\t\t\tclip-path: polygon(\n\t\t\t\t\t0 0,\n\t\t\t\t\tcalc(100% - var(--clicp-width)) 0,\n\t\t\t\t\t100% 50%,\n\t\t\t\t\tcalc(100% - var(--clicp-width)) 100%,\n\t\t\t\t\t0 100%,\n\t\t\t\t\tvar(--clicp-width) 50%\n\t\t\t\t);\n\t\t\t}\n\t\t\t/* 第三个元素 */\n\t\t\t.clipped-element3 {\n\t\t\t\tborder-radius: 0 10px 10px 0;\n\t\t\t\tclip-path: polygon(\n\t\t\t\t\t0 0,\n\t\t\t\t\t100% 0,\n\t\t\t\t\t100% 100%,\n\t\t\t\t\t0 100%,\n\t\t\t\t\tvar(--clicp-width) 50%\n\t\t\t\t);\n\t\t\t}\n\t\t\t/* 添加悬停效果 */\n\t\t\t.clipped-element1:hover,\n\t\t\t.clipped-element2:hover,\n\t\t\t.clipped-element3:hover {\n\t\t\t\tbackground-color: var(--active-bg-color);\n\t\t\t\ttransform: scale(1.02);\n\t\t\t\ttransition: all 0.3s ease;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div class=\"clippedBox\">\n\t\t\t<div class=\"clipped-element1\" onclick=\"clinkBtn(event)\">未开始</div>\n\t\t\t<div class=\"clipped-element2\" onclick=\"clinkBtn(event)\">进行中</div>\n\t\t\t<div class=\"clipped-element3\" onclick=\"clinkBtn(event)\">已完成</div>\n\t\t</div>\n\t</body>\n\t<script>\n\t\tfunction clinkBtn(event) {\n\t\t\tconst target = event.target\n\t\t\tif (target.classList.contains('clipped-element1')) {\n\t\t\t\talert('未开始')\n\t\t\t} else if (target.classList.contains('clipped-element2')) {\n\t\t\t\talert('进行中')\n\t\t\t} else if (target.classList.contains('clipped-element3')) {\n\t\t\t\talert('已完成')\n\t\t\t}\n\t\t}\n\t</script>\n</html>\n```\n\n### 示例 2\n\n- 效果\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"UTF-8\" />\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\t<style>\n\t\t.imgError {\n\t\t\t\tbackground-color: #ededed;\n\t\t\tborder-radius: 10px;\n\t\t\t\tposition: relative;\n\t\t\twidth: 600px;\n\t\t\theight: 360px;\n\t\t\tmargin: 30px;\n\t\t\toverflow: hidden;\n\t\t}\n\t\t\t.clipped1, .clipped2 {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\t\tbackground-color: rgba(95, 74, 254, 0.283);\n\t\t\t\tmask: linear-gradient(to left, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0.2));\n\t\t\t}\n\t\t.clipped1 {\n\t\t\tclip-path: ellipse(33% 40% at 31.5% 110%);\n\t\t}\n\t\t.clipped2 {\n\t\t\tclip-path: ellipse(55% 60% at 96% 110%);\n\t\t}\n\t\t.clipped3 {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tbackground-color: rgb(249, 88, 70);\n\t\t\tclip-path: circle(45px at 30% 20%);\n\t\t\t\t/* mask: linear-gradient(to left, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0.8)); */\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div class=\"imgError\">\n\t\t<div class=\"clipped1\"></div>\n\t\t<div class=\"clipped2\"></div>\n\t\t<div class=\"clipped3\"></div>\n\t</div>\n</body>\n</html>\n\n- 代码\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\" />\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\t\t<style>\n\t\t\t.imgError {\n\t\t\t\tbackground-color: #ededed;\n\t\t\t\tborder-radius: 10px;\n\t\t\t\tposition: relative;\n\t\t\t\twidth: 600px;\n\t\t\t\theight: 360px;\n\t\t\t\tmargin: 30px;\n\t\t\t\toverflow: hidden;\n\t\t\t}\n\t\t\t.clipped1,\n\t\t\t.clipped2 {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\tbackground-color: rgba(95, 74, 254, 0.283);\n\t\t\t\tmask: linear-gradient(to left, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0.2));\n\t\t\t}\n\t\t\t.clipped1 {\n\t\t\t\tclip-path: ellipse(33% 40% at 31.5% 110%);\n\t\t\t}\n\t\t\t.clipped2 {\n\t\t\t\tclip-path: ellipse(55% 60% at 96% 110%);\n\t\t\t}\n\t\t\t.clipped3 {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\tbackground-color: rgb(249, 88, 70);\n\t\t\t\tclip-path: circle(45px at 30% 20%);\n\t\t\t\t/* mask: linear-gradient(to left, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0.8)); */\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div class=\"imgError\">\n\t\t\t<div class=\"clipped1\"></div>\n\t\t\t<div class=\"clipped2\"></div>\n\t\t\t<div class=\"clipped3\"></div>\n\t\t</div>\n\t</body>\n</html>\n```\n","slug":"css切割属性clip-path","published":1,"updated":"2025-09-13T08:09:15.105Z","_id":"cmel89pel001prwnchskq6kwe","comments":1,"layout":"post","photos":[],"content":"<h3 id=\"clip-path-属性切割图形\"><a href=\"#clip-path-属性切割图形\" class=\"headerlink\" title=\"clip-path 属性切割图形\"></a>clip-path 属性切割图形</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.clipped-element</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">232</span>, <span class=\"number\">53</span>, <span class=\"number\">53</span>);</span><br><span class=\"line\">\t<span class=\"comment\">/* 切割 clip-path */</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"attribute\">clip-path</span>: none | circle | ellipse | inset | polygon | <span class=\"built_in\">path</span>(<span class=\"string\">&#x27;d&#x27;</span>);</span><br><span class=\"line\">\t<span class=\"comment\">/* 1、默认值none, 不切割 */</span></span><br><span class=\"line\">\t<span class=\"attribute\">clip-path</span>: none;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/* 2、圆形 circle(radius at position) */</span></span><br><span class=\"line\">\t<span class=\"comment\">/* 默认 (以中心为圆心，元素短边的一半为半径)*/</span></span><br><span class=\"line\">\t<span class=\"attribute\">clip-path</span>: <span class=\"built_in\">circle</span>();</span><br><span class=\"line\">\t<span class=\"comment\">/* 切割一个以(10px, 30px)为圆心、半径为50px的圆，超出部分不可见，position的值：left、right、top、bottom、 x% y% 、x y */</span></span><br><span class=\"line\">\t<span class=\"attribute\">clip-path</span>: <span class=\"built_in\">circle</span>(<span class=\"number\">50px</span> at <span class=\"number\">10px</span> <span class=\"number\">30px</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/* 3、椭圆 ellipse(rx ry at position) */</span></span><br><span class=\"line\">\t<span class=\"attribute\">clip-path</span>: <span class=\"built_in\">ellipse</span>(</span><br><span class=\"line\"></span><br><span class=\"line\">\t); <span class=\"comment\">/* 默认切割一个椭圆(以中心为中心，元素的两边长各一半为x和y方向的半径) */</span></span><br><span class=\"line\">\t<span class=\"attribute\">clip-path</span>: <span class=\"built_in\">ellipse</span>(<span class=\"number\">50%</span> <span class=\"number\">50%</span> at left <span class=\"number\">50%</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/* 4、矩形 inset(top right bottom left round radius) */</span></span><br><span class=\"line\">\t<span class=\"attribute\">clip-path</span>: <span class=\"built_in\">inset</span>(<span class=\"number\">20px</span> <span class=\"number\">30px</span> <span class=\"number\">40px</span> <span class=\"number\">50px</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/* 5、多边形 polygon(x1 y1, x2 y2, ...)，x 和 y 分别是顶点的水平和垂直坐标，可以使用长度值或百分比 */</span></span><br><span class=\"line\">\t<span class=\"attribute\">clip-path</span>: <span class=\"built_in\">polygon</span>(<span class=\"number\">0</span> <span class=\"number\">0</span>, <span class=\"number\">50%</span> <span class=\"number\">0</span>, <span class=\"number\">100%</span> <span class=\"number\">30%</span>, <span class=\"number\">70%</span> <span class=\"number\">100%</span>, <span class=\"number\">0</span> <span class=\"number\">50%</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/* 6、path(&#x27;d&#x27;)，d 是 SVG 路径的描述字符串，使用 SVG 路径数据来创建剪切区域，灵活性更高，可以创建复杂的形状 */</span></span><br><span class=\"line\">\t<span class=\"attribute\">clip-path</span>: <span class=\"built_in\">path</span>(</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;M140 20C73 20 20 74 20 140c0 135 136 170 228 303 88-132 229-173 229-303 0-66-54-120-120-120-48 0-90 28-109 69-19-41-60-69-108-69z&#x27;</span></span><br><span class=\"line\">\t);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"示例-1\"><a href=\"#示例-1\" class=\"headerlink\" title=\"示例 1\"></a>示例 1</h3><ul>\n<li>效果<!DOCTYPE html></li>\n</ul>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"UTF-8\" />\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\t<style>\n\t\t:root {\n\t\t\t--clicp-width: 50px; /* 剪切区域宽度 */\n\t\t\t--elem-padding: 10px; /* 元素内边距 */\n\t\t\t--active-bg-color: #6f3ce7;\n\t\t}\n\t\t.clippedBox {\n\t\t\tdisplay: flex;\n\t\t\tposition: relative;\n\t\t\tmargin: 30px;\n\t\t}\n\t\t.clipped-element1,\n\t\t.clipped-element2,\n\t\t.clipped-element3 {\n\t\t\twidth: 260px;\n\t\t\theight: 70px;\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tbox-sizing: border-box;\n\t\t\tbackground-color: #999;\n\t\t\tposition: relative;\n\t\t\tcolor: white;\n\t\t\tfont-weight: bold;\n\t\t\tjustify-content: center;\n\t\t}\n\t\t/* 内边距 */\n\t\t.clipped-element1 {\n\t\t\tpadding: 0 calc(var(--elem-padding) + var(--clicp-width)) 0 var(--elem-padding);\n\t\t}\n\t\t.clipped-element2 {\n\t\t\tmargin: 0 calc(calc(var(--clicp-width) - 10px) * -1);\n\t\t\tpadding: 0 calc(var(--elem-padding) + var(--clicp-width));\n\t\t}\n\t\t.clipped-element3 {\n\t\t\tpadding: 0 var(--elem-padding) 0 calc(var(--elem-padding) + var(--clicp-width));\n\t\t}\n\t\t/* 第一个元素 */\n\t\t.clipped-element1 {\n\t\t\tborder-radius: 10px 0 0 10px;\n\t\t\tclip-path: polygon(\n\t\t\t\t0 0,\n\t\t\t\tcalc(100% - var(--clicp-width)) 0,\n\t\t\t\t100% 50%,\n\t\t\t\tcalc(100% - var(--clicp-width)) 100%,\n\t\t\t\t0 100%\n\t\t\t);\n\t\t}\n\t\t/* 第二个元素 */\n\t\t.clipped-element2 {\n\t\t\tclip-path: polygon(\n\t\t\t\t0 0,\n\t\t\t\tcalc(100% - var(--clicp-width)) 0,\n\t\t\t\t100% 50%,\n\t\t\t\tcalc(100% - var(--clicp-width)) 100%,\n\t\t\t\t0 100%,\n\t\t\t\tvar(--clicp-width) 50%\n\t\t\t);\n\t\t}\n\t\t/* 第三个元素 */\n\t\t.clipped-element3 {\n\t\t\tborder-radius: 0 10px 10px 0;\n\t\t\tclip-path: polygon(\n\t\t\t\t0 0,\n\t\t\t\t100% 0,\n\t\t\t\t100% 100%,\n\t\t\t\t0 100%,\n\t\t\t\tvar(--clicp-width) 50%\n\t\t\t);\n\t\t}\n\t\t/* 添加悬停效果 */\n\t\t.clipped-element1:hover,\n\t\t.clipped-element2:hover,\n\t\t.clipped-element3:hover {\n\t\t\tbackground-color: var(--active-bg-color);\n\t\t\ttransform: scale(1.02);\n\t\t\ttransition: all 0.3s ease;\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div class=\"clippedBox\">\n\t\t<div class=\"clipped-element1\" onclick=\"clinkBtn(event)\">未开始</div>\n\t\t<div class=\"clipped-element2\" onclick=\"clinkBtn(event)\">进行中</div>\n\t\t<div class=\"clipped-element3\" onclick=\"clinkBtn(event)\">已完成</div>\n\t</div>\n</body>\n<script>\n\tfunction clinkBtn(event) {\n\t\tconst target = event.target\n\t\tif (target.classList.contains('clipped-element1')) {\n\t\t\talert('未开始')\n\t\t} else if (target.classList.contains('clipped-element2')) {\n\t\t\talert('进行中')\n\t\t} else if (target.classList.contains('clipped-element3')) {\n\t\t\talert('已完成')\n\t\t}\n\t}\n</script>\n</html>\n\n<ul>\n<li>代码</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-pseudo\">:root</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attr\">--clicp-width</span>: <span class=\"number\">50px</span>; <span class=\"comment\">/* 剪切区域宽度 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attr\">--elem-padding</span>: <span class=\"number\">10px</span>; <span class=\"comment\">/* 元素内边距 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attr\">--active-bg-color</span>: <span class=\"number\">#6f3ce7</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clippedBox</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">position</span>: relative;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped-element1</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped-element2</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped-element3</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">260px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">70px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">align-items</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">box-sizing</span>: border-box;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-color</span>: <span class=\"number\">#999</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">position</span>: relative;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">font-weight</span>: bold;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">justify-content</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"comment\">/* 内边距 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped-element1</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"built_in\">calc</span>(<span class=\"built_in\">var</span>(--elem-padding) + <span class=\"built_in\">var</span>(--clicp-width)) <span class=\"number\">0</span> <span class=\"built_in\">var</span>(</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t\t--elem-padding</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t);</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped-element2</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">0</span> <span class=\"built_in\">calc</span>(<span class=\"built_in\">calc</span>(<span class=\"built_in\">var</span>(--clicp-width) - <span class=\"number\">10px</span>) * -<span class=\"number\">1</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"built_in\">calc</span>(<span class=\"built_in\">var</span>(--elem-padding) + <span class=\"built_in\">var</span>(--clicp-width));</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped-element3</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"built_in\">var</span>(--elem-padding) <span class=\"number\">0</span> <span class=\"built_in\">calc</span>(</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t\t<span class=\"built_in\">var</span>(--elem-padding) + <span class=\"built_in\">var</span>(--clicp-width)</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t);</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"comment\">/* 第一个元素 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped-element1</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">clip-path</span>: <span class=\"built_in\">polygon</span>(</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"number\">0</span> <span class=\"number\">0</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"built_in\">calc</span>(<span class=\"number\">100%</span> - <span class=\"built_in\">var</span>(--clicp-width)) <span class=\"number\">0</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"number\">100%</span> <span class=\"number\">50%</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"built_in\">calc</span>(<span class=\"number\">100%</span> - <span class=\"built_in\">var</span>(--clicp-width)) <span class=\"number\">100%</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"number\">0</span> <span class=\"number\">100%</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t);</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"comment\">/* 第二个元素 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped-element2</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">clip-path</span>: <span class=\"built_in\">polygon</span>(</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"number\">0</span> <span class=\"number\">0</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"built_in\">calc</span>(<span class=\"number\">100%</span> - <span class=\"built_in\">var</span>(--clicp-width)) <span class=\"number\">0</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"number\">100%</span> <span class=\"number\">50%</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"built_in\">calc</span>(<span class=\"number\">100%</span> - <span class=\"built_in\">var</span>(--clicp-width)) <span class=\"number\">100%</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"number\">0</span> <span class=\"number\">100%</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"built_in\">var</span>(--clicp-width) <span class=\"number\">50%</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t);</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"comment\">/* 第三个元素 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped-element3</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border-radius</span>: <span class=\"number\">0</span> <span class=\"number\">10px</span> <span class=\"number\">10px</span> <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">clip-path</span>: <span class=\"built_in\">polygon</span>(</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"number\">0</span> <span class=\"number\">0</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"number\">100%</span> <span class=\"number\">0</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"number\">100%</span> <span class=\"number\">100%</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"number\">0</span> <span class=\"number\">100%</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"built_in\">var</span>(--clicp-width) <span class=\"number\">50%</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t);</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"comment\">/* 添加悬停效果 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped-element1</span><span class=\"selector-pseudo\">:hover</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped-element2</span><span class=\"selector-pseudo\">:hover</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped-element3</span><span class=\"selector-pseudo\">:hover</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-color</span>: <span class=\"built_in\">var</span>(--active-bg-color);</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">transform</span>: <span class=\"built_in\">scale</span>(<span class=\"number\">1.02</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">transition</span>: all <span class=\"number\">0.3s</span> ease;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;clippedBox&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;clipped-element1&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;clinkBtn(event)&quot;</span>&gt;</span>未开始<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;clipped-element2&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;clinkBtn(event)&quot;</span>&gt;</span>进行中<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;clipped-element3&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;clinkBtn(event)&quot;</span>&gt;</span>已完成<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"keyword\">function</span> <span class=\"title function_\">clinkBtn</span>(<span class=\"params\">event</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">const</span> target = event.<span class=\"property\">target</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">if</span> (target.<span class=\"property\">classList</span>.<span class=\"title function_\">contains</span>(<span class=\"string\">&#x27;clipped-element1&#x27;</span>)) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;未开始&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (target.<span class=\"property\">classList</span>.<span class=\"title function_\">contains</span>(<span class=\"string\">&#x27;clipped-element2&#x27;</span>)) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;进行中&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (target.<span class=\"property\">classList</span>.<span class=\"title function_\">contains</span>(<span class=\"string\">&#x27;clipped-element3&#x27;</span>)) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;已完成&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"示例-2\"><a href=\"#示例-2\" class=\"headerlink\" title=\"示例 2\"></a>示例 2</h3><ul>\n<li>效果<!DOCTYPE html></li>\n</ul>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"UTF-8\" />\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\t<style>\n\t\t.imgError {\n\t\t\t\tbackground-color: #ededed;\n\t\t\tborder-radius: 10px;\n\t\t\t\tposition: relative;\n\t\t\twidth: 600px;\n\t\t\theight: 360px;\n\t\t\tmargin: 30px;\n\t\t\toverflow: hidden;\n\t\t}\n\t\t\t.clipped1, .clipped2 {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\t\tbackground-color: rgba(95, 74, 254, 0.283);\n\t\t\t\tmask: linear-gradient(to left, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0.2));\n\t\t\t}\n\t\t.clipped1 {\n\t\t\tclip-path: ellipse(33% 40% at 31.5% 110%);\n\t\t}\n\t\t.clipped2 {\n\t\t\tclip-path: ellipse(55% 60% at 96% 110%);\n\t\t}\n\t\t.clipped3 {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tbackground-color: rgb(249, 88, 70);\n\t\t\tclip-path: circle(45px at 30% 20%);\n\t\t\t\t/* mask: linear-gradient(to left, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0.8)); */\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div class=\"imgError\">\n\t\t<div class=\"clipped1\"></div>\n\t\t<div class=\"clipped2\"></div>\n\t\t<div class=\"clipped3\"></div>\n\t</div>\n</body>\n</html>\n\n<ul>\n<li>代码</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.imgError</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-color</span>: <span class=\"number\">#ededed</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">position</span>: relative;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">600px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">360px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">overflow</span>: hidden;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped1</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped2</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">95</span>, <span class=\"number\">74</span>, <span class=\"number\">254</span>, <span class=\"number\">0.283</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">mask</span>: <span class=\"built_in\">linear-gradient</span>(to left, <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>), <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.2</span>));</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped1</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">clip-path</span>: <span class=\"built_in\">ellipse</span>(<span class=\"number\">33%</span> <span class=\"number\">40%</span> at <span class=\"number\">31.5%</span> <span class=\"number\">110%</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped2</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">clip-path</span>: <span class=\"built_in\">ellipse</span>(<span class=\"number\">55%</span> <span class=\"number\">60%</span> at <span class=\"number\">96%</span> <span class=\"number\">110%</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped3</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">249</span>, <span class=\"number\">88</span>, <span class=\"number\">70</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">clip-path</span>: <span class=\"built_in\">circle</span>(<span class=\"number\">45px</span> at <span class=\"number\">30%</span> <span class=\"number\">20%</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"comment\">/* mask: linear-gradient(to left, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0.8)); */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;imgError&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;clipped1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;clipped2&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;clipped3&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h3 id=\"clip-path-属性切割图形\"><a href=\"#clip-path-属性切割图形\" class=\"headerlink\" title=\"clip-path 属性切割图形\"></a>clip-path 属性切割图形</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.clipped-element</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">232</span>, <span class=\"number\">53</span>, <span class=\"number\">53</span>);</span><br><span class=\"line\">\t<span class=\"comment\">/* 切割 clip-path */</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"attribute\">clip-path</span>: none | circle | ellipse | inset | polygon | <span class=\"built_in\">path</span>(<span class=\"string\">&#x27;d&#x27;</span>);</span><br><span class=\"line\">\t<span class=\"comment\">/* 1、默认值none, 不切割 */</span></span><br><span class=\"line\">\t<span class=\"attribute\">clip-path</span>: none;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/* 2、圆形 circle(radius at position) */</span></span><br><span class=\"line\">\t<span class=\"comment\">/* 默认 (以中心为圆心，元素短边的一半为半径)*/</span></span><br><span class=\"line\">\t<span class=\"attribute\">clip-path</span>: <span class=\"built_in\">circle</span>();</span><br><span class=\"line\">\t<span class=\"comment\">/* 切割一个以(10px, 30px)为圆心、半径为50px的圆，超出部分不可见，position的值：left、right、top、bottom、 x% y% 、x y */</span></span><br><span class=\"line\">\t<span class=\"attribute\">clip-path</span>: <span class=\"built_in\">circle</span>(<span class=\"number\">50px</span> at <span class=\"number\">10px</span> <span class=\"number\">30px</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/* 3、椭圆 ellipse(rx ry at position) */</span></span><br><span class=\"line\">\t<span class=\"attribute\">clip-path</span>: <span class=\"built_in\">ellipse</span>(</span><br><span class=\"line\"></span><br><span class=\"line\">\t); <span class=\"comment\">/* 默认切割一个椭圆(以中心为中心，元素的两边长各一半为x和y方向的半径) */</span></span><br><span class=\"line\">\t<span class=\"attribute\">clip-path</span>: <span class=\"built_in\">ellipse</span>(<span class=\"number\">50%</span> <span class=\"number\">50%</span> at left <span class=\"number\">50%</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/* 4、矩形 inset(top right bottom left round radius) */</span></span><br><span class=\"line\">\t<span class=\"attribute\">clip-path</span>: <span class=\"built_in\">inset</span>(<span class=\"number\">20px</span> <span class=\"number\">30px</span> <span class=\"number\">40px</span> <span class=\"number\">50px</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/* 5、多边形 polygon(x1 y1, x2 y2, ...)，x 和 y 分别是顶点的水平和垂直坐标，可以使用长度值或百分比 */</span></span><br><span class=\"line\">\t<span class=\"attribute\">clip-path</span>: <span class=\"built_in\">polygon</span>(<span class=\"number\">0</span> <span class=\"number\">0</span>, <span class=\"number\">50%</span> <span class=\"number\">0</span>, <span class=\"number\">100%</span> <span class=\"number\">30%</span>, <span class=\"number\">70%</span> <span class=\"number\">100%</span>, <span class=\"number\">0</span> <span class=\"number\">50%</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/* 6、path(&#x27;d&#x27;)，d 是 SVG 路径的描述字符串，使用 SVG 路径数据来创建剪切区域，灵活性更高，可以创建复杂的形状 */</span></span><br><span class=\"line\">\t<span class=\"attribute\">clip-path</span>: <span class=\"built_in\">path</span>(</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;M140 20C73 20 20 74 20 140c0 135 136 170 228 303 88-132 229-173 229-303 0-66-54-120-120-120-48 0-90 28-109 69-19-41-60-69-108-69z&#x27;</span></span><br><span class=\"line\">\t);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"示例-1\"><a href=\"#示例-1\" class=\"headerlink\" title=\"示例 1\"></a>示例 1</h3><ul>\n<li>效果<!DOCTYPE html></li>\n</ul>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"UTF-8\" />\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\t<style>\n\t\t:root {\n\t\t\t--clicp-width: 50px; /* 剪切区域宽度 */\n\t\t\t--elem-padding: 10px; /* 元素内边距 */\n\t\t\t--active-bg-color: #6f3ce7;\n\t\t}\n\t\t.clippedBox {\n\t\t\tdisplay: flex;\n\t\t\tposition: relative;\n\t\t\tmargin: 30px;\n\t\t}\n\t\t.clipped-element1,\n\t\t.clipped-element2,\n\t\t.clipped-element3 {\n\t\t\twidth: 260px;\n\t\t\theight: 70px;\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tbox-sizing: border-box;\n\t\t\tbackground-color: #999;\n\t\t\tposition: relative;\n\t\t\tcolor: white;\n\t\t\tfont-weight: bold;\n\t\t\tjustify-content: center;\n\t\t}\n\t\t/* 内边距 */\n\t\t.clipped-element1 {\n\t\t\tpadding: 0 calc(var(--elem-padding) + var(--clicp-width)) 0 var(--elem-padding);\n\t\t}\n\t\t.clipped-element2 {\n\t\t\tmargin: 0 calc(calc(var(--clicp-width) - 10px) * -1);\n\t\t\tpadding: 0 calc(var(--elem-padding) + var(--clicp-width));\n\t\t}\n\t\t.clipped-element3 {\n\t\t\tpadding: 0 var(--elem-padding) 0 calc(var(--elem-padding) + var(--clicp-width));\n\t\t}\n\t\t/* 第一个元素 */\n\t\t.clipped-element1 {\n\t\t\tborder-radius: 10px 0 0 10px;\n\t\t\tclip-path: polygon(\n\t\t\t\t0 0,\n\t\t\t\tcalc(100% - var(--clicp-width)) 0,\n\t\t\t\t100% 50%,\n\t\t\t\tcalc(100% - var(--clicp-width)) 100%,\n\t\t\t\t0 100%\n\t\t\t);\n\t\t}\n\t\t/* 第二个元素 */\n\t\t.clipped-element2 {\n\t\t\tclip-path: polygon(\n\t\t\t\t0 0,\n\t\t\t\tcalc(100% - var(--clicp-width)) 0,\n\t\t\t\t100% 50%,\n\t\t\t\tcalc(100% - var(--clicp-width)) 100%,\n\t\t\t\t0 100%,\n\t\t\t\tvar(--clicp-width) 50%\n\t\t\t);\n\t\t}\n\t\t/* 第三个元素 */\n\t\t.clipped-element3 {\n\t\t\tborder-radius: 0 10px 10px 0;\n\t\t\tclip-path: polygon(\n\t\t\t\t0 0,\n\t\t\t\t100% 0,\n\t\t\t\t100% 100%,\n\t\t\t\t0 100%,\n\t\t\t\tvar(--clicp-width) 50%\n\t\t\t);\n\t\t}\n\t\t/* 添加悬停效果 */\n\t\t.clipped-element1:hover,\n\t\t.clipped-element2:hover,\n\t\t.clipped-element3:hover {\n\t\t\tbackground-color: var(--active-bg-color);\n\t\t\ttransform: scale(1.02);\n\t\t\ttransition: all 0.3s ease;\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div class=\"clippedBox\">\n\t\t<div class=\"clipped-element1\" onclick=\"clinkBtn(event)\">未开始</div>\n\t\t<div class=\"clipped-element2\" onclick=\"clinkBtn(event)\">进行中</div>\n\t\t<div class=\"clipped-element3\" onclick=\"clinkBtn(event)\">已完成</div>\n\t</div>\n</body>\n<script>\n\tfunction clinkBtn(event) {\n\t\tconst target = event.target\n\t\tif (target.classList.contains('clipped-element1')) {\n\t\t\talert('未开始')\n\t\t} else if (target.classList.contains('clipped-element2')) {\n\t\t\talert('进行中')\n\t\t} else if (target.classList.contains('clipped-element3')) {\n\t\t\talert('已完成')\n\t\t}\n\t}\n</script>\n</html>\n\n<ul>\n<li>代码</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-pseudo\">:root</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attr\">--clicp-width</span>: <span class=\"number\">50px</span>; <span class=\"comment\">/* 剪切区域宽度 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attr\">--elem-padding</span>: <span class=\"number\">10px</span>; <span class=\"comment\">/* 元素内边距 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attr\">--active-bg-color</span>: <span class=\"number\">#6f3ce7</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clippedBox</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">position</span>: relative;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped-element1</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped-element2</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped-element3</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">260px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">70px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">align-items</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">box-sizing</span>: border-box;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-color</span>: <span class=\"number\">#999</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">position</span>: relative;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">font-weight</span>: bold;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">justify-content</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"comment\">/* 内边距 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped-element1</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"built_in\">calc</span>(<span class=\"built_in\">var</span>(--elem-padding) + <span class=\"built_in\">var</span>(--clicp-width)) <span class=\"number\">0</span> <span class=\"built_in\">var</span>(</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t\t--elem-padding</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t);</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped-element2</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">0</span> <span class=\"built_in\">calc</span>(<span class=\"built_in\">calc</span>(<span class=\"built_in\">var</span>(--clicp-width) - <span class=\"number\">10px</span>) * -<span class=\"number\">1</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"built_in\">calc</span>(<span class=\"built_in\">var</span>(--elem-padding) + <span class=\"built_in\">var</span>(--clicp-width));</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped-element3</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"built_in\">var</span>(--elem-padding) <span class=\"number\">0</span> <span class=\"built_in\">calc</span>(</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t\t<span class=\"built_in\">var</span>(--elem-padding) + <span class=\"built_in\">var</span>(--clicp-width)</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t);</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"comment\">/* 第一个元素 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped-element1</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">clip-path</span>: <span class=\"built_in\">polygon</span>(</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"number\">0</span> <span class=\"number\">0</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"built_in\">calc</span>(<span class=\"number\">100%</span> - <span class=\"built_in\">var</span>(--clicp-width)) <span class=\"number\">0</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"number\">100%</span> <span class=\"number\">50%</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"built_in\">calc</span>(<span class=\"number\">100%</span> - <span class=\"built_in\">var</span>(--clicp-width)) <span class=\"number\">100%</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"number\">0</span> <span class=\"number\">100%</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t);</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"comment\">/* 第二个元素 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped-element2</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">clip-path</span>: <span class=\"built_in\">polygon</span>(</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"number\">0</span> <span class=\"number\">0</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"built_in\">calc</span>(<span class=\"number\">100%</span> - <span class=\"built_in\">var</span>(--clicp-width)) <span class=\"number\">0</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"number\">100%</span> <span class=\"number\">50%</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"built_in\">calc</span>(<span class=\"number\">100%</span> - <span class=\"built_in\">var</span>(--clicp-width)) <span class=\"number\">100%</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"number\">0</span> <span class=\"number\">100%</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"built_in\">var</span>(--clicp-width) <span class=\"number\">50%</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t);</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"comment\">/* 第三个元素 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped-element3</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border-radius</span>: <span class=\"number\">0</span> <span class=\"number\">10px</span> <span class=\"number\">10px</span> <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">clip-path</span>: <span class=\"built_in\">polygon</span>(</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"number\">0</span> <span class=\"number\">0</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"number\">100%</span> <span class=\"number\">0</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"number\">100%</span> <span class=\"number\">100%</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"number\">0</span> <span class=\"number\">100%</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t\t<span class=\"built_in\">var</span>(--clicp-width) <span class=\"number\">50%</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t);</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"comment\">/* 添加悬停效果 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped-element1</span><span class=\"selector-pseudo\">:hover</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped-element2</span><span class=\"selector-pseudo\">:hover</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped-element3</span><span class=\"selector-pseudo\">:hover</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-color</span>: <span class=\"built_in\">var</span>(--active-bg-color);</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">transform</span>: <span class=\"built_in\">scale</span>(<span class=\"number\">1.02</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">transition</span>: all <span class=\"number\">0.3s</span> ease;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;clippedBox&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;clipped-element1&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;clinkBtn(event)&quot;</span>&gt;</span>未开始<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;clipped-element2&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;clinkBtn(event)&quot;</span>&gt;</span>进行中<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;clipped-element3&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;clinkBtn(event)&quot;</span>&gt;</span>已完成<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"keyword\">function</span> <span class=\"title function_\">clinkBtn</span>(<span class=\"params\">event</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">const</span> target = event.<span class=\"property\">target</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">if</span> (target.<span class=\"property\">classList</span>.<span class=\"title function_\">contains</span>(<span class=\"string\">&#x27;clipped-element1&#x27;</span>)) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;未开始&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (target.<span class=\"property\">classList</span>.<span class=\"title function_\">contains</span>(<span class=\"string\">&#x27;clipped-element2&#x27;</span>)) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;进行中&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (target.<span class=\"property\">classList</span>.<span class=\"title function_\">contains</span>(<span class=\"string\">&#x27;clipped-element3&#x27;</span>)) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;已完成&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"示例-2\"><a href=\"#示例-2\" class=\"headerlink\" title=\"示例 2\"></a>示例 2</h3><ul>\n<li>效果<!DOCTYPE html></li>\n</ul>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"UTF-8\" />\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\t<style>\n\t\t.imgError {\n\t\t\t\tbackground-color: #ededed;\n\t\t\tborder-radius: 10px;\n\t\t\t\tposition: relative;\n\t\t\twidth: 600px;\n\t\t\theight: 360px;\n\t\t\tmargin: 30px;\n\t\t\toverflow: hidden;\n\t\t}\n\t\t\t.clipped1, .clipped2 {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\t\tbackground-color: rgba(95, 74, 254, 0.283);\n\t\t\t\tmask: linear-gradient(to left, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0.2));\n\t\t\t}\n\t\t.clipped1 {\n\t\t\tclip-path: ellipse(33% 40% at 31.5% 110%);\n\t\t}\n\t\t.clipped2 {\n\t\t\tclip-path: ellipse(55% 60% at 96% 110%);\n\t\t}\n\t\t.clipped3 {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tbackground-color: rgb(249, 88, 70);\n\t\t\tclip-path: circle(45px at 30% 20%);\n\t\t\t\t/* mask: linear-gradient(to left, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0.8)); */\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div class=\"imgError\">\n\t\t<div class=\"clipped1\"></div>\n\t\t<div class=\"clipped2\"></div>\n\t\t<div class=\"clipped3\"></div>\n\t</div>\n</body>\n</html>\n\n<ul>\n<li>代码</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.imgError</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-color</span>: <span class=\"number\">#ededed</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">position</span>: relative;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">600px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">360px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">overflow</span>: hidden;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped1</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped2</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">95</span>, <span class=\"number\">74</span>, <span class=\"number\">254</span>, <span class=\"number\">0.283</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">mask</span>: <span class=\"built_in\">linear-gradient</span>(to left, <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>), <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.2</span>));</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped1</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">clip-path</span>: <span class=\"built_in\">ellipse</span>(<span class=\"number\">33%</span> <span class=\"number\">40%</span> at <span class=\"number\">31.5%</span> <span class=\"number\">110%</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped2</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">clip-path</span>: <span class=\"built_in\">ellipse</span>(<span class=\"number\">55%</span> <span class=\"number\">60%</span> at <span class=\"number\">96%</span> <span class=\"number\">110%</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.clipped3</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">249</span>, <span class=\"number\">88</span>, <span class=\"number\">70</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">clip-path</span>: <span class=\"built_in\">circle</span>(<span class=\"number\">45px</span> at <span class=\"number\">30%</span> <span class=\"number\">20%</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"comment\">/* mask: linear-gradient(to left, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0.8)); */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;imgError&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;clipped1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;clipped2&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;clipped3&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n"},{"title":"接入Google地图","date":"2025-07-30T03:25:50.000Z","cover":"/images/接入Google地图/cover.jpg","_content":"\n### 准备工作\n\n- Google API 秘钥\n\n- 地址信息：经纬度、地点名称等\n\n### [获取 Google API 密钥](https://developers.google.com/maps/documentation/javascript/add-google-map-wc-tut?hl=zh-cn#key)\n\n- 前往 [Google Cloud 控制台](https://console.cloud.google.com/projectselector2/google/maps-apis/overview)。\n\n- 创建或选择一个项目。\n\n- 点击继续，启用 API 和任何相关服务。\n\n- 在凭据页面上，获取 API 密钥（并设置 API 密钥限制）。注意：如果您已有不受限的 API 密钥或存在浏览器限制的密钥，可以使用相应密钥。\n\n- 如需防止配额盗用并保护 API 密钥，请参阅[使用 API 密钥](https://cloud.google.com/docs/authentication/api-keys?hl=zh-cn)。\n\n- 启用结算功能。如需了解详情，请参阅[用量和结算](https://developers.google.com/maps/documentation/javascript/usage-and-billing?hl=zh-cn&utm_source=devtools&utm_campaign=stable)。\n\n- 现在，您可以使用 API 密钥了。\n\n### 接入 Google 地图\n\n- [获取经纬度](https://www.google.com.hk/maps)\n\n  - 在地图上搜索地名，导航栏上会出现地名所在的经纬度\n    ![](/images/接入Google地图/latlng.png)\n\n- vue 项目接入 Google 地图\n\n  - 下载依赖：\n\n  ```bash\n    npm install @googlemaps/js-api-loader\n  ```\n\n  - 新建 GoogleMaps.vue 文件\n\n  ```html\n  <template>\n  \t<div id=\"myMap\" class=\"bg-#ccc w-full h-full\"></div>\n  </template>\n\n  <script setup>\n  \timport { onMounted, ref } from 'vue'\n  \timport { Loader } from '@googlemaps/js-api-loader'\n\n  \tonMounted(async () => {\n  \t\tconst loader = new Loader({\n  \t\t\tapiKey: 'AIzaSyDGp6YYslhnooIC1iEoVC0_QBmlJIxS2OQ', // Google Maps API 密钥\n  \t\t\tversion: 'weekly',\n  \t\t\tlibraries: [],\n  \t\t})\n\n  \t\ttry {\n  \t\t\tawait loader.load()\n  \t\t\tconst title = '清华大学'\n  \t\t\t// 位置坐标\n  \t\t\tconst myLatLng = { lat: 39.9389436, lng: 116.0678214 }\n  \t\t\t// 1、创建地图\n  \t\t\tconst theMap = await new google.maps.Map(\n  \t\t\t\tdocument.getElementById('myMap'),\n  \t\t\t\t{\n  \t\t\t\t\tzoom: 10, // 缩放级别，0全球视野—21建筑物级别\n  \t\t\t\t\tcenter: myLatLng, // 地图中心点的经纬度\n  \t\t\t\t\tmapId: 'XXXX_MAP_ID',\n  \t\t\t\t\tmaptype: 'satellite', // 地图类型: roadmap 标准道路地图、satellite 卫星图、terrain 地形图、hybrid混合图(卫星图像+道路标签)\n  \t\t\t\t}\n  \t\t\t)\n  \t\t\t// 2、添加地点标记\n  \t\t\tconst marker = await new google.maps.Marker({\n  \t\t\t\tmap: theMap,\n  \t\t\t\tposition: myLatLng,\n  \t\t\t\ttitle: title, // icon: \"path/to/custom-icon.png\", // 可选自定义图标\n  \t\t\t})\n  \t\t\t// 3、添加信息窗口\n  \t\t\tconst infoBox = await new google.maps.InfoWindow({\n  \t\t\t\tcontent: `\n                      <h3 style=\"line-height: 1;margin: 0 0 10px;padding: 0;\">清华大学</h3>\n                      <p>北京市海淀区清华园</p>\n                      <p>中华人民共和国教育部直属的全国重点大学，中央直管高校</p>\n                      <p>\"自强不息、厚德载物\"</p>\n                  `,\n  \t\t\t\tmaxWidth: 400,\n  \t\t\t})\n  \t\t\tmarker.addListener('click', () => {\n  \t\t\t\tinfoBox.open(theMap, marker)\n  \t\t\t})\n  \t\t} catch (error) {\n  \t\t\tconsole.error('加载Google地图 API 时出错:', error)\n  \t\t}\n  \t})\n  </script>\n  ```\n\n  - 使用：\n\n  ```html\n  <div class=\"w-full h-50vh max-h-500px\">\n  \t<GoogleMaps />\n  </div>\n  ```\n\n  - 效果图：\n\n    ![](/images/接入Google地图/maps.png)\n\n  - 【Tips】如上效果图有水印，其实 Google 地图已经使用成功了，只是 Google API 秘钥未正确使用(需要结算付款的...)\n","source":"_posts/2025-07-30-接入Google地图.md","raw":"---\ntitle: 接入Google地图\ndate: 2025-07-30 11:25:50\ntags: Google Maps\ncover: /images/接入Google地图/cover.jpg # 封面图\n---\n\n### 准备工作\n\n- Google API 秘钥\n\n- 地址信息：经纬度、地点名称等\n\n### [获取 Google API 密钥](https://developers.google.com/maps/documentation/javascript/add-google-map-wc-tut?hl=zh-cn#key)\n\n- 前往 [Google Cloud 控制台](https://console.cloud.google.com/projectselector2/google/maps-apis/overview)。\n\n- 创建或选择一个项目。\n\n- 点击继续，启用 API 和任何相关服务。\n\n- 在凭据页面上，获取 API 密钥（并设置 API 密钥限制）。注意：如果您已有不受限的 API 密钥或存在浏览器限制的密钥，可以使用相应密钥。\n\n- 如需防止配额盗用并保护 API 密钥，请参阅[使用 API 密钥](https://cloud.google.com/docs/authentication/api-keys?hl=zh-cn)。\n\n- 启用结算功能。如需了解详情，请参阅[用量和结算](https://developers.google.com/maps/documentation/javascript/usage-and-billing?hl=zh-cn&utm_source=devtools&utm_campaign=stable)。\n\n- 现在，您可以使用 API 密钥了。\n\n### 接入 Google 地图\n\n- [获取经纬度](https://www.google.com.hk/maps)\n\n  - 在地图上搜索地名，导航栏上会出现地名所在的经纬度\n    ![](/images/接入Google地图/latlng.png)\n\n- vue 项目接入 Google 地图\n\n  - 下载依赖：\n\n  ```bash\n    npm install @googlemaps/js-api-loader\n  ```\n\n  - 新建 GoogleMaps.vue 文件\n\n  ```html\n  <template>\n  \t<div id=\"myMap\" class=\"bg-#ccc w-full h-full\"></div>\n  </template>\n\n  <script setup>\n  \timport { onMounted, ref } from 'vue'\n  \timport { Loader } from '@googlemaps/js-api-loader'\n\n  \tonMounted(async () => {\n  \t\tconst loader = new Loader({\n  \t\t\tapiKey: 'AIzaSyDGp6YYslhnooIC1iEoVC0_QBmlJIxS2OQ', // Google Maps API 密钥\n  \t\t\tversion: 'weekly',\n  \t\t\tlibraries: [],\n  \t\t})\n\n  \t\ttry {\n  \t\t\tawait loader.load()\n  \t\t\tconst title = '清华大学'\n  \t\t\t// 位置坐标\n  \t\t\tconst myLatLng = { lat: 39.9389436, lng: 116.0678214 }\n  \t\t\t// 1、创建地图\n  \t\t\tconst theMap = await new google.maps.Map(\n  \t\t\t\tdocument.getElementById('myMap'),\n  \t\t\t\t{\n  \t\t\t\t\tzoom: 10, // 缩放级别，0全球视野—21建筑物级别\n  \t\t\t\t\tcenter: myLatLng, // 地图中心点的经纬度\n  \t\t\t\t\tmapId: 'XXXX_MAP_ID',\n  \t\t\t\t\tmaptype: 'satellite', // 地图类型: roadmap 标准道路地图、satellite 卫星图、terrain 地形图、hybrid混合图(卫星图像+道路标签)\n  \t\t\t\t}\n  \t\t\t)\n  \t\t\t// 2、添加地点标记\n  \t\t\tconst marker = await new google.maps.Marker({\n  \t\t\t\tmap: theMap,\n  \t\t\t\tposition: myLatLng,\n  \t\t\t\ttitle: title, // icon: \"path/to/custom-icon.png\", // 可选自定义图标\n  \t\t\t})\n  \t\t\t// 3、添加信息窗口\n  \t\t\tconst infoBox = await new google.maps.InfoWindow({\n  \t\t\t\tcontent: `\n                      <h3 style=\"line-height: 1;margin: 0 0 10px;padding: 0;\">清华大学</h3>\n                      <p>北京市海淀区清华园</p>\n                      <p>中华人民共和国教育部直属的全国重点大学，中央直管高校</p>\n                      <p>\"自强不息、厚德载物\"</p>\n                  `,\n  \t\t\t\tmaxWidth: 400,\n  \t\t\t})\n  \t\t\tmarker.addListener('click', () => {\n  \t\t\t\tinfoBox.open(theMap, marker)\n  \t\t\t})\n  \t\t} catch (error) {\n  \t\t\tconsole.error('加载Google地图 API 时出错:', error)\n  \t\t}\n  \t})\n  </script>\n  ```\n\n  - 使用：\n\n  ```html\n  <div class=\"w-full h-50vh max-h-500px\">\n  \t<GoogleMaps />\n  </div>\n  ```\n\n  - 效果图：\n\n    ![](/images/接入Google地图/maps.png)\n\n  - 【Tips】如上效果图有水印，其实 Google 地图已经使用成功了，只是 Google API 秘钥未正确使用(需要结算付款的...)\n","slug":"接入Google地图","published":1,"updated":"2025-09-13T08:09:15.105Z","_id":"cmel89pen001rrwnc4whufcai","comments":1,"layout":"post","photos":[],"content":"<h3 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h3><ul>\n<li><p>Google API 秘钥</p>\n</li>\n<li><p>地址信息：经纬度、地点名称等</p>\n</li>\n</ul>\n<h3 id=\"获取-Google-API-密钥\"><a href=\"#获取-Google-API-密钥\" class=\"headerlink\" title=\"获取 Google API 密钥\"></a><a href=\"https://developers.google.com/maps/documentation/javascript/add-google-map-wc-tut?hl=zh-cn#key\">获取 Google API 密钥</a></h3><ul>\n<li><p>前往 <a href=\"https://console.cloud.google.com/projectselector2/google/maps-apis/overview\">Google Cloud 控制台</a>。</p>\n</li>\n<li><p>创建或选择一个项目。</p>\n</li>\n<li><p>点击继续，启用 API 和任何相关服务。</p>\n</li>\n<li><p>在凭据页面上，获取 API 密钥（并设置 API 密钥限制）。注意：如果您已有不受限的 API 密钥或存在浏览器限制的密钥，可以使用相应密钥。</p>\n</li>\n<li><p>如需防止配额盗用并保护 API 密钥，请参阅<a href=\"https://cloud.google.com/docs/authentication/api-keys?hl=zh-cn\">使用 API 密钥</a>。</p>\n</li>\n<li><p>启用结算功能。如需了解详情，请参阅<a href=\"https://developers.google.com/maps/documentation/javascript/usage-and-billing?hl=zh-cn&utm_source=devtools&utm_campaign=stable\">用量和结算</a>。</p>\n</li>\n<li><p>现在，您可以使用 API 密钥了。</p>\n</li>\n</ul>\n<h3 id=\"接入-Google-地图\"><a href=\"#接入-Google-地图\" class=\"headerlink\" title=\"接入 Google 地图\"></a>接入 Google 地图</h3><ul>\n<li><p><a href=\"https://www.google.com.hk/maps\">获取经纬度</a></p>\n<ul>\n<li>在地图上搜索地名，导航栏上会出现地名所在的经纬度<br><img src=\"/images/%E6%8E%A5%E5%85%A5Google%E5%9C%B0%E5%9B%BE/latlng.png\"></li>\n</ul>\n</li>\n<li><p>vue 项目接入 Google 地图</p>\n<ul>\n<li>下载依赖：</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install @googlemaps/js-api-loader</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>新建 GoogleMaps.vue 文件</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;myMap&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;bg-#ccc w-full h-full&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"keyword\">import</span> &#123; onMounted, ref &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Loader</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@googlemaps/js-api-loader&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"title function_\">onMounted</span>(<span class=\"title function_\">async</span> () =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"keyword\">const</span> loader = <span class=\"keyword\">new</span> <span class=\"title class_\">Loader</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"attr\">apiKey</span>: <span class=\"string\">&#x27;AIzaSyDGp6YYslhnooIC1iEoVC0_QBmlJIxS2OQ&#x27;</span>, <span class=\"comment\">// Google Maps API 密钥</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"attr\">version</span>: <span class=\"string\">&#x27;weekly&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"attr\">libraries</span>: [],</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"keyword\">try</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">await</span> loader.<span class=\"title function_\">load</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">const</span> title = <span class=\"string\">&#x27;清华大学&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// 位置坐标</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">const</span> myLatLng = &#123; <span class=\"attr\">lat</span>: <span class=\"number\">39.9389436</span>, <span class=\"attr\">lng</span>: <span class=\"number\">116.0678214</span> &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// 1、创建地图</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">const</span> theMap = <span class=\"keyword\">await</span> <span class=\"keyword\">new</span> google.<span class=\"property\">maps</span>.<span class=\"title class_\">Map</span>(</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;myMap&#x27;</span>),</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"attr\">zoom</span>: <span class=\"number\">10</span>, <span class=\"comment\">// 缩放级别，0全球视野—21建筑物级别</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"attr\">center</span>: myLatLng, <span class=\"comment\">// 地图中心点的经纬度</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"attr\">mapId</span>: <span class=\"string\">&#x27;XXXX_MAP_ID&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"attr\">maptype</span>: <span class=\"string\">&#x27;satellite&#x27;</span>, <span class=\"comment\">// 地图类型: roadmap 标准道路地图、satellite 卫星图、terrain 地形图、hybrid混合图(卫星图像+道路标签)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// 2、添加地点标记</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">const</span> marker = <span class=\"keyword\">await</span> <span class=\"keyword\">new</span> google.<span class=\"property\">maps</span>.<span class=\"title class_\">Marker</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">map</span>: theMap,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">position</span>: myLatLng,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">title</span>: title, <span class=\"comment\">// icon: &quot;path/to/custom-icon.png&quot;, // 可选自定义图标</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// 3、添加信息窗口</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">const</span> infoBox = <span class=\"keyword\">await</span> <span class=\"keyword\">new</span> google.<span class=\"property\">maps</span>.<span class=\"title class_\">InfoWindow</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">content</span>: <span class=\"string\">`</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\">                    &lt;h3 style=&quot;line-height: 1;margin: 0 0 10px;padding: 0;&quot;&gt;清华大学&lt;/h3&gt;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\">                    &lt;p&gt;北京市海淀区清华园&lt;/p&gt;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\">                    &lt;p&gt;中华人民共和国教育部直属的全国重点大学，中央直管高校&lt;/p&gt;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\">                    &lt;p&gt;&quot;自强不息、厚德载物&quot;&lt;/p&gt;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\">                `</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">maxWidth</span>: <span class=\"number\">400</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\tmarker.<span class=\"title function_\">addListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\tinfoBox.<span class=\"title function_\">open</span>(theMap, marker)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t&#125; <span class=\"keyword\">catch</span> (error) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(<span class=\"string\">&#x27;加载Google地图 API 时出错:&#x27;</span>, error)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>使用：</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;w-full h-50vh max-h-500px&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">GoogleMaps</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>效果图：</p>\n<p><img src=\"/images/%E6%8E%A5%E5%85%A5Google%E5%9C%B0%E5%9B%BE/maps.png\"></p>\n</li>\n<li><p>【Tips】如上效果图有水印，其实 Google 地图已经使用成功了，只是 Google API 秘钥未正确使用(需要结算付款的…)</p>\n</li>\n</ul>\n</li>\n</ul>\n","excerpt":"","more":"<h3 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h3><ul>\n<li><p>Google API 秘钥</p>\n</li>\n<li><p>地址信息：经纬度、地点名称等</p>\n</li>\n</ul>\n<h3 id=\"获取-Google-API-密钥\"><a href=\"#获取-Google-API-密钥\" class=\"headerlink\" title=\"获取 Google API 密钥\"></a><a href=\"https://developers.google.com/maps/documentation/javascript/add-google-map-wc-tut?hl=zh-cn#key\">获取 Google API 密钥</a></h3><ul>\n<li><p>前往 <a href=\"https://console.cloud.google.com/projectselector2/google/maps-apis/overview\">Google Cloud 控制台</a>。</p>\n</li>\n<li><p>创建或选择一个项目。</p>\n</li>\n<li><p>点击继续，启用 API 和任何相关服务。</p>\n</li>\n<li><p>在凭据页面上，获取 API 密钥（并设置 API 密钥限制）。注意：如果您已有不受限的 API 密钥或存在浏览器限制的密钥，可以使用相应密钥。</p>\n</li>\n<li><p>如需防止配额盗用并保护 API 密钥，请参阅<a href=\"https://cloud.google.com/docs/authentication/api-keys?hl=zh-cn\">使用 API 密钥</a>。</p>\n</li>\n<li><p>启用结算功能。如需了解详情，请参阅<a href=\"https://developers.google.com/maps/documentation/javascript/usage-and-billing?hl=zh-cn&utm_source=devtools&utm_campaign=stable\">用量和结算</a>。</p>\n</li>\n<li><p>现在，您可以使用 API 密钥了。</p>\n</li>\n</ul>\n<h3 id=\"接入-Google-地图\"><a href=\"#接入-Google-地图\" class=\"headerlink\" title=\"接入 Google 地图\"></a>接入 Google 地图</h3><ul>\n<li><p><a href=\"https://www.google.com.hk/maps\">获取经纬度</a></p>\n<ul>\n<li>在地图上搜索地名，导航栏上会出现地名所在的经纬度<br><img src=\"/images/%E6%8E%A5%E5%85%A5Google%E5%9C%B0%E5%9B%BE/latlng.png\"></li>\n</ul>\n</li>\n<li><p>vue 项目接入 Google 地图</p>\n<ul>\n<li>下载依赖：</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install @googlemaps/js-api-loader</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>新建 GoogleMaps.vue 文件</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;myMap&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;bg-#ccc w-full h-full&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"keyword\">import</span> &#123; onMounted, ref &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Loader</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@googlemaps/js-api-loader&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"title function_\">onMounted</span>(<span class=\"title function_\">async</span> () =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"keyword\">const</span> loader = <span class=\"keyword\">new</span> <span class=\"title class_\">Loader</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"attr\">apiKey</span>: <span class=\"string\">&#x27;AIzaSyDGp6YYslhnooIC1iEoVC0_QBmlJIxS2OQ&#x27;</span>, <span class=\"comment\">// Google Maps API 密钥</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"attr\">version</span>: <span class=\"string\">&#x27;weekly&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"attr\">libraries</span>: [],</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"keyword\">try</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">await</span> loader.<span class=\"title function_\">load</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">const</span> title = <span class=\"string\">&#x27;清华大学&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// 位置坐标</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">const</span> myLatLng = &#123; <span class=\"attr\">lat</span>: <span class=\"number\">39.9389436</span>, <span class=\"attr\">lng</span>: <span class=\"number\">116.0678214</span> &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// 1、创建地图</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">const</span> theMap = <span class=\"keyword\">await</span> <span class=\"keyword\">new</span> google.<span class=\"property\">maps</span>.<span class=\"title class_\">Map</span>(</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;myMap&#x27;</span>),</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"attr\">zoom</span>: <span class=\"number\">10</span>, <span class=\"comment\">// 缩放级别，0全球视野—21建筑物级别</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"attr\">center</span>: myLatLng, <span class=\"comment\">// 地图中心点的经纬度</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"attr\">mapId</span>: <span class=\"string\">&#x27;XXXX_MAP_ID&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"attr\">maptype</span>: <span class=\"string\">&#x27;satellite&#x27;</span>, <span class=\"comment\">// 地图类型: roadmap 标准道路地图、satellite 卫星图、terrain 地形图、hybrid混合图(卫星图像+道路标签)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// 2、添加地点标记</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">const</span> marker = <span class=\"keyword\">await</span> <span class=\"keyword\">new</span> google.<span class=\"property\">maps</span>.<span class=\"title class_\">Marker</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">map</span>: theMap,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">position</span>: myLatLng,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">title</span>: title, <span class=\"comment\">// icon: &quot;path/to/custom-icon.png&quot;, // 可选自定义图标</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// 3、添加信息窗口</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">const</span> infoBox = <span class=\"keyword\">await</span> <span class=\"keyword\">new</span> google.<span class=\"property\">maps</span>.<span class=\"title class_\">InfoWindow</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">content</span>: <span class=\"string\">`</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\">                    &lt;h3 style=&quot;line-height: 1;margin: 0 0 10px;padding: 0;&quot;&gt;清华大学&lt;/h3&gt;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\">                    &lt;p&gt;北京市海淀区清华园&lt;/p&gt;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\">                    &lt;p&gt;中华人民共和国教育部直属的全国重点大学，中央直管高校&lt;/p&gt;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\">                    &lt;p&gt;&quot;自强不息、厚德载物&quot;&lt;/p&gt;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\">                `</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">maxWidth</span>: <span class=\"number\">400</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\tmarker.<span class=\"title function_\">addListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\tinfoBox.<span class=\"title function_\">open</span>(theMap, marker)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t&#125; <span class=\"keyword\">catch</span> (error) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(<span class=\"string\">&#x27;加载Google地图 API 时出错:&#x27;</span>, error)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>使用：</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;w-full h-50vh max-h-500px&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">GoogleMaps</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>效果图：</p>\n<p><img src=\"/images/%E6%8E%A5%E5%85%A5Google%E5%9C%B0%E5%9B%BE/maps.png\"></p>\n</li>\n<li><p>【Tips】如上效果图有水印，其实 Google 地图已经使用成功了，只是 Google API 秘钥未正确使用(需要结算付款的…)</p>\n</li>\n</ul>\n</li>\n</ul>\n"},{"title":"词云图","date":"2025-08-21T09:43:10.000Z","cover":"/images/词云图/cover.jpg","_content":"\n### 首先确保 echarts 和 echarts-wordcloud 都已正确安装，且版本兼容（echarts-wordcloud 需要与 echarts 主版本匹配）。\n\n```bash\n# 安装兼容版本（推荐最新稳定版）\nnpm install echarts@5.4.3 echarts-wordcloud@2.1.0 --save\n```\n\n### 使用(vue3 语法 + Element-Plus)\n\n```html\n<template>\n\t<div class=\"containter-content\">\n\t\t<!-- 控制区域 -->\n\t\t<div class=\"controls\">\n\t\t\t<el-button type=\"primary\" @click=\"handleRefresh\">刷新数据</el-button>\n\t\t\t<el-button type=\"primary\" @click=\"toggleRotation\">切换旋转模式</el-button>\n\t\t\t<el-select v-model=\"currentShape\" @change=\"handleShapeChange\">\n\t\t\t\t<el-option\n\t\t\t\t\tv-for=\"(item, index) in shapeList\"\n\t\t\t\t\t:key=\"index\"\n\t\t\t\t\t:label=\"item.label\"\n\t\t\t\t\t:value=\"item.value\"\n\t\t\t\t></el-option>\n\t\t\t</el-select>\n\t\t</div>\n\n\t\t<!-- 词云容器 -->\n\t\t<div ref=\"chartRef\" class=\"chart-container\"></div>\n\n\t\t<!-- 点击信息 -->\n\t\t<div class=\"info\" v-if=\"activeWord\">\n\t\t\t选中：<strong>{{ activeWord.name }}</strong\n\t\t\t>，权重：{{ activeWord.value }}\n\t\t</div>\n\t</div>\n</template>\n\n<script setup>\nimport { ref, onMounted, onUnmounted, nextTick } from 'vue'\nimport * as echarts from 'echarts'\nimport 'echarts-wordcloud' // 引入词云扩展\n\n// 图表容器引用\nconst chartRef = ref(null)\n// ECharts实例\nlet chartInstance = null\n// 当前选中的词\nconst activeWord = ref(null)\n// 是否开启旋转\nconst isRotating = ref(false)\n// 当前形状\nconst currentShape = ref('square')\n\nconst shapeList = ref([\n\t{\n\t\tlabel: '正方形',\n\t\tvalue: 'square',\n\t},\n\t{\n\t\tlabel: '圆形',\n\t\tvalue: 'circle',\n\t},\n\t{\n\t\tlabel: '心形',\n\t\tvalue: 'cardioid',\n\t},\n\t{\n\t\tlabel: '菱形',\n\t\tvalue: 'diamond',\n\t},\n\t{\n\t\tlabel: '正三角形（尖端朝上）',\n\t\tvalue: 'triangle-forward',\n\t},\n\t{\n\t\tlabel: '倒三角形（尖端朝下）',\n\t\tvalue: 'triangle',\n\t},\n\t{\n\t\tlabel: '星形',\n\t\tvalue: 'star',\n\t},\n\t{\n\t\tlabel: '五边形',\n\t\tvalue: 'pentagon',\n\t},\n])\n\n// 原始词云数据（name:关键词, value:权重）\nconst wordData = [\n\t{ name: '健康保险', value: 100 },\n\t{ name: '阅读协议', value: 80 },\n\t{ name: '普通设备机', value: 70 },\n\t{ name: '性别ocr识别不一致', value: 65 },\n\t{ name: '额度B', value: 60 },\n\t{ name: '没有安装D等级app', value: 55 },\n\t{ name: '全职', value: 90 },\n\t{ name: '近30天没有安装银行app', value: 50 },\n\t{ name: '子女教育', value: 45 },\n\t{ name: '认证未过切页面', value: 40 },\n\t{ name: '0核数', value: 35 },\n\t{ name: '决策正常', value: 30 },\n\t{ name: '近15天未有优质短信', value: 25 },\n\t{ name: '响应式', value: 40 },\n\t{ name: 'HTML5', value: 35 },\n\t{ name: 'CSS3', value: 30 },\n\t{ name: '预审批', value: 20 },\n\t{ name: '双鱼座', value: 15 },\n\t{ name: '近9999天有申请成功', value: 85 },\n\t{ name: '中学', value: 10 },\n\t{ name: '没有孩子', value: 5 },\n\t{ name: '财务类频繁安装正常', value: 22 },\n\t{ name: '低到中度使用', value: 18 },\n\t{ name: '词云图', value: 65 },\n\t{ name: '前端开发', value: 55 },\n\t{ name: 'Vue3', value: 80 },\n\t{ name: 'JavaScript', value: 70 },\n\t{ name: 'js2wordcloud', value: 60 },\n\t{ name: 'Composition API', value: 50 },\n\t{ name: '组件化', value: 45 },\n\t{ name: '交互', value: 25 },\n\t{ name: '可视化', value: 20 },\n\t{ name: 'Canvas', value: 15 },\n\t{ name: 'uniapp', value: 30 },\n\t{ name: 'Nuxtjs', value: 20 },\n\t{ name: 'React', value: 5 },\n\t{ name: 'PS', value: 30 },\n\t{ name: 'AXIOS', value: 10 },\n\t{ name: 'FORMDATA', value: 20 },\n\t{ name: 'JSON', value: 50 },\n\t{ name: '结婚人数', value: 50 },\n\t{ name: '国庆节', value: 150 },\n\t{ name: '元旦节', value: 120 },\n\t{ name: '端午节', value: 70 },\n\t{ name: '中秋节', value: 100 },\n\t{ name: '1945.08.15日本投降', value: 150 },\n]\n\n// 初始化图表\nconst initChart = async () => {\n\t// 确保DOM渲染完成\n\tawait nextTick() // 销毁已有实例\n\n\tif (chartInstance) {\n\t\tchartInstance.dispose()\n\t} // 创建实例\n\n\tchartInstance = echarts.init(chartRef.value) // 设置图表配置\n\n\tconst option = {\n\t\ttooltip: {\n\t\t\tshow: true,\n\t\t\t// formatter: (params) => `${params.name}: ${params.value}`,\n\t\t\t// 自定义tooltip内容\n\t\t\tformatter: function (params) {\n\t\t\t\t// params 包含当前数据的所有信息\n\t\t\t\tconst data = params.data\n\t\t\t\t// 拼接HTML字符串，展示额外字段\n\t\t\t\treturn `\n\t\t\t\t\t\t<div style=\"text-align: left;\">\n\t\t\t\t\t\t\t<div>${data.name}</div>\n\t\t\t\t\t\t\t<div>${data.value}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t`\n\t\t\t},\n\t\t},\n\t\tseries: [\n\t\t\t{\n\t\t\t\ttype: 'wordCloud', // 词云类型\n\t\t\t\tgrid: [10, 10, 10, 10], // 内边距\n\t\t\t\tsizeRange:  [12, 60], // 部分版本需此配置生效字体范围\n\t\t\t\trotationRange: isRotating.value ? [-90, 90] : [0, 0], // 旋转角度范围\n\t\t\t\tshape: currentShape.value, // 整体形状\n\t\t\t\tspacing: 10, // 词语间距（像素）\n\t\t\t\tlayoutAnimation: false, // 关闭布局动画，避免小词被 “挤出”\n\t\t\t\twidth: '95%',\n\t\t\t\theight: '95%',\n\t\t\t\ttextStyle: {\n\t\t\t\t\tcolor: function () {\n\t\t\t\t\t\t// 随机颜色\n\t\t\t\t\t\treturn `rgb(${Math.round(Math.random() * 255)}, ${Math.round(\n\t\t\t\t\t\t\tMath.random() * 200\n\t\t\t\t\t\t)}, ${Math.round(Math.random() * 255)})`\n\t\t\t\t\t},\n\t\t\t\t\tfontSize:  [12, 60], // 强制最小字体12px，最大60px\n\t\t\t\t\tfontFamily: 'Microsoft YaHei, sans-serif',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tshadowBlur: 20,\n\t\t\t\t\t\tshadowColor: '#333',\n\t\t\t\t\t\tfontSize: 14,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdata: wordData, // 词云数据\n\t\t\t\t// 点击事件\n\t\t\t\temphasis: {\n\t\t\t\t\tfocus: 'self',\n\t\t\t\t\tscale: 1.1, // 选中时放大\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t} // 设置配置项\n\n\tchartInstance.setOption(option) // 绑定点击事件\n\n\tchartInstance.on('click', (params) => {\n\t\tactiveWord.value = params.data\n\t}) // 监听窗口大小变化，自动调整图表\n\n\tconst handleResize = () => {\n\t\tchartInstance.resize()\n\t}\n\twindow.addEventListener('resize', handleResize) // 组件卸载时移除监听\n\n\tonUnmounted(() => {\n\t\twindow.removeEventListener('resize', handleResize)\n\t})\n}\n\n// 刷新数据（随机调整权重）\nconst handleRefresh = () => {\n\tconst newData = wordData.map((item) => ({\n\t\t...item,\n\t\tvalue: Math.floor(Math.random() * (item.value / 2) + item.value / 2),\n\t}))\n\tchartInstance.setOption({\n\t\tseries: [{ data: newData }],\n\t})\n}\n\n// 切换旋转模式\nconst toggleRotation = () => {\n\tisRotating.value = !isRotating.value // 重新设置\n\tchartInstance.setOption({\n\t\tseries: [\n\t\t\t{\n\t\t\t\trotationRange: isRotating.value ? [-90, 90] : [0, 0],\n\t\t\t},\n\t\t],\n\t})\n}\n\n// 切换形状\nconst handleShapeChange = () => {\n\tchartInstance.setOption({\n\t\tseries: [{ shape: currentShape.value }],\n\t})\n}\n\n// 初始化图表\nonMounted(() => {\n\tinitChart()\n})\n\n// 组件卸载时销毁实例\nonUnmounted(() => {\n\tif (chartInstance) {\n\t\tchartInstance.dispose()\n\t}\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.containter-content {\n\tbackground-color: #f0f2f5;\n}\n.controls {\n\tmargin: 10px 10px 20px;\n\tdisplay: flex;\n\tgap: 15px;\n\talign-items: center;\n\tflex-wrap: wrap;\n\t.el-button + .el-button {\n\t\tmargin: 0 !important;\n\t}\n}\n.chart-container {\n\twidth: 600px;\n\tmin-height: 500px;\n\tborder-radius: 8px;\n\tbox-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n\tbackground-color: #fff;\n}\n.info {\n\tmargin-top: 15px;\n\tpadding: 10px;\n\tbackground-color: #f0f7ff;\n\tborder-radius: 4px;\n\tcolor: #1890ff;\n\tfont-size: 14px;\n}\n</style>\n```\n\n### 效果图\n![](/images/词云图/result.png)","source":"_posts/2025-08-21-词云图.md","raw":"---\ntitle: 词云图\ndate: 2025-08-21 17:43:10\ntags:\n  - echarts-wordcloud\n  - echarts\ncategories: Javascript\ncover: /images/词云图/cover.jpg # 封面图\n---\n\n### 首先确保 echarts 和 echarts-wordcloud 都已正确安装，且版本兼容（echarts-wordcloud 需要与 echarts 主版本匹配）。\n\n```bash\n# 安装兼容版本（推荐最新稳定版）\nnpm install echarts@5.4.3 echarts-wordcloud@2.1.0 --save\n```\n\n### 使用(vue3 语法 + Element-Plus)\n\n```html\n<template>\n\t<div class=\"containter-content\">\n\t\t<!-- 控制区域 -->\n\t\t<div class=\"controls\">\n\t\t\t<el-button type=\"primary\" @click=\"handleRefresh\">刷新数据</el-button>\n\t\t\t<el-button type=\"primary\" @click=\"toggleRotation\">切换旋转模式</el-button>\n\t\t\t<el-select v-model=\"currentShape\" @change=\"handleShapeChange\">\n\t\t\t\t<el-option\n\t\t\t\t\tv-for=\"(item, index) in shapeList\"\n\t\t\t\t\t:key=\"index\"\n\t\t\t\t\t:label=\"item.label\"\n\t\t\t\t\t:value=\"item.value\"\n\t\t\t\t></el-option>\n\t\t\t</el-select>\n\t\t</div>\n\n\t\t<!-- 词云容器 -->\n\t\t<div ref=\"chartRef\" class=\"chart-container\"></div>\n\n\t\t<!-- 点击信息 -->\n\t\t<div class=\"info\" v-if=\"activeWord\">\n\t\t\t选中：<strong>{{ activeWord.name }}</strong\n\t\t\t>，权重：{{ activeWord.value }}\n\t\t</div>\n\t</div>\n</template>\n\n<script setup>\nimport { ref, onMounted, onUnmounted, nextTick } from 'vue'\nimport * as echarts from 'echarts'\nimport 'echarts-wordcloud' // 引入词云扩展\n\n// 图表容器引用\nconst chartRef = ref(null)\n// ECharts实例\nlet chartInstance = null\n// 当前选中的词\nconst activeWord = ref(null)\n// 是否开启旋转\nconst isRotating = ref(false)\n// 当前形状\nconst currentShape = ref('square')\n\nconst shapeList = ref([\n\t{\n\t\tlabel: '正方形',\n\t\tvalue: 'square',\n\t},\n\t{\n\t\tlabel: '圆形',\n\t\tvalue: 'circle',\n\t},\n\t{\n\t\tlabel: '心形',\n\t\tvalue: 'cardioid',\n\t},\n\t{\n\t\tlabel: '菱形',\n\t\tvalue: 'diamond',\n\t},\n\t{\n\t\tlabel: '正三角形（尖端朝上）',\n\t\tvalue: 'triangle-forward',\n\t},\n\t{\n\t\tlabel: '倒三角形（尖端朝下）',\n\t\tvalue: 'triangle',\n\t},\n\t{\n\t\tlabel: '星形',\n\t\tvalue: 'star',\n\t},\n\t{\n\t\tlabel: '五边形',\n\t\tvalue: 'pentagon',\n\t},\n])\n\n// 原始词云数据（name:关键词, value:权重）\nconst wordData = [\n\t{ name: '健康保险', value: 100 },\n\t{ name: '阅读协议', value: 80 },\n\t{ name: '普通设备机', value: 70 },\n\t{ name: '性别ocr识别不一致', value: 65 },\n\t{ name: '额度B', value: 60 },\n\t{ name: '没有安装D等级app', value: 55 },\n\t{ name: '全职', value: 90 },\n\t{ name: '近30天没有安装银行app', value: 50 },\n\t{ name: '子女教育', value: 45 },\n\t{ name: '认证未过切页面', value: 40 },\n\t{ name: '0核数', value: 35 },\n\t{ name: '决策正常', value: 30 },\n\t{ name: '近15天未有优质短信', value: 25 },\n\t{ name: '响应式', value: 40 },\n\t{ name: 'HTML5', value: 35 },\n\t{ name: 'CSS3', value: 30 },\n\t{ name: '预审批', value: 20 },\n\t{ name: '双鱼座', value: 15 },\n\t{ name: '近9999天有申请成功', value: 85 },\n\t{ name: '中学', value: 10 },\n\t{ name: '没有孩子', value: 5 },\n\t{ name: '财务类频繁安装正常', value: 22 },\n\t{ name: '低到中度使用', value: 18 },\n\t{ name: '词云图', value: 65 },\n\t{ name: '前端开发', value: 55 },\n\t{ name: 'Vue3', value: 80 },\n\t{ name: 'JavaScript', value: 70 },\n\t{ name: 'js2wordcloud', value: 60 },\n\t{ name: 'Composition API', value: 50 },\n\t{ name: '组件化', value: 45 },\n\t{ name: '交互', value: 25 },\n\t{ name: '可视化', value: 20 },\n\t{ name: 'Canvas', value: 15 },\n\t{ name: 'uniapp', value: 30 },\n\t{ name: 'Nuxtjs', value: 20 },\n\t{ name: 'React', value: 5 },\n\t{ name: 'PS', value: 30 },\n\t{ name: 'AXIOS', value: 10 },\n\t{ name: 'FORMDATA', value: 20 },\n\t{ name: 'JSON', value: 50 },\n\t{ name: '结婚人数', value: 50 },\n\t{ name: '国庆节', value: 150 },\n\t{ name: '元旦节', value: 120 },\n\t{ name: '端午节', value: 70 },\n\t{ name: '中秋节', value: 100 },\n\t{ name: '1945.08.15日本投降', value: 150 },\n]\n\n// 初始化图表\nconst initChart = async () => {\n\t// 确保DOM渲染完成\n\tawait nextTick() // 销毁已有实例\n\n\tif (chartInstance) {\n\t\tchartInstance.dispose()\n\t} // 创建实例\n\n\tchartInstance = echarts.init(chartRef.value) // 设置图表配置\n\n\tconst option = {\n\t\ttooltip: {\n\t\t\tshow: true,\n\t\t\t// formatter: (params) => `${params.name}: ${params.value}`,\n\t\t\t// 自定义tooltip内容\n\t\t\tformatter: function (params) {\n\t\t\t\t// params 包含当前数据的所有信息\n\t\t\t\tconst data = params.data\n\t\t\t\t// 拼接HTML字符串，展示额外字段\n\t\t\t\treturn `\n\t\t\t\t\t\t<div style=\"text-align: left;\">\n\t\t\t\t\t\t\t<div>${data.name}</div>\n\t\t\t\t\t\t\t<div>${data.value}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t`\n\t\t\t},\n\t\t},\n\t\tseries: [\n\t\t\t{\n\t\t\t\ttype: 'wordCloud', // 词云类型\n\t\t\t\tgrid: [10, 10, 10, 10], // 内边距\n\t\t\t\tsizeRange:  [12, 60], // 部分版本需此配置生效字体范围\n\t\t\t\trotationRange: isRotating.value ? [-90, 90] : [0, 0], // 旋转角度范围\n\t\t\t\tshape: currentShape.value, // 整体形状\n\t\t\t\tspacing: 10, // 词语间距（像素）\n\t\t\t\tlayoutAnimation: false, // 关闭布局动画，避免小词被 “挤出”\n\t\t\t\twidth: '95%',\n\t\t\t\theight: '95%',\n\t\t\t\ttextStyle: {\n\t\t\t\t\tcolor: function () {\n\t\t\t\t\t\t// 随机颜色\n\t\t\t\t\t\treturn `rgb(${Math.round(Math.random() * 255)}, ${Math.round(\n\t\t\t\t\t\t\tMath.random() * 200\n\t\t\t\t\t\t)}, ${Math.round(Math.random() * 255)})`\n\t\t\t\t\t},\n\t\t\t\t\tfontSize:  [12, 60], // 强制最小字体12px，最大60px\n\t\t\t\t\tfontFamily: 'Microsoft YaHei, sans-serif',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tshadowBlur: 20,\n\t\t\t\t\t\tshadowColor: '#333',\n\t\t\t\t\t\tfontSize: 14,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdata: wordData, // 词云数据\n\t\t\t\t// 点击事件\n\t\t\t\temphasis: {\n\t\t\t\t\tfocus: 'self',\n\t\t\t\t\tscale: 1.1, // 选中时放大\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t} // 设置配置项\n\n\tchartInstance.setOption(option) // 绑定点击事件\n\n\tchartInstance.on('click', (params) => {\n\t\tactiveWord.value = params.data\n\t}) // 监听窗口大小变化，自动调整图表\n\n\tconst handleResize = () => {\n\t\tchartInstance.resize()\n\t}\n\twindow.addEventListener('resize', handleResize) // 组件卸载时移除监听\n\n\tonUnmounted(() => {\n\t\twindow.removeEventListener('resize', handleResize)\n\t})\n}\n\n// 刷新数据（随机调整权重）\nconst handleRefresh = () => {\n\tconst newData = wordData.map((item) => ({\n\t\t...item,\n\t\tvalue: Math.floor(Math.random() * (item.value / 2) + item.value / 2),\n\t}))\n\tchartInstance.setOption({\n\t\tseries: [{ data: newData }],\n\t})\n}\n\n// 切换旋转模式\nconst toggleRotation = () => {\n\tisRotating.value = !isRotating.value // 重新设置\n\tchartInstance.setOption({\n\t\tseries: [\n\t\t\t{\n\t\t\t\trotationRange: isRotating.value ? [-90, 90] : [0, 0],\n\t\t\t},\n\t\t],\n\t})\n}\n\n// 切换形状\nconst handleShapeChange = () => {\n\tchartInstance.setOption({\n\t\tseries: [{ shape: currentShape.value }],\n\t})\n}\n\n// 初始化图表\nonMounted(() => {\n\tinitChart()\n})\n\n// 组件卸载时销毁实例\nonUnmounted(() => {\n\tif (chartInstance) {\n\t\tchartInstance.dispose()\n\t}\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.containter-content {\n\tbackground-color: #f0f2f5;\n}\n.controls {\n\tmargin: 10px 10px 20px;\n\tdisplay: flex;\n\tgap: 15px;\n\talign-items: center;\n\tflex-wrap: wrap;\n\t.el-button + .el-button {\n\t\tmargin: 0 !important;\n\t}\n}\n.chart-container {\n\twidth: 600px;\n\tmin-height: 500px;\n\tborder-radius: 8px;\n\tbox-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n\tbackground-color: #fff;\n}\n.info {\n\tmargin-top: 15px;\n\tpadding: 10px;\n\tbackground-color: #f0f7ff;\n\tborder-radius: 4px;\n\tcolor: #1890ff;\n\tfont-size: 14px;\n}\n</style>\n```\n\n### 效果图\n![](/images/词云图/result.png)","slug":"词云图","published":1,"updated":"2025-09-13T08:09:15.106Z","_id":"cmel89pep001trwnc93p77reb","comments":1,"layout":"post","photos":[],"content":"<h3 id=\"首先确保-echarts-和-echarts-wordcloud-都已正确安装，且版本兼容（echarts-wordcloud-需要与-echarts-主版本匹配）。\"><a href=\"#首先确保-echarts-和-echarts-wordcloud-都已正确安装，且版本兼容（echarts-wordcloud-需要与-echarts-主版本匹配）。\" class=\"headerlink\" title=\"首先确保 echarts 和 echarts-wordcloud 都已正确安装，且版本兼容（echarts-wordcloud 需要与 echarts 主版本匹配）。\"></a>首先确保 echarts 和 echarts-wordcloud 都已正确安装，且版本兼容（echarts-wordcloud 需要与 echarts 主版本匹配）。</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装兼容版本（推荐最新稳定版）</span></span><br><span class=\"line\">npm install echarts@5.4.3 echarts-wordcloud@2.1.0 --save</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用-vue3-语法-Element-Plus\"><a href=\"#使用-vue3-语法-Element-Plus\" class=\"headerlink\" title=\"使用(vue3 语法 + Element-Plus)\"></a>使用(vue3 语法 + Element-Plus)</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;containter-content&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!-- 控制区域 --&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;controls&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleRefresh&quot;</span>&gt;</span>刷新数据<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;toggleRotation&quot;</span>&gt;</span>切换旋转模式<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">el-select</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;currentShape&quot;</span> @<span class=\"attr\">change</span>=<span class=\"string\">&quot;handleShapeChange&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">el-option</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t\t\t<span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(item, index) in shapeList&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t\t\t<span class=\"attr\">:key</span>=<span class=\"string\">&quot;index&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t\t\t<span class=\"attr\">:label</span>=<span class=\"string\">&quot;item.label&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t\t\t<span class=\"attr\">:value</span>=<span class=\"string\">&quot;item.value&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t\t&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-option</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">el-select</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!-- 词云容器 --&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;chartRef&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;chart-container&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!-- 点击信息 --&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;info&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;activeWord&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t选中：<span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span>&#123;&#123; activeWord.name &#125;&#125;&lt;/strong</span><br><span class=\"line\">\t\t\t&gt;，权重：&#123;&#123; activeWord.value &#125;&#125;</span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; ref, onMounted, onUnmounted, nextTick &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> echarts <span class=\"keyword\">from</span> <span class=\"string\">&#x27;echarts&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;echarts-wordcloud&#x27;</span> <span class=\"comment\">// 引入词云扩展</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 图表容器引用</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> chartRef = <span class=\"title function_\">ref</span>(<span class=\"literal\">null</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// ECharts实例</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">let</span> chartInstance = <span class=\"literal\">null</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 当前选中的词</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> activeWord = <span class=\"title function_\">ref</span>(<span class=\"literal\">null</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 是否开启旋转</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> isRotating = <span class=\"title function_\">ref</span>(<span class=\"literal\">false</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 当前形状</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> currentShape = <span class=\"title function_\">ref</span>(<span class=\"string\">&#x27;square&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> shapeList = <span class=\"title function_\">ref</span>([</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">label</span>: <span class=\"string\">&#x27;正方形&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">value</span>: <span class=\"string\">&#x27;square&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">label</span>: <span class=\"string\">&#x27;圆形&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">value</span>: <span class=\"string\">&#x27;circle&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">label</span>: <span class=\"string\">&#x27;心形&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">value</span>: <span class=\"string\">&#x27;cardioid&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">label</span>: <span class=\"string\">&#x27;菱形&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">value</span>: <span class=\"string\">&#x27;diamond&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">label</span>: <span class=\"string\">&#x27;正三角形（尖端朝上）&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">value</span>: <span class=\"string\">&#x27;triangle-forward&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">label</span>: <span class=\"string\">&#x27;倒三角形（尖端朝下）&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">value</span>: <span class=\"string\">&#x27;triangle&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">label</span>: <span class=\"string\">&#x27;星形&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">value</span>: <span class=\"string\">&#x27;star&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">label</span>: <span class=\"string\">&#x27;五边形&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">value</span>: <span class=\"string\">&#x27;pentagon&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">])</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 原始词云数据（name:关键词, value:权重）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> wordData = [</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;健康保险&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">100</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;阅读协议&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">80</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;普通设备机&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">70</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;性别ocr识别不一致&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">65</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;额度B&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">60</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;没有安装D等级app&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">55</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;全职&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">90</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;近30天没有安装银行app&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">50</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;子女教育&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">45</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;认证未过切页面&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">40</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;0核数&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">35</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;决策正常&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">30</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;近15天未有优质短信&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">25</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;响应式&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">40</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;HTML5&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">35</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;CSS3&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">30</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;预审批&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">20</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;双鱼座&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">15</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;近9999天有申请成功&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">85</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;中学&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">10</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;没有孩子&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">5</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;财务类频繁安装正常&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">22</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;低到中度使用&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">18</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;词云图&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">65</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;前端开发&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">55</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Vue3&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">80</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;JavaScript&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">70</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;js2wordcloud&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">60</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Composition API&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">50</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;组件化&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">45</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;交互&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">25</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;可视化&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">20</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Canvas&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">15</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;uniapp&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">30</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Nuxtjs&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">20</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;React&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">5</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;PS&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">30</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;AXIOS&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">10</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;FORMDATA&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">20</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;JSON&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">50</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;结婚人数&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">50</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;国庆节&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">150</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;元旦节&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">120</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;端午节&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">70</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;中秋节&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">100</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;1945.08.15日本投降&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">150</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">]</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 初始化图表</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> <span class=\"title function_\">initChart</span> = <span class=\"keyword\">async</span> (<span class=\"params\"></span>) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"comment\">// 确保DOM渲染完成</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"keyword\">await</span> <span class=\"title function_\">nextTick</span>() <span class=\"comment\">// 销毁已有实例</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"keyword\">if</span> (chartInstance) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\tchartInstance.<span class=\"title function_\">dispose</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125; <span class=\"comment\">// 创建实例</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\tchartInstance = echarts.<span class=\"title function_\">init</span>(chartRef.<span class=\"property\">value</span>) <span class=\"comment\">// 设置图表配置</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"keyword\">const</span> option = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">tooltip</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"attr\">show</span>: <span class=\"literal\">true</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// formatter: (params) =&gt; `$&#123;params.name&#125;: $&#123;params.value&#125;`,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// 自定义tooltip内容</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"attr\">formatter</span>: <span class=\"keyword\">function</span> (<span class=\"params\">params</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"comment\">// params 包含当前数据的所有信息</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">const</span> data = params.<span class=\"property\">data</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"comment\">// 拼接HTML字符串，展示额外字段</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"string\">`</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\">\t\t\t\t\t\t&lt;div style=&quot;text-align: left;&quot;&gt;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\">\t\t\t\t\t\t\t&lt;div&gt;<span class=\"subst\">$&#123;data.name&#125;</span>&lt;/div&gt;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\">\t\t\t\t\t\t\t&lt;div&gt;<span class=\"subst\">$&#123;data.value&#125;</span>&lt;/div&gt;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\">\t\t\t\t\t\t&lt;/div&gt;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\">\t\t\t\t\t`</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">series</span>: [</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">type</span>: <span class=\"string\">&#x27;wordCloud&#x27;</span>, <span class=\"comment\">// 词云类型</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">grid</span>: [<span class=\"number\">10</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>], <span class=\"comment\">// 内边距</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">sizeRange</span>:  [<span class=\"number\">12</span>, <span class=\"number\">60</span>], <span class=\"comment\">// 部分版本需此配置生效字体范围</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">rotationRange</span>: isRotating.<span class=\"property\">value</span> ? [-<span class=\"number\">90</span>, <span class=\"number\">90</span>] : [<span class=\"number\">0</span>, <span class=\"number\">0</span>], <span class=\"comment\">// 旋转角度范围</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">shape</span>: currentShape.<span class=\"property\">value</span>, <span class=\"comment\">// 整体形状</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">spacing</span>: <span class=\"number\">10</span>, <span class=\"comment\">// 词语间距（像素）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">layoutAnimation</span>: <span class=\"literal\">false</span>, <span class=\"comment\">// 关闭布局动画，避免小词被 “挤出”</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">width</span>: <span class=\"string\">&#x27;95%&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">height</span>: <span class=\"string\">&#x27;95%&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">textStyle</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"attr\">color</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t<span class=\"comment\">// 随机颜色</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"string\">`rgb(<span class=\"subst\">$&#123;<span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">255</span>)&#125;</span>, <span class=\"subst\">$&#123;<span class=\"built_in\">Math</span>.round(</span></span></span></span><br><span class=\"line\"><span class=\"subst\"><span class=\"string\"><span class=\"language-javascript\">\t\t\t\t\t\t\t<span class=\"built_in\">Math</span>.random() * <span class=\"number\">200</span></span></span></span></span><br><span class=\"line\"><span class=\"subst\"><span class=\"string\"><span class=\"language-javascript\">\t\t\t\t\t\t)&#125;</span>, <span class=\"subst\">$&#123;<span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">255</span>)&#125;</span>)`</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"attr\">fontSize</span>:  [<span class=\"number\">12</span>, <span class=\"number\">60</span>], <span class=\"comment\">// 强制最小字体12px，最大60px</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"attr\">fontFamily</span>: <span class=\"string\">&#x27;Microsoft YaHei, sans-serif&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"attr\">emphasis</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t<span class=\"attr\">shadowBlur</span>: <span class=\"number\">20</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t<span class=\"attr\">shadowColor</span>: <span class=\"string\">&#x27;#333&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t<span class=\"attr\">fontSize</span>: <span class=\"number\">14</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">data</span>: wordData, <span class=\"comment\">// 词云数据</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"comment\">// 点击事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">emphasis</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"attr\">focus</span>: <span class=\"string\">&#x27;self&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"attr\">scale</span>: <span class=\"number\">1.1</span>, <span class=\"comment\">// 选中时放大</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t],</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125; <span class=\"comment\">// 设置配置项</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\tchartInstance.<span class=\"title function_\">setOption</span>(option) <span class=\"comment\">// 绑定点击事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\tchartInstance.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">(<span class=\"params\">params</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\tactiveWord.<span class=\"property\">value</span> = params.<span class=\"property\">data</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;) <span class=\"comment\">// 监听窗口大小变化，自动调整图表</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"keyword\">const</span> <span class=\"title function_\">handleResize</span> = (<span class=\"params\"></span>) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\tchartInstance.<span class=\"title function_\">resize</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"variable language_\">window</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;resize&#x27;</span>, handleResize) <span class=\"comment\">// 组件卸载时移除监听</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"title function_\">onUnmounted</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"variable language_\">window</span>.<span class=\"title function_\">removeEventListener</span>(<span class=\"string\">&#x27;resize&#x27;</span>, handleResize)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 刷新数据（随机调整权重）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> <span class=\"title function_\">handleRefresh</span> = (<span class=\"params\"></span>) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"keyword\">const</span> newData = wordData.<span class=\"title function_\">map</span>(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> (&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t...item,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">value</span>: <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * (item.<span class=\"property\">value</span> / <span class=\"number\">2</span>) + item.<span class=\"property\">value</span> / <span class=\"number\">2</span>),</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;))</span></span><br><span class=\"line\"><span class=\"language-javascript\">\tchartInstance.<span class=\"title function_\">setOption</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">series</span>: [&#123; <span class=\"attr\">data</span>: newData &#125;],</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 切换旋转模式</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> <span class=\"title function_\">toggleRotation</span> = (<span class=\"params\"></span>) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\tisRotating.<span class=\"property\">value</span> = !isRotating.<span class=\"property\">value</span> <span class=\"comment\">// 重新设置</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\tchartInstance.<span class=\"title function_\">setOption</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">series</span>: [</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">rotationRange</span>: isRotating.<span class=\"property\">value</span> ? [-<span class=\"number\">90</span>, <span class=\"number\">90</span>] : [<span class=\"number\">0</span>, <span class=\"number\">0</span>],</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t],</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 切换形状</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> <span class=\"title function_\">handleShapeChange</span> = (<span class=\"params\"></span>) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\tchartInstance.<span class=\"title function_\">setOption</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">series</span>: [&#123; <span class=\"attr\">shape</span>: currentShape.<span class=\"property\">value</span> &#125;],</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 初始化图表</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"title function_\">onMounted</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"title function_\">initChart</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 组件卸载时销毁实例</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"title function_\">onUnmounted</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"keyword\">if</span> (chartInstance) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\tchartInstance.<span class=\"title function_\">dispose</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;scss&quot;</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.containter-content</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">background-color</span>: <span class=\"number\">#f0f2f5</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.controls</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">margin</span>: <span class=\"number\">10px</span> <span class=\"number\">10px</span> <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">gap</span>: <span class=\"number\">15px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">align-items</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">flex-wrap</span>: wrap;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"selector-class\">.el-button</span> + <span class=\"selector-class\">.el-button</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">0</span> <span class=\"meta\">!important</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.chart-container</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">width</span>: <span class=\"number\">600px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">min-height</span>: <span class=\"number\">500px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">border-radius</span>: <span class=\"number\">8px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">2px</span> <span class=\"number\">10px</span> <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.1</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">background-color</span>: <span class=\"number\">#fff</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.info</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">margin-top</span>: <span class=\"number\">15px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">padding</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">background-color</span>: <span class=\"number\">#f0f7ff</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">border-radius</span>: <span class=\"number\">4px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">color</span>: <span class=\"number\">#1890ff</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">font-size</span>: <span class=\"number\">14px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p><img src=\"/images/%E8%AF%8D%E4%BA%91%E5%9B%BE/result.png\"></p>\n","excerpt":"","more":"<h3 id=\"首先确保-echarts-和-echarts-wordcloud-都已正确安装，且版本兼容（echarts-wordcloud-需要与-echarts-主版本匹配）。\"><a href=\"#首先确保-echarts-和-echarts-wordcloud-都已正确安装，且版本兼容（echarts-wordcloud-需要与-echarts-主版本匹配）。\" class=\"headerlink\" title=\"首先确保 echarts 和 echarts-wordcloud 都已正确安装，且版本兼容（echarts-wordcloud 需要与 echarts 主版本匹配）。\"></a>首先确保 echarts 和 echarts-wordcloud 都已正确安装，且版本兼容（echarts-wordcloud 需要与 echarts 主版本匹配）。</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装兼容版本（推荐最新稳定版）</span></span><br><span class=\"line\">npm install echarts@5.4.3 echarts-wordcloud@2.1.0 --save</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用-vue3-语法-Element-Plus\"><a href=\"#使用-vue3-语法-Element-Plus\" class=\"headerlink\" title=\"使用(vue3 语法 + Element-Plus)\"></a>使用(vue3 语法 + Element-Plus)</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;containter-content&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!-- 控制区域 --&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;controls&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleRefresh&quot;</span>&gt;</span>刷新数据<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;toggleRotation&quot;</span>&gt;</span>切换旋转模式<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">el-select</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;currentShape&quot;</span> @<span class=\"attr\">change</span>=<span class=\"string\">&quot;handleShapeChange&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">el-option</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t\t\t<span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(item, index) in shapeList&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t\t\t<span class=\"attr\">:key</span>=<span class=\"string\">&quot;index&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t\t\t<span class=\"attr\">:label</span>=<span class=\"string\">&quot;item.label&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t\t\t<span class=\"attr\">:value</span>=<span class=\"string\">&quot;item.value&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t\t&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-option</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">el-select</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!-- 词云容器 --&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;chartRef&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;chart-container&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!-- 点击信息 --&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;info&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;activeWord&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t选中：<span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span>&#123;&#123; activeWord.name &#125;&#125;&lt;/strong</span><br><span class=\"line\">\t\t\t&gt;，权重：&#123;&#123; activeWord.value &#125;&#125;</span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; ref, onMounted, onUnmounted, nextTick &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> echarts <span class=\"keyword\">from</span> <span class=\"string\">&#x27;echarts&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;echarts-wordcloud&#x27;</span> <span class=\"comment\">// 引入词云扩展</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 图表容器引用</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> chartRef = <span class=\"title function_\">ref</span>(<span class=\"literal\">null</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// ECharts实例</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">let</span> chartInstance = <span class=\"literal\">null</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 当前选中的词</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> activeWord = <span class=\"title function_\">ref</span>(<span class=\"literal\">null</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 是否开启旋转</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> isRotating = <span class=\"title function_\">ref</span>(<span class=\"literal\">false</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 当前形状</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> currentShape = <span class=\"title function_\">ref</span>(<span class=\"string\">&#x27;square&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> shapeList = <span class=\"title function_\">ref</span>([</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">label</span>: <span class=\"string\">&#x27;正方形&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">value</span>: <span class=\"string\">&#x27;square&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">label</span>: <span class=\"string\">&#x27;圆形&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">value</span>: <span class=\"string\">&#x27;circle&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">label</span>: <span class=\"string\">&#x27;心形&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">value</span>: <span class=\"string\">&#x27;cardioid&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">label</span>: <span class=\"string\">&#x27;菱形&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">value</span>: <span class=\"string\">&#x27;diamond&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">label</span>: <span class=\"string\">&#x27;正三角形（尖端朝上）&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">value</span>: <span class=\"string\">&#x27;triangle-forward&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">label</span>: <span class=\"string\">&#x27;倒三角形（尖端朝下）&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">value</span>: <span class=\"string\">&#x27;triangle&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">label</span>: <span class=\"string\">&#x27;星形&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">value</span>: <span class=\"string\">&#x27;star&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">label</span>: <span class=\"string\">&#x27;五边形&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">value</span>: <span class=\"string\">&#x27;pentagon&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">])</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 原始词云数据（name:关键词, value:权重）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> wordData = [</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;健康保险&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">100</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;阅读协议&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">80</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;普通设备机&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">70</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;性别ocr识别不一致&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">65</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;额度B&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">60</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;没有安装D等级app&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">55</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;全职&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">90</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;近30天没有安装银行app&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">50</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;子女教育&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">45</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;认证未过切页面&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">40</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;0核数&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">35</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;决策正常&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">30</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;近15天未有优质短信&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">25</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;响应式&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">40</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;HTML5&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">35</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;CSS3&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">30</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;预审批&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">20</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;双鱼座&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">15</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;近9999天有申请成功&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">85</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;中学&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">10</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;没有孩子&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">5</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;财务类频繁安装正常&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">22</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;低到中度使用&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">18</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;词云图&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">65</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;前端开发&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">55</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Vue3&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">80</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;JavaScript&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">70</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;js2wordcloud&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">60</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Composition API&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">50</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;组件化&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">45</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;交互&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">25</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;可视化&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">20</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Canvas&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">15</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;uniapp&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">30</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Nuxtjs&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">20</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;React&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">5</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;PS&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">30</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;AXIOS&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">10</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;FORMDATA&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">20</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;JSON&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">50</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;结婚人数&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">50</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;国庆节&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">150</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;元旦节&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">120</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;端午节&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">70</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;中秋节&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">100</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;1945.08.15日本投降&#x27;</span>, <span class=\"attr\">value</span>: <span class=\"number\">150</span> &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">]</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 初始化图表</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> <span class=\"title function_\">initChart</span> = <span class=\"keyword\">async</span> (<span class=\"params\"></span>) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"comment\">// 确保DOM渲染完成</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"keyword\">await</span> <span class=\"title function_\">nextTick</span>() <span class=\"comment\">// 销毁已有实例</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"keyword\">if</span> (chartInstance) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\tchartInstance.<span class=\"title function_\">dispose</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125; <span class=\"comment\">// 创建实例</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\tchartInstance = echarts.<span class=\"title function_\">init</span>(chartRef.<span class=\"property\">value</span>) <span class=\"comment\">// 设置图表配置</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"keyword\">const</span> option = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">tooltip</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"attr\">show</span>: <span class=\"literal\">true</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// formatter: (params) =&gt; `$&#123;params.name&#125;: $&#123;params.value&#125;`,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// 自定义tooltip内容</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"attr\">formatter</span>: <span class=\"keyword\">function</span> (<span class=\"params\">params</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"comment\">// params 包含当前数据的所有信息</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">const</span> data = params.<span class=\"property\">data</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"comment\">// 拼接HTML字符串，展示额外字段</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"string\">`</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\">\t\t\t\t\t\t&lt;div style=&quot;text-align: left;&quot;&gt;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\">\t\t\t\t\t\t\t&lt;div&gt;<span class=\"subst\">$&#123;data.name&#125;</span>&lt;/div&gt;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\">\t\t\t\t\t\t\t&lt;div&gt;<span class=\"subst\">$&#123;data.value&#125;</span>&lt;/div&gt;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\">\t\t\t\t\t\t&lt;/div&gt;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\">\t\t\t\t\t`</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">series</span>: [</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">type</span>: <span class=\"string\">&#x27;wordCloud&#x27;</span>, <span class=\"comment\">// 词云类型</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">grid</span>: [<span class=\"number\">10</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>], <span class=\"comment\">// 内边距</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">sizeRange</span>:  [<span class=\"number\">12</span>, <span class=\"number\">60</span>], <span class=\"comment\">// 部分版本需此配置生效字体范围</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">rotationRange</span>: isRotating.<span class=\"property\">value</span> ? [-<span class=\"number\">90</span>, <span class=\"number\">90</span>] : [<span class=\"number\">0</span>, <span class=\"number\">0</span>], <span class=\"comment\">// 旋转角度范围</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">shape</span>: currentShape.<span class=\"property\">value</span>, <span class=\"comment\">// 整体形状</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">spacing</span>: <span class=\"number\">10</span>, <span class=\"comment\">// 词语间距（像素）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">layoutAnimation</span>: <span class=\"literal\">false</span>, <span class=\"comment\">// 关闭布局动画，避免小词被 “挤出”</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">width</span>: <span class=\"string\">&#x27;95%&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">height</span>: <span class=\"string\">&#x27;95%&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">textStyle</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"attr\">color</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t<span class=\"comment\">// 随机颜色</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"string\">`rgb(<span class=\"subst\">$&#123;<span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">255</span>)&#125;</span>, <span class=\"subst\">$&#123;<span class=\"built_in\">Math</span>.round(</span></span></span></span><br><span class=\"line\"><span class=\"subst\"><span class=\"string\"><span class=\"language-javascript\">\t\t\t\t\t\t\t<span class=\"built_in\">Math</span>.random() * <span class=\"number\">200</span></span></span></span></span><br><span class=\"line\"><span class=\"subst\"><span class=\"string\"><span class=\"language-javascript\">\t\t\t\t\t\t)&#125;</span>, <span class=\"subst\">$&#123;<span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">255</span>)&#125;</span>)`</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"attr\">fontSize</span>:  [<span class=\"number\">12</span>, <span class=\"number\">60</span>], <span class=\"comment\">// 强制最小字体12px，最大60px</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"attr\">fontFamily</span>: <span class=\"string\">&#x27;Microsoft YaHei, sans-serif&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"attr\">emphasis</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t<span class=\"attr\">shadowBlur</span>: <span class=\"number\">20</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t<span class=\"attr\">shadowColor</span>: <span class=\"string\">&#x27;#333&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t<span class=\"attr\">fontSize</span>: <span class=\"number\">14</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">data</span>: wordData, <span class=\"comment\">// 词云数据</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"comment\">// 点击事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">emphasis</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"attr\">focus</span>: <span class=\"string\">&#x27;self&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"attr\">scale</span>: <span class=\"number\">1.1</span>, <span class=\"comment\">// 选中时放大</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t],</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125; <span class=\"comment\">// 设置配置项</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\tchartInstance.<span class=\"title function_\">setOption</span>(option) <span class=\"comment\">// 绑定点击事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\tchartInstance.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">(<span class=\"params\">params</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\tactiveWord.<span class=\"property\">value</span> = params.<span class=\"property\">data</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;) <span class=\"comment\">// 监听窗口大小变化，自动调整图表</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"keyword\">const</span> <span class=\"title function_\">handleResize</span> = (<span class=\"params\"></span>) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\tchartInstance.<span class=\"title function_\">resize</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"variable language_\">window</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;resize&#x27;</span>, handleResize) <span class=\"comment\">// 组件卸载时移除监听</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"title function_\">onUnmounted</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"variable language_\">window</span>.<span class=\"title function_\">removeEventListener</span>(<span class=\"string\">&#x27;resize&#x27;</span>, handleResize)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 刷新数据（随机调整权重）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> <span class=\"title function_\">handleRefresh</span> = (<span class=\"params\"></span>) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"keyword\">const</span> newData = wordData.<span class=\"title function_\">map</span>(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> (&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t...item,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">value</span>: <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * (item.<span class=\"property\">value</span> / <span class=\"number\">2</span>) + item.<span class=\"property\">value</span> / <span class=\"number\">2</span>),</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;))</span></span><br><span class=\"line\"><span class=\"language-javascript\">\tchartInstance.<span class=\"title function_\">setOption</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">series</span>: [&#123; <span class=\"attr\">data</span>: newData &#125;],</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 切换旋转模式</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> <span class=\"title function_\">toggleRotation</span> = (<span class=\"params\"></span>) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\tisRotating.<span class=\"property\">value</span> = !isRotating.<span class=\"property\">value</span> <span class=\"comment\">// 重新设置</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\tchartInstance.<span class=\"title function_\">setOption</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">series</span>: [</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">rotationRange</span>: isRotating.<span class=\"property\">value</span> ? [-<span class=\"number\">90</span>, <span class=\"number\">90</span>] : [<span class=\"number\">0</span>, <span class=\"number\">0</span>],</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t],</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 切换形状</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> <span class=\"title function_\">handleShapeChange</span> = (<span class=\"params\"></span>) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\tchartInstance.<span class=\"title function_\">setOption</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"attr\">series</span>: [&#123; <span class=\"attr\">shape</span>: currentShape.<span class=\"property\">value</span> &#125;],</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 初始化图表</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"title function_\">onMounted</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"title function_\">initChart</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 组件卸载时销毁实例</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"title function_\">onUnmounted</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"keyword\">if</span> (chartInstance) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\tchartInstance.<span class=\"title function_\">dispose</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;scss&quot;</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.containter-content</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">background-color</span>: <span class=\"number\">#f0f2f5</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.controls</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">margin</span>: <span class=\"number\">10px</span> <span class=\"number\">10px</span> <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">gap</span>: <span class=\"number\">15px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">align-items</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">flex-wrap</span>: wrap;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"selector-class\">.el-button</span> + <span class=\"selector-class\">.el-button</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">0</span> <span class=\"meta\">!important</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.chart-container</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">width</span>: <span class=\"number\">600px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">min-height</span>: <span class=\"number\">500px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">border-radius</span>: <span class=\"number\">8px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">2px</span> <span class=\"number\">10px</span> <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.1</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">background-color</span>: <span class=\"number\">#fff</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.info</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">margin-top</span>: <span class=\"number\">15px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">padding</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">background-color</span>: <span class=\"number\">#f0f7ff</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">border-radius</span>: <span class=\"number\">4px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">color</span>: <span class=\"number\">#1890ff</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">font-size</span>: <span class=\"number\">14px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p><img src=\"/images/%E8%AF%8D%E4%BA%91%E5%9B%BE/result.png\"></p>\n"},{"title":"瀑布流布局","date":"2025-09-03T07:19:04.000Z","cover":"/images/瀑布流布局/cover.jpg","_content":"\n瀑布流布局（Waterfall Layout）是一种流行的网页布局方式，核心特点是不规则的多列网格结构 —— 每列中的内容块高度不同，内容块会像瀑布流水一样，自动填充到当前高度最低的列中，最终形成错落有致、视觉丰富的布局效果。它广泛应用于图片展示、商品列表、内容卡片等场景（如 Pinterest、Unsplash、小红书的首页 / 搜索页）。\n\n### 🔥 CSS Grid 实现（简单高效）\n\n- CSS Grid 的 grid-template-rows: masonry（砖石布局）特性，这是 CSS 原生支持的瀑布流方案，无需 JS 计算。\n  - 优点: 纯 CSS 实现，代码简洁，性能优异，自动适应容器宽度\n  - 缺点: 浏览器兼容性有限（Chrome 87+、Firefox 77+ 支持，Safari 暂不支持）\n  - 适用场景: 对兼容性要求不高的现代网站，快速实现瀑布流\n\n```html\n<template>\n\t<div class=\"waterfall\">\n\t\t<div\n\t\t\tclass=\"item\"\n\t\t\tv-for=\"it in 30\"\n\t\t\t:key=\"it\"\n\t\t\t:style=\"{ '--w': '250px', '--h': Math.floor(Math.random() * 5) * 50 + 'px' }\"\n\t\t>\n\t\t\t{{ it }}        \n\t\t</div>\n\t</div>\n</template>\n\n<style lang=\"less\" scoped>\n\t/**\n\t  * grid-template-rows: masonry\n\t  * CSS Grid 布局中一个特殊的实验性值，用于实现砖石布局（瀑布流效果）。(还有其他实验性值，如 masonry-rows)\n\t  * 【效果】元素会按列排列，每列的高度根据内容自动调整，新元素优先填充到当前最短的列，形成典型的瀑布流视觉效果。\n\t  * 【兼容性与限制】目前在 Firefox 和 Chrome 中支持，但需要开启实验性功能。\n\t  * 【注意】由于是实验性特性，生产环境使用需谨慎，建议作为渐进增强方案。\n\t */\n\t.waterfall {\n\t    display: grid;\n\t    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); /* 每列最小 250px，最大自适应（1fr），自动填充列数 */\n\t    grid-template-rows: masonry; /* 关键：启用砖石布局，【自动填充最短列】 */\n\t    gap: 10px; /* 间距 */\n\t}\n\t.item {\n\t    break-inside: avoid; /* 防止内容被分割 */\n\t    // width: var(--w);\n\t    height: calc(var(--h) + 200px);\n\t    background: blue;\n\t    border-radius: 10px;\n\t    border: 1px solid #ccc;\n\t    display: flex;\n\t    align-items: center;\n\t    justify-content: center;\n\t    font-size: 30px;\n\t    color: #fff;\n\t}\n</style>\n```\n\n- 效果：(我开启了实验性功能支持，masonry 砖石布局好像也没有生效???)\n  ![](/images/瀑布流布局/waterfall1.png)\n- 开启谷歌开启实验性功能：打开浏览，输入 chrome://flags/回车 → 输入实验性功能的关键词搜索 → 启用 Enable\n  ![](/images/瀑布流布局/chrome.png)\n\n### 🔥 CSS 多列布局，利用 CSS 的 columns 多列属性，将内容按列分割，自动填充高度\n\n- 优点：纯 CSS 实现，兼容性较好（IE10+ 支持），代码简单\n- 缺点：内容按 “列” 顺序排列（而非行），滚动加载时可能需要重新排序；列宽固定，动态调整列数需额外处理\n- 适用场景：静态内容展示，对排序顺序要求不高的场景（如：图片墙）\n\n```html\n<template>\n\t<div class=\"waterfall\">\n\t\t<div\n\t\t\tclass=\"item\"\n\t\t\tv-for=\"it in 13\"\n\t\t\t:key=\"it\"\n\t\t\t:style=\"{ '--w': '250px', '--h': Math.floor(Math.random() * 5) * 50 + 'px' }\"\n\t\t>\n\t\t\t{{ it }}\n\t\t</div>\n\t</div>\n</template>\n\n<style lang=\"less\" scoped>\n\t.waterfall {\n\t    width: 100%;\n\t    height: unset;\n\t    columns: 5;  /* 列数 */\n\t    column-gap: 10px;  /* 列间距 */\n\t    padding: 30px;\n\t}\n\t.item {\n\t    break-inside: avoid; /* 防止内容被分割 */\n\t    margin-bottom: 10px;  /* 项间距 */\n\t    // width: var(--w);  /* 未设置宽，则元素宽度按照5列平分 */\n\t    height: calc(var(--h) + 200px);\n\t    background: blue;\n\t    border-radius: 10px;\n\t    border: 1px solid #ccc;\n\t    display: flex;\n\t    align-items: center;\n\t    justify-content: center;\n\t    font-size: 30px;\n\t    color: #fff;\n\t}\n</style>\n```\n\n- 效果：\n  ![](/images/瀑布流布局/waterfall2.png)\n\n### 🔥 JavaScript 动态计算（最灵活，兼容性好）\n\n- 优点: 完全可控，支持动态加载、响应式调整列数，兼容性极佳（所有浏览器）\n- 缺点: 需要 JavaScript 参与，初始加载和滚动加载时需计算，复杂度略高\n- 适用场景: 动态内容（如无限滚动）、对排序和兼容性要求高的场景（如电商商品列表）\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\" />\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\t\t<title>瀑布流布局</title>\n\t\t<style>\n\t\t\t.waterfall {\n\t\t\t    display: flex;\n\t\t\t    gap: 16px;  /* 列间距 */\n\t\t\t    padding: 20px;\n\t\t\t    /* align-items: flex-start让子元素高度由自身内容决定，不随子元素中的最高元素拉伸 */\n\t\t\t    align-items: flex-start;\n\t\t\t}\n\t\t\t.column {\n\t\t\t    flex: 1;\n\t\t\t    display: flex;\n\t\t\t    flex-direction: column;\n\t\t\t    gap: 16px;  /* 元素间距 */\n\t\t\t}\n\t\t\t.item {\n\t\t\t    width: 100%;\n\t\t\t    background: blue;\n\t\t\t    border-radius: 10px;\n\t\t\t    border: 1px solid #ccc;\n\t\t\t    display: flex;\n\t\t\t    align-items: center;\n\t\t\t    justify-content: center;\n\t\t\t    font-size: 30px;\n\t\t\t    color: #fff;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div class=\"waterfall\" id=\"waterfall\"></div>\n\t</body>\n\t   \n\t<script>\n\t\t// 初始化列\n\t\tconst columnCount = 5 // 列数\n\t\tconst waterfall = document.getElementById('waterfall')\n\t\tfor (let i = 0; i < columnCount; i++) {\n\t\t\tconst column = document.createElement('div')\n\t\t\tcolumn.className = 'column'\n\t\t\twaterfall.appendChild(column)\n\t\t}\n\t\tconst columns = document.querySelectorAll('.column')\n\n\t\t// 添加元素到最短列\n\t\tfunction addItem(content, height) {\n\t\t\t// 找到高度最小的列\n\t\t\tlet shortestColumn = columns[0]\n\t\t\tcolumns.forEach((col) => {\n\t\t\t\twindow.console.log(col.offsetHeight, shortestColumn.offsetHeight)\n\t\t\t\tif (col.offsetHeight < shortestColumn.offsetHeight) {\n\t\t\t\t\tshortestColumn = col\n\t\t\t\t}\n\t\t\t})\n\t\t\t// 创建元素并添加到最短列\n\t\t\tconst item = document.createElement('div')\n\t\t\titem.className = 'item'\n\t\t\titem.style.height = `${height}px` // 模拟不同高度\n\t\t\titem.innerHTML = content\n\t\t\tshortestColumn.appendChild(item)\n\t\t}\n\n\t\t// 模拟添加内容\n\t\tfor (let i = 0; i < 20; i++) {\n\t\t\tconst randomHeight = Math.floor(Math.random() * 300) + 120 // 120-420px 随机高度\n\t\t\taddItem(`box ${i + 1}`, randomHeight)\n\t\t}\n\t</script>\n</html>\n```\n\n- 效果：\n  ![](/images/瀑布流布局/waterfall3.png)\n\n### 🔥 第三方库实现（快速开发）\n\n使用成熟的瀑布流库，减少重复开发，常见库包括：\n\n- Masonry（最流行）https://masonry.desandro.com\n\n  - 特点：轻量、灵活，支持动画和响应式，需配合 jQuery 或独立使用\n\n- Isotope：https://isotope.metafizzy.co\n\n  - 特点：支持瀑布流、排序、过滤等功能，功能更全面，但体积稍大。\n\n下载依赖：`npm install masonry-layout -D` 或 `npm install isotope-layout -D`\n\n代码如下：(两个插件库使用方法相似)\n\n```html\n<template>\n\t<div class=\"grid\">\n\t\t<div\n\t\t\tclass=\"grid-item\"\n\t\t\tv-for=\"it in 15\"\n\t\t\t:key=\"it\"\n\t\t\t:style=\"{ '--w': '300px', '--h': Math.random() * 200 + 'px' }\"\n\t\t>\n\t\t\t{{ it }}        \n\t\t</div>\n\t</div>\n</template>\n<script setup>\n\timport { onMounted } from 'vue'\n\timport * as Masonry from 'masonry-layout'\n\t// import * as Isotope from 'isotope-layout';\n\tonMounted(() => {\n\t\tconst grid = document.querySelector('.grid')\n\t\tif (grid) {\n\t\t\tnew Masonry(grid, {\n\t\t\t\titemSelector: '.grid-item',\n\t\t\t\tcolumnWidth: '.grid-item',\n\t\t\t\tpercentPosition: true,\n\t\t\t\tgutter: 10, // 列间距\n\t\t\t})\n\t\t}\n\t})\n</script>\n<style lang=\"less\" scoped>\n\t.grid {\n\t    background-color: #999;\n\t    .grid-item {\n\t        width: var(--w);\n\t        height: calc(var(--h) + 120px);  /* 120-320px */\n\t        background-color: blue;\n\t        border-radius: 10px;\n\t        border: 1px solid #ccc;\n\t        margin-bottom: 10px;  /* 元素间距 */\n\t        display: flex;\n\t        align-items: center;\n\t        justify-content: center;\n\t        font-size: 30px;\n\t        color: #fff;\n\t    }\n\t}\n</style>\n```\n\n- 效果：\n  ![](/images/瀑布流布局/waterfall4.png)\n\n【总结】\n\n- 快速实现且兼容性要求不高 → 选 CSS Grid 砖石布局。\n- 兼容性优先且内容静态 → 选 CSS 多列布局。\n- 动态内容或复杂交互 → 选 JavaScript 计算 或 第三方库。\n","source":"_posts/2025-09-03-瀑布流布局.md","raw":"---\ntitle: 瀑布流布局\ndate: 2025-09-03 15:19:04\ntags:\n  - 瀑布流布局\n  - css\ncategories: Javascript\ncover: /images/瀑布流布局/cover.jpg # 封面图\n---\n\n瀑布流布局（Waterfall Layout）是一种流行的网页布局方式，核心特点是不规则的多列网格结构 —— 每列中的内容块高度不同，内容块会像瀑布流水一样，自动填充到当前高度最低的列中，最终形成错落有致、视觉丰富的布局效果。它广泛应用于图片展示、商品列表、内容卡片等场景（如 Pinterest、Unsplash、小红书的首页 / 搜索页）。\n\n### 🔥 CSS Grid 实现（简单高效）\n\n- CSS Grid 的 grid-template-rows: masonry（砖石布局）特性，这是 CSS 原生支持的瀑布流方案，无需 JS 计算。\n  - 优点: 纯 CSS 实现，代码简洁，性能优异，自动适应容器宽度\n  - 缺点: 浏览器兼容性有限（Chrome 87+、Firefox 77+ 支持，Safari 暂不支持）\n  - 适用场景: 对兼容性要求不高的现代网站，快速实现瀑布流\n\n```html\n<template>\n\t<div class=\"waterfall\">\n\t\t<div\n\t\t\tclass=\"item\"\n\t\t\tv-for=\"it in 30\"\n\t\t\t:key=\"it\"\n\t\t\t:style=\"{ '--w': '250px', '--h': Math.floor(Math.random() * 5) * 50 + 'px' }\"\n\t\t>\n\t\t\t{{ it }}        \n\t\t</div>\n\t</div>\n</template>\n\n<style lang=\"less\" scoped>\n\t/**\n\t  * grid-template-rows: masonry\n\t  * CSS Grid 布局中一个特殊的实验性值，用于实现砖石布局（瀑布流效果）。(还有其他实验性值，如 masonry-rows)\n\t  * 【效果】元素会按列排列，每列的高度根据内容自动调整，新元素优先填充到当前最短的列，形成典型的瀑布流视觉效果。\n\t  * 【兼容性与限制】目前在 Firefox 和 Chrome 中支持，但需要开启实验性功能。\n\t  * 【注意】由于是实验性特性，生产环境使用需谨慎，建议作为渐进增强方案。\n\t */\n\t.waterfall {\n\t    display: grid;\n\t    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); /* 每列最小 250px，最大自适应（1fr），自动填充列数 */\n\t    grid-template-rows: masonry; /* 关键：启用砖石布局，【自动填充最短列】 */\n\t    gap: 10px; /* 间距 */\n\t}\n\t.item {\n\t    break-inside: avoid; /* 防止内容被分割 */\n\t    // width: var(--w);\n\t    height: calc(var(--h) + 200px);\n\t    background: blue;\n\t    border-radius: 10px;\n\t    border: 1px solid #ccc;\n\t    display: flex;\n\t    align-items: center;\n\t    justify-content: center;\n\t    font-size: 30px;\n\t    color: #fff;\n\t}\n</style>\n```\n\n- 效果：(我开启了实验性功能支持，masonry 砖石布局好像也没有生效???)\n  ![](/images/瀑布流布局/waterfall1.png)\n- 开启谷歌开启实验性功能：打开浏览，输入 chrome://flags/回车 → 输入实验性功能的关键词搜索 → 启用 Enable\n  ![](/images/瀑布流布局/chrome.png)\n\n### 🔥 CSS 多列布局，利用 CSS 的 columns 多列属性，将内容按列分割，自动填充高度\n\n- 优点：纯 CSS 实现，兼容性较好（IE10+ 支持），代码简单\n- 缺点：内容按 “列” 顺序排列（而非行），滚动加载时可能需要重新排序；列宽固定，动态调整列数需额外处理\n- 适用场景：静态内容展示，对排序顺序要求不高的场景（如：图片墙）\n\n```html\n<template>\n\t<div class=\"waterfall\">\n\t\t<div\n\t\t\tclass=\"item\"\n\t\t\tv-for=\"it in 13\"\n\t\t\t:key=\"it\"\n\t\t\t:style=\"{ '--w': '250px', '--h': Math.floor(Math.random() * 5) * 50 + 'px' }\"\n\t\t>\n\t\t\t{{ it }}\n\t\t</div>\n\t</div>\n</template>\n\n<style lang=\"less\" scoped>\n\t.waterfall {\n\t    width: 100%;\n\t    height: unset;\n\t    columns: 5;  /* 列数 */\n\t    column-gap: 10px;  /* 列间距 */\n\t    padding: 30px;\n\t}\n\t.item {\n\t    break-inside: avoid; /* 防止内容被分割 */\n\t    margin-bottom: 10px;  /* 项间距 */\n\t    // width: var(--w);  /* 未设置宽，则元素宽度按照5列平分 */\n\t    height: calc(var(--h) + 200px);\n\t    background: blue;\n\t    border-radius: 10px;\n\t    border: 1px solid #ccc;\n\t    display: flex;\n\t    align-items: center;\n\t    justify-content: center;\n\t    font-size: 30px;\n\t    color: #fff;\n\t}\n</style>\n```\n\n- 效果：\n  ![](/images/瀑布流布局/waterfall2.png)\n\n### 🔥 JavaScript 动态计算（最灵活，兼容性好）\n\n- 优点: 完全可控，支持动态加载、响应式调整列数，兼容性极佳（所有浏览器）\n- 缺点: 需要 JavaScript 参与，初始加载和滚动加载时需计算，复杂度略高\n- 适用场景: 动态内容（如无限滚动）、对排序和兼容性要求高的场景（如电商商品列表）\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\" />\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\t\t<title>瀑布流布局</title>\n\t\t<style>\n\t\t\t.waterfall {\n\t\t\t    display: flex;\n\t\t\t    gap: 16px;  /* 列间距 */\n\t\t\t    padding: 20px;\n\t\t\t    /* align-items: flex-start让子元素高度由自身内容决定，不随子元素中的最高元素拉伸 */\n\t\t\t    align-items: flex-start;\n\t\t\t}\n\t\t\t.column {\n\t\t\t    flex: 1;\n\t\t\t    display: flex;\n\t\t\t    flex-direction: column;\n\t\t\t    gap: 16px;  /* 元素间距 */\n\t\t\t}\n\t\t\t.item {\n\t\t\t    width: 100%;\n\t\t\t    background: blue;\n\t\t\t    border-radius: 10px;\n\t\t\t    border: 1px solid #ccc;\n\t\t\t    display: flex;\n\t\t\t    align-items: center;\n\t\t\t    justify-content: center;\n\t\t\t    font-size: 30px;\n\t\t\t    color: #fff;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div class=\"waterfall\" id=\"waterfall\"></div>\n\t</body>\n\t   \n\t<script>\n\t\t// 初始化列\n\t\tconst columnCount = 5 // 列数\n\t\tconst waterfall = document.getElementById('waterfall')\n\t\tfor (let i = 0; i < columnCount; i++) {\n\t\t\tconst column = document.createElement('div')\n\t\t\tcolumn.className = 'column'\n\t\t\twaterfall.appendChild(column)\n\t\t}\n\t\tconst columns = document.querySelectorAll('.column')\n\n\t\t// 添加元素到最短列\n\t\tfunction addItem(content, height) {\n\t\t\t// 找到高度最小的列\n\t\t\tlet shortestColumn = columns[0]\n\t\t\tcolumns.forEach((col) => {\n\t\t\t\twindow.console.log(col.offsetHeight, shortestColumn.offsetHeight)\n\t\t\t\tif (col.offsetHeight < shortestColumn.offsetHeight) {\n\t\t\t\t\tshortestColumn = col\n\t\t\t\t}\n\t\t\t})\n\t\t\t// 创建元素并添加到最短列\n\t\t\tconst item = document.createElement('div')\n\t\t\titem.className = 'item'\n\t\t\titem.style.height = `${height}px` // 模拟不同高度\n\t\t\titem.innerHTML = content\n\t\t\tshortestColumn.appendChild(item)\n\t\t}\n\n\t\t// 模拟添加内容\n\t\tfor (let i = 0; i < 20; i++) {\n\t\t\tconst randomHeight = Math.floor(Math.random() * 300) + 120 // 120-420px 随机高度\n\t\t\taddItem(`box ${i + 1}`, randomHeight)\n\t\t}\n\t</script>\n</html>\n```\n\n- 效果：\n  ![](/images/瀑布流布局/waterfall3.png)\n\n### 🔥 第三方库实现（快速开发）\n\n使用成熟的瀑布流库，减少重复开发，常见库包括：\n\n- Masonry（最流行）https://masonry.desandro.com\n\n  - 特点：轻量、灵活，支持动画和响应式，需配合 jQuery 或独立使用\n\n- Isotope：https://isotope.metafizzy.co\n\n  - 特点：支持瀑布流、排序、过滤等功能，功能更全面，但体积稍大。\n\n下载依赖：`npm install masonry-layout -D` 或 `npm install isotope-layout -D`\n\n代码如下：(两个插件库使用方法相似)\n\n```html\n<template>\n\t<div class=\"grid\">\n\t\t<div\n\t\t\tclass=\"grid-item\"\n\t\t\tv-for=\"it in 15\"\n\t\t\t:key=\"it\"\n\t\t\t:style=\"{ '--w': '300px', '--h': Math.random() * 200 + 'px' }\"\n\t\t>\n\t\t\t{{ it }}        \n\t\t</div>\n\t</div>\n</template>\n<script setup>\n\timport { onMounted } from 'vue'\n\timport * as Masonry from 'masonry-layout'\n\t// import * as Isotope from 'isotope-layout';\n\tonMounted(() => {\n\t\tconst grid = document.querySelector('.grid')\n\t\tif (grid) {\n\t\t\tnew Masonry(grid, {\n\t\t\t\titemSelector: '.grid-item',\n\t\t\t\tcolumnWidth: '.grid-item',\n\t\t\t\tpercentPosition: true,\n\t\t\t\tgutter: 10, // 列间距\n\t\t\t})\n\t\t}\n\t})\n</script>\n<style lang=\"less\" scoped>\n\t.grid {\n\t    background-color: #999;\n\t    .grid-item {\n\t        width: var(--w);\n\t        height: calc(var(--h) + 120px);  /* 120-320px */\n\t        background-color: blue;\n\t        border-radius: 10px;\n\t        border: 1px solid #ccc;\n\t        margin-bottom: 10px;  /* 元素间距 */\n\t        display: flex;\n\t        align-items: center;\n\t        justify-content: center;\n\t        font-size: 30px;\n\t        color: #fff;\n\t    }\n\t}\n</style>\n```\n\n- 效果：\n  ![](/images/瀑布流布局/waterfall4.png)\n\n【总结】\n\n- 快速实现且兼容性要求不高 → 选 CSS Grid 砖石布局。\n- 兼容性优先且内容静态 → 选 CSS 多列布局。\n- 动态内容或复杂交互 → 选 JavaScript 计算 或 第三方库。\n","slug":"瀑布流布局","published":1,"updated":"2025-09-13T08:09:15.106Z","comments":1,"layout":"post","photos":[],"_id":"cmfhzm6b50001iwnc071fapb6","content":"<p>瀑布流布局（Waterfall Layout）是一种流行的网页布局方式，核心特点是不规则的多列网格结构 —— 每列中的内容块高度不同，内容块会像瀑布流水一样，自动填充到当前高度最低的列中，最终形成错落有致、视觉丰富的布局效果。它广泛应用于图片展示、商品列表、内容卡片等场景（如 Pinterest、Unsplash、小红书的首页 &#x2F; 搜索页）。</p>\n<h3 id=\"🔥-CSS-Grid-实现（简单高效）\"><a href=\"#🔥-CSS-Grid-实现（简单高效）\" class=\"headerlink\" title=\"🔥 CSS Grid 实现（简单高效）\"></a>🔥 CSS Grid 实现（简单高效）</h3><ul>\n<li>CSS Grid 的 grid-template-rows: masonry（砖石布局）特性，这是 CSS 原生支持的瀑布流方案，无需 JS 计算。<ul>\n<li>优点: 纯 CSS 实现，代码简洁，性能优异，自动适应容器宽度</li>\n<li>缺点: 浏览器兼容性有限（Chrome 87+、Firefox 77+ 支持，Safari 暂不支持）</li>\n<li>适用场景: 对兼容性要求不高的现代网站，快速实现瀑布流</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;waterfall&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t<span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t<span class=\"attr\">v-for</span>=<span class=\"string\">&quot;it in 30&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t<span class=\"attr\">:key</span>=<span class=\"string\">&quot;it&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t<span class=\"attr\">:style</span>=<span class=\"string\">&quot;&#123; &#x27;--w&#x27;: &#x27;250px&#x27;, &#x27;--h&#x27;: Math.floor(Math.random() * 5) * 50 + &#x27;px&#x27; &#125;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t&gt;</span></span><br><span class=\"line\">\t\t\t&#123;&#123; it &#125;&#125;        </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;less&quot;</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"comment\">/**</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t  * grid-template-rows: masonry</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t  * CSS Grid 布局中一个特殊的实验性值，用于实现砖石布局（瀑布流效果）。(还有其他实验性值，如 masonry-rows)</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t  * 【效果】元素会按列排列，每列的高度根据内容自动调整，新元素优先填充到当前最短的列，形成典型的瀑布流视觉效果。</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t  * 【兼容性与限制】目前在 Firefox 和 Chrome 中支持，但需要开启实验性功能。</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t  * 【注意】由于是实验性特性，生产环境使用需谨慎，建议作为渐进增强方案。</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"selector-class\">.waterfall</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">display</span>: grid;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">grid-template-columns</span>: <span class=\"built_in\">repeat</span>(auto-fill, <span class=\"built_in\">minmax</span>(<span class=\"number\">250px</span>, <span class=\"number\">1</span>fr)); <span class=\"comment\">/* 每列最小 250px，最大自适应（1fr），自动填充列数 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">grid-template-rows</span>: masonry; <span class=\"comment\">/* 关键：启用砖石布局，【自动填充最短列】 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">gap</span>: <span class=\"number\">10px</span>; <span class=\"comment\">/* 间距 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"selector-class\">.item</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">break-inside</span>: avoid; <span class=\"comment\">/* 防止内容被分割 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t    // <span class=\"attribute\">width</span>: <span class=\"built_in\">var</span>(--w);</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">height</span>: <span class=\"built_in\">calc</span>(<span class=\"built_in\">var</span>(--h) + <span class=\"number\">200px</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">background</span>: blue;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">align-items</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">justify-content</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">font-size</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>效果：(我开启了实验性功能支持，masonry 砖石布局好像也没有生效???)<br><img src=\"/images/%E7%80%91%E5%B8%83%E6%B5%81%E5%B8%83%E5%B1%80/waterfall1.png\"></li>\n<li>开启谷歌开启实验性功能：打开浏览，输入 chrome:&#x2F;&#x2F;flags&#x2F;回车 → 输入实验性功能的关键词搜索 → 启用 Enable<br><img src=\"/images/%E7%80%91%E5%B8%83%E6%B5%81%E5%B8%83%E5%B1%80/chrome.png\"></li>\n</ul>\n<h3 id=\"🔥-CSS-多列布局，利用-CSS-的-columns-多列属性，将内容按列分割，自动填充高度\"><a href=\"#🔥-CSS-多列布局，利用-CSS-的-columns-多列属性，将内容按列分割，自动填充高度\" class=\"headerlink\" title=\"🔥 CSS 多列布局，利用 CSS 的 columns 多列属性，将内容按列分割，自动填充高度\"></a>🔥 CSS 多列布局，利用 CSS 的 columns 多列属性，将内容按列分割，自动填充高度</h3><ul>\n<li>优点：纯 CSS 实现，兼容性较好（IE10+ 支持），代码简单</li>\n<li>缺点：内容按 “列” 顺序排列（而非行），滚动加载时可能需要重新排序；列宽固定，动态调整列数需额外处理</li>\n<li>适用场景：静态内容展示，对排序顺序要求不高的场景（如：图片墙）</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;waterfall&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t<span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t<span class=\"attr\">v-for</span>=<span class=\"string\">&quot;it in 13&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t<span class=\"attr\">:key</span>=<span class=\"string\">&quot;it&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t<span class=\"attr\">:style</span>=<span class=\"string\">&quot;&#123; &#x27;--w&#x27;: &#x27;250px&#x27;, &#x27;--h&#x27;: Math.floor(Math.random() * 5) * 50 + &#x27;px&#x27; &#125;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t&gt;</span></span><br><span class=\"line\">\t\t\t&#123;&#123; it &#125;&#125;</span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;less&quot;</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"selector-class\">.waterfall</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">height</span>: unset;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">columns</span>: <span class=\"number\">5</span>;  <span class=\"comment\">/* 列数 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">column-gap</span>: <span class=\"number\">10px</span>;  <span class=\"comment\">/* 列间距 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">padding</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"selector-class\">.item</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">break-inside</span>: avoid; <span class=\"comment\">/* 防止内容被分割 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">10px</span>;  <span class=\"comment\">/* 项间距 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t    // <span class=\"attribute\">width</span>: <span class=\"built_in\">var</span>(--w);  <span class=\"comment\">/* 未设置宽，则元素宽度按照5列平分 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">height</span>: <span class=\"built_in\">calc</span>(<span class=\"built_in\">var</span>(--h) + <span class=\"number\">200px</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">background</span>: blue;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">align-items</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">justify-content</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">font-size</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>效果：<br><img src=\"/images/%E7%80%91%E5%B8%83%E6%B5%81%E5%B8%83%E5%B1%80/waterfall2.png\"></li>\n</ul>\n<h3 id=\"🔥-JavaScript-动态计算（最灵活，兼容性好）\"><a href=\"#🔥-JavaScript-动态计算（最灵活，兼容性好）\" class=\"headerlink\" title=\"🔥 JavaScript 动态计算（最灵活，兼容性好）\"></a>🔥 JavaScript 动态计算（最灵活，兼容性好）</h3><ul>\n<li>优点: 完全可控，支持动态加载、响应式调整列数，兼容性极佳（所有浏览器）</li>\n<li>缺点: 需要 JavaScript 参与，初始加载和滚动加载时需计算，复杂度略高</li>\n<li>适用场景: 动态内容（如无限滚动）、对排序和兼容性要求高的场景（如电商商品列表）</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>瀑布流布局<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.waterfall</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">gap</span>: <span class=\"number\">16px</span>;  <span class=\"comment\">/* 列间距 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"comment\">/* align-items: flex-start让子元素高度由自身内容决定，不随子元素中的最高元素拉伸 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">align-items</span>: flex-start;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.column</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">flex-direction</span>: column;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">gap</span>: <span class=\"number\">16px</span>;  <span class=\"comment\">/* 元素间距 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.item</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">background</span>: blue;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">align-items</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">justify-content</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">font-size</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;waterfall&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;waterfall&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t   </span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"comment\">// 初始化列</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"keyword\">const</span> columnCount = <span class=\"number\">5</span> <span class=\"comment\">// 列数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"keyword\">const</span> waterfall = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;waterfall&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; columnCount; i++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">const</span> column = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;div&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\tcolumn.<span class=\"property\">className</span> = <span class=\"string\">&#x27;column&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\twaterfall.<span class=\"title function_\">appendChild</span>(column)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"keyword\">const</span> columns = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelectorAll</span>(<span class=\"string\">&#x27;.column&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"comment\">// 添加元素到最短列</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"keyword\">function</span> <span class=\"title function_\">addItem</span>(<span class=\"params\">content, height</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// 找到高度最小的列</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">let</span> shortestColumn = columns[<span class=\"number\">0</span>]</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\tcolumns.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">col</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"variable language_\">window</span>.<span class=\"property\">console</span>.<span class=\"title function_\">log</span>(col.<span class=\"property\">offsetHeight</span>, shortestColumn.<span class=\"property\">offsetHeight</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">if</span> (col.<span class=\"property\">offsetHeight</span> &lt; shortestColumn.<span class=\"property\">offsetHeight</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\tshortestColumn = col</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// 创建元素并添加到最短列</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">const</span> item = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;div&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\titem.<span class=\"property\">className</span> = <span class=\"string\">&#x27;item&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\titem.<span class=\"property\">style</span>.<span class=\"property\">height</span> = <span class=\"string\">`<span class=\"subst\">$&#123;height&#125;</span>px`</span> <span class=\"comment\">// 模拟不同高度</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\titem.<span class=\"property\">innerHTML</span> = content</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\tshortestColumn.<span class=\"title function_\">appendChild</span>(item)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"comment\">// 模拟添加内容</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">20</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">const</span> randomHeight = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * <span class=\"number\">300</span>) + <span class=\"number\">120</span> <span class=\"comment\">// 120-420px 随机高度</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"title function_\">addItem</span>(<span class=\"string\">`box <span class=\"subst\">$&#123;i + <span class=\"number\">1</span>&#125;</span>`</span>, randomHeight)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>效果：<br><img src=\"/images/%E7%80%91%E5%B8%83%E6%B5%81%E5%B8%83%E5%B1%80/waterfall3.png\"></li>\n</ul>\n<h3 id=\"🔥-第三方库实现（快速开发）\"><a href=\"#🔥-第三方库实现（快速开发）\" class=\"headerlink\" title=\"🔥 第三方库实现（快速开发）\"></a>🔥 第三方库实现（快速开发）</h3><p>使用成熟的瀑布流库，减少重复开发，常见库包括：</p>\n<ul>\n<li><p>Masonry（最流行）<a href=\"https://masonry.desandro.com/\">https://masonry.desandro.com</a></p>\n<ul>\n<li>特点：轻量、灵活，支持动画和响应式，需配合 jQuery 或独立使用</li>\n</ul>\n</li>\n<li><p>Isotope：<a href=\"https://isotope.metafizzy.co/\">https://isotope.metafizzy.co</a></p>\n<ul>\n<li>特点：支持瀑布流、排序、过滤等功能，功能更全面，但体积稍大。</li>\n</ul>\n</li>\n</ul>\n<p>下载依赖：<code>npm install masonry-layout -D</code> 或 <code>npm install isotope-layout -D</code></p>\n<p>代码如下：(两个插件库使用方法相似)</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;grid&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t<span class=\"attr\">class</span>=<span class=\"string\">&quot;grid-item&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t<span class=\"attr\">v-for</span>=<span class=\"string\">&quot;it in 15&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t<span class=\"attr\">:key</span>=<span class=\"string\">&quot;it&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t<span class=\"attr\">:style</span>=<span class=\"string\">&quot;&#123; &#x27;--w&#x27;: &#x27;300px&#x27;, &#x27;--h&#x27;: Math.random() * 200 + &#x27;px&#x27; &#125;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t&gt;</span></span><br><span class=\"line\">\t\t\t&#123;&#123; it &#125;&#125;        </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"keyword\">import</span> &#123; onMounted &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> <span class=\"title class_\">Masonry</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;masonry-layout&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"comment\">// import * as Isotope from &#x27;isotope-layout&#x27;;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"title function_\">onMounted</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"keyword\">const</span> grid = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.grid&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"keyword\">if</span> (grid) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">new</span> <span class=\"title class_\">Masonry</span>(grid, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">itemSelector</span>: <span class=\"string\">&#x27;.grid-item&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">columnWidth</span>: <span class=\"string\">&#x27;.grid-item&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">percentPosition</span>: <span class=\"literal\">true</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">gutter</span>: <span class=\"number\">10</span>, <span class=\"comment\">// 列间距</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;less&quot;</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"selector-class\">.grid</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">background-color</span>: <span class=\"number\">#999</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"selector-class\">.grid-item</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t        <span class=\"attribute\">width</span>: <span class=\"built_in\">var</span>(--w);</span></span><br><span class=\"line\"><span class=\"language-css\">\t        <span class=\"attribute\">height</span>: <span class=\"built_in\">calc</span>(<span class=\"built_in\">var</span>(--h) + <span class=\"number\">120px</span>);  <span class=\"comment\">/* 120-320px */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t        <span class=\"attribute\">background-color</span>: blue;</span></span><br><span class=\"line\"><span class=\"language-css\">\t        <span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t        <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t        <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">10px</span>;  <span class=\"comment\">/* 元素间距 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t        <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">\t        <span class=\"attribute\">align-items</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t        <span class=\"attribute\">justify-content</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t        <span class=\"attribute\">font-size</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t        <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>效果：<br><img src=\"/images/%E7%80%91%E5%B8%83%E6%B5%81%E5%B8%83%E5%B1%80/waterfall4.png\"></li>\n</ul>\n<p>【总结】</p>\n<ul>\n<li>快速实现且兼容性要求不高 → 选 CSS Grid 砖石布局。</li>\n<li>兼容性优先且内容静态 → 选 CSS 多列布局。</li>\n<li>动态内容或复杂交互 → 选 JavaScript 计算 或 第三方库。</li>\n</ul>\n","excerpt":"","more":"<p>瀑布流布局（Waterfall Layout）是一种流行的网页布局方式，核心特点是不规则的多列网格结构 —— 每列中的内容块高度不同，内容块会像瀑布流水一样，自动填充到当前高度最低的列中，最终形成错落有致、视觉丰富的布局效果。它广泛应用于图片展示、商品列表、内容卡片等场景（如 Pinterest、Unsplash、小红书的首页 &#x2F; 搜索页）。</p>\n<h3 id=\"🔥-CSS-Grid-实现（简单高效）\"><a href=\"#🔥-CSS-Grid-实现（简单高效）\" class=\"headerlink\" title=\"🔥 CSS Grid 实现（简单高效）\"></a>🔥 CSS Grid 实现（简单高效）</h3><ul>\n<li>CSS Grid 的 grid-template-rows: masonry（砖石布局）特性，这是 CSS 原生支持的瀑布流方案，无需 JS 计算。<ul>\n<li>优点: 纯 CSS 实现，代码简洁，性能优异，自动适应容器宽度</li>\n<li>缺点: 浏览器兼容性有限（Chrome 87+、Firefox 77+ 支持，Safari 暂不支持）</li>\n<li>适用场景: 对兼容性要求不高的现代网站，快速实现瀑布流</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;waterfall&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t<span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t<span class=\"attr\">v-for</span>=<span class=\"string\">&quot;it in 30&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t<span class=\"attr\">:key</span>=<span class=\"string\">&quot;it&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t<span class=\"attr\">:style</span>=<span class=\"string\">&quot;&#123; &#x27;--w&#x27;: &#x27;250px&#x27;, &#x27;--h&#x27;: Math.floor(Math.random() * 5) * 50 + &#x27;px&#x27; &#125;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t&gt;</span></span><br><span class=\"line\">\t\t\t&#123;&#123; it &#125;&#125;        </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;less&quot;</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"comment\">/**</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t  * grid-template-rows: masonry</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t  * CSS Grid 布局中一个特殊的实验性值，用于实现砖石布局（瀑布流效果）。(还有其他实验性值，如 masonry-rows)</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t  * 【效果】元素会按列排列，每列的高度根据内容自动调整，新元素优先填充到当前最短的列，形成典型的瀑布流视觉效果。</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t  * 【兼容性与限制】目前在 Firefox 和 Chrome 中支持，但需要开启实验性功能。</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t  * 【注意】由于是实验性特性，生产环境使用需谨慎，建议作为渐进增强方案。</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"selector-class\">.waterfall</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">display</span>: grid;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">grid-template-columns</span>: <span class=\"built_in\">repeat</span>(auto-fill, <span class=\"built_in\">minmax</span>(<span class=\"number\">250px</span>, <span class=\"number\">1</span>fr)); <span class=\"comment\">/* 每列最小 250px，最大自适应（1fr），自动填充列数 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">grid-template-rows</span>: masonry; <span class=\"comment\">/* 关键：启用砖石布局，【自动填充最短列】 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">gap</span>: <span class=\"number\">10px</span>; <span class=\"comment\">/* 间距 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"selector-class\">.item</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">break-inside</span>: avoid; <span class=\"comment\">/* 防止内容被分割 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t    // <span class=\"attribute\">width</span>: <span class=\"built_in\">var</span>(--w);</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">height</span>: <span class=\"built_in\">calc</span>(<span class=\"built_in\">var</span>(--h) + <span class=\"number\">200px</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">background</span>: blue;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">align-items</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">justify-content</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">font-size</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>效果：(我开启了实验性功能支持，masonry 砖石布局好像也没有生效???)<br><img src=\"/images/%E7%80%91%E5%B8%83%E6%B5%81%E5%B8%83%E5%B1%80/waterfall1.png\"></li>\n<li>开启谷歌开启实验性功能：打开浏览，输入 chrome:&#x2F;&#x2F;flags&#x2F;回车 → 输入实验性功能的关键词搜索 → 启用 Enable<br><img src=\"/images/%E7%80%91%E5%B8%83%E6%B5%81%E5%B8%83%E5%B1%80/chrome.png\"></li>\n</ul>\n<h3 id=\"🔥-CSS-多列布局，利用-CSS-的-columns-多列属性，将内容按列分割，自动填充高度\"><a href=\"#🔥-CSS-多列布局，利用-CSS-的-columns-多列属性，将内容按列分割，自动填充高度\" class=\"headerlink\" title=\"🔥 CSS 多列布局，利用 CSS 的 columns 多列属性，将内容按列分割，自动填充高度\"></a>🔥 CSS 多列布局，利用 CSS 的 columns 多列属性，将内容按列分割，自动填充高度</h3><ul>\n<li>优点：纯 CSS 实现，兼容性较好（IE10+ 支持），代码简单</li>\n<li>缺点：内容按 “列” 顺序排列（而非行），滚动加载时可能需要重新排序；列宽固定，动态调整列数需额外处理</li>\n<li>适用场景：静态内容展示，对排序顺序要求不高的场景（如：图片墙）</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;waterfall&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t<span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t<span class=\"attr\">v-for</span>=<span class=\"string\">&quot;it in 13&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t<span class=\"attr\">:key</span>=<span class=\"string\">&quot;it&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t<span class=\"attr\">:style</span>=<span class=\"string\">&quot;&#123; &#x27;--w&#x27;: &#x27;250px&#x27;, &#x27;--h&#x27;: Math.floor(Math.random() * 5) * 50 + &#x27;px&#x27; &#125;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t&gt;</span></span><br><span class=\"line\">\t\t\t&#123;&#123; it &#125;&#125;</span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;less&quot;</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"selector-class\">.waterfall</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">height</span>: unset;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">columns</span>: <span class=\"number\">5</span>;  <span class=\"comment\">/* 列数 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">column-gap</span>: <span class=\"number\">10px</span>;  <span class=\"comment\">/* 列间距 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">padding</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"selector-class\">.item</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">break-inside</span>: avoid; <span class=\"comment\">/* 防止内容被分割 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">10px</span>;  <span class=\"comment\">/* 项间距 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t    // <span class=\"attribute\">width</span>: <span class=\"built_in\">var</span>(--w);  <span class=\"comment\">/* 未设置宽，则元素宽度按照5列平分 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">height</span>: <span class=\"built_in\">calc</span>(<span class=\"built_in\">var</span>(--h) + <span class=\"number\">200px</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">background</span>: blue;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">align-items</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">justify-content</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">font-size</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>效果：<br><img src=\"/images/%E7%80%91%E5%B8%83%E6%B5%81%E5%B8%83%E5%B1%80/waterfall2.png\"></li>\n</ul>\n<h3 id=\"🔥-JavaScript-动态计算（最灵活，兼容性好）\"><a href=\"#🔥-JavaScript-动态计算（最灵活，兼容性好）\" class=\"headerlink\" title=\"🔥 JavaScript 动态计算（最灵活，兼容性好）\"></a>🔥 JavaScript 动态计算（最灵活，兼容性好）</h3><ul>\n<li>优点: 完全可控，支持动态加载、响应式调整列数，兼容性极佳（所有浏览器）</li>\n<li>缺点: 需要 JavaScript 参与，初始加载和滚动加载时需计算，复杂度略高</li>\n<li>适用场景: 动态内容（如无限滚动）、对排序和兼容性要求高的场景（如电商商品列表）</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>瀑布流布局<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.waterfall</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">gap</span>: <span class=\"number\">16px</span>;  <span class=\"comment\">/* 列间距 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"comment\">/* align-items: flex-start让子元素高度由自身内容决定，不随子元素中的最高元素拉伸 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">align-items</span>: flex-start;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.column</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">flex-direction</span>: column;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">gap</span>: <span class=\"number\">16px</span>;  <span class=\"comment\">/* 元素间距 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.item</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">background</span>: blue;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">align-items</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">justify-content</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">font-size</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t    <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;waterfall&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;waterfall&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t   </span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"comment\">// 初始化列</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"keyword\">const</span> columnCount = <span class=\"number\">5</span> <span class=\"comment\">// 列数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"keyword\">const</span> waterfall = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;waterfall&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; columnCount; i++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">const</span> column = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;div&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\tcolumn.<span class=\"property\">className</span> = <span class=\"string\">&#x27;column&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\twaterfall.<span class=\"title function_\">appendChild</span>(column)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"keyword\">const</span> columns = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelectorAll</span>(<span class=\"string\">&#x27;.column&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"comment\">// 添加元素到最短列</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"keyword\">function</span> <span class=\"title function_\">addItem</span>(<span class=\"params\">content, height</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// 找到高度最小的列</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">let</span> shortestColumn = columns[<span class=\"number\">0</span>]</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\tcolumns.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">col</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"variable language_\">window</span>.<span class=\"property\">console</span>.<span class=\"title function_\">log</span>(col.<span class=\"property\">offsetHeight</span>, shortestColumn.<span class=\"property\">offsetHeight</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">if</span> (col.<span class=\"property\">offsetHeight</span> &lt; shortestColumn.<span class=\"property\">offsetHeight</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\tshortestColumn = col</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// 创建元素并添加到最短列</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">const</span> item = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;div&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\titem.<span class=\"property\">className</span> = <span class=\"string\">&#x27;item&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\titem.<span class=\"property\">style</span>.<span class=\"property\">height</span> = <span class=\"string\">`<span class=\"subst\">$&#123;height&#125;</span>px`</span> <span class=\"comment\">// 模拟不同高度</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\titem.<span class=\"property\">innerHTML</span> = content</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\tshortestColumn.<span class=\"title function_\">appendChild</span>(item)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"comment\">// 模拟添加内容</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">20</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">const</span> randomHeight = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * <span class=\"number\">300</span>) + <span class=\"number\">120</span> <span class=\"comment\">// 120-420px 随机高度</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"title function_\">addItem</span>(<span class=\"string\">`box <span class=\"subst\">$&#123;i + <span class=\"number\">1</span>&#125;</span>`</span>, randomHeight)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>效果：<br><img src=\"/images/%E7%80%91%E5%B8%83%E6%B5%81%E5%B8%83%E5%B1%80/waterfall3.png\"></li>\n</ul>\n<h3 id=\"🔥-第三方库实现（快速开发）\"><a href=\"#🔥-第三方库实现（快速开发）\" class=\"headerlink\" title=\"🔥 第三方库实现（快速开发）\"></a>🔥 第三方库实现（快速开发）</h3><p>使用成熟的瀑布流库，减少重复开发，常见库包括：</p>\n<ul>\n<li><p>Masonry（最流行）<a href=\"https://masonry.desandro.com/\">https://masonry.desandro.com</a></p>\n<ul>\n<li>特点：轻量、灵活，支持动画和响应式，需配合 jQuery 或独立使用</li>\n</ul>\n</li>\n<li><p>Isotope：<a href=\"https://isotope.metafizzy.co/\">https://isotope.metafizzy.co</a></p>\n<ul>\n<li>特点：支持瀑布流、排序、过滤等功能，功能更全面，但体积稍大。</li>\n</ul>\n</li>\n</ul>\n<p>下载依赖：<code>npm install masonry-layout -D</code> 或 <code>npm install isotope-layout -D</code></p>\n<p>代码如下：(两个插件库使用方法相似)</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;grid&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t<span class=\"attr\">class</span>=<span class=\"string\">&quot;grid-item&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t<span class=\"attr\">v-for</span>=<span class=\"string\">&quot;it in 15&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t<span class=\"attr\">:key</span>=<span class=\"string\">&quot;it&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t<span class=\"attr\">:style</span>=<span class=\"string\">&quot;&#123; &#x27;--w&#x27;: &#x27;300px&#x27;, &#x27;--h&#x27;: Math.random() * 200 + &#x27;px&#x27; &#125;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t&gt;</span></span><br><span class=\"line\">\t\t\t&#123;&#123; it &#125;&#125;        </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"keyword\">import</span> &#123; onMounted &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> <span class=\"title class_\">Masonry</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;masonry-layout&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"comment\">// import * as Isotope from &#x27;isotope-layout&#x27;;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"title function_\">onMounted</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"keyword\">const</span> grid = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.grid&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"keyword\">if</span> (grid) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">new</span> <span class=\"title class_\">Masonry</span>(grid, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">itemSelector</span>: <span class=\"string\">&#x27;.grid-item&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">columnWidth</span>: <span class=\"string\">&#x27;.grid-item&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">percentPosition</span>: <span class=\"literal\">true</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">gutter</span>: <span class=\"number\">10</span>, <span class=\"comment\">// 列间距</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;less&quot;</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"selector-class\">.grid</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"attribute\">background-color</span>: <span class=\"number\">#999</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    <span class=\"selector-class\">.grid-item</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t        <span class=\"attribute\">width</span>: <span class=\"built_in\">var</span>(--w);</span></span><br><span class=\"line\"><span class=\"language-css\">\t        <span class=\"attribute\">height</span>: <span class=\"built_in\">calc</span>(<span class=\"built_in\">var</span>(--h) + <span class=\"number\">120px</span>);  <span class=\"comment\">/* 120-320px */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t        <span class=\"attribute\">background-color</span>: blue;</span></span><br><span class=\"line\"><span class=\"language-css\">\t        <span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t        <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t        <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">10px</span>;  <span class=\"comment\">/* 元素间距 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t        <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">\t        <span class=\"attribute\">align-items</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t        <span class=\"attribute\">justify-content</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t        <span class=\"attribute\">font-size</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t        <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t    &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>效果：<br><img src=\"/images/%E7%80%91%E5%B8%83%E6%B5%81%E5%B8%83%E5%B1%80/waterfall4.png\"></li>\n</ul>\n<p>【总结】</p>\n<ul>\n<li>快速实现且兼容性要求不高 → 选 CSS Grid 砖石布局。</li>\n<li>兼容性优先且内容静态 → 选 CSS 多列布局。</li>\n<li>动态内容或复杂交互 → 选 JavaScript 计算 或 第三方库。</li>\n</ul>\n"},{"title":"SEO优化","date":"2025-09-11T02:26:11.000Z","cover":"/images/SEO优化/cover.jpg","_content":"\n## 🔍 前端开发 SEO 优化策略详解\n\n### 🔹 HTML 页面结构与标签优化\n\n(1) **语义化 HTML**\n\n- 使用正确的语义化标签：`<header>`、`<nav>`、`<main>`、`<article>`、`<section>`、`<footer>`\n\n- 文章标题用 h1-h6：`<h1>`（一个页面仅一个，包含主要关键词），子标题 `<h2> - <h6>` 标题层级合理分布\n\n- 列表数据用 `<ul> / <ol>`，强调用 `<strong>` 而不是` <b>`\n\n- 所有 `<img>` 标签都添加 alt 文本描述属性（内容包含关键词）\n\n- `<a>`链接：需添加 href（避免`javascript:void(0)`），锚文本需描述目标页面内容，title 鼠标悬停时显示的提示信息\n\n- 避免用图片替代文字：如标题、按钮文本需用 HTML 文字，而非图片（蜘蛛无法识别图片中的文字）\n\n- 扁平化结构：`/home/page/content` (页面层级过多，蜘蛛易丢失深层链接)\n\n👉 好处：提升爬虫理解页面结构的能力\n\n(2) Meta 标签 (辅助手段)\n\n- `<title>`标签：每个页面独立、包含核心关键词\n\n- **描述 description**：内容摘要（120 字内），包含关键词和用户利益点，简洁准确，提升搜索结果点击率（CTR）\n  `<meta name=\"description\" content=\"本文详解前端SEO的10个核心策略，包括语义化标签、图片优化、加载速度提升，帮助开发者快速掌握优化技巧。\">`\n\n- **关键字 keywords**：虽权重降低，但可辅助蜘蛛理解核心关键词（避免堆砌，3-5 个为宜）\n\n  `<meta name=\"keywords\" content=\"前端SEO, Meta标签优化, 搜索引擎排名\">`\n\n- `<meta name=\"robots\">`：决定页面是否被索引、是否传递链接权重\n\n(3) **路由/链接优化**\n\n- 使用静态化、语义化的 URL (避免动态参数过多)，如：\n\n  - ✅ `/blog/seo-strategy`\n\n  - ❌ `/index.php?id=123`\n\n- 路由使用 history 模式，比 hash 模式更好被抓取\n\n  - hash 模式`/#/query`，在解析 URL 时，会忽略 '#' 及其后面的内容\n\n- 在页面内，给内部链接添加 title 和语义清晰的锚文本，可以提示/促进用户去点击\n\n  - `<a href=\"/seo-strategy\" title=\"详解前端开发中的SEO优化方法\">前端SEO优化策略</a>`\n\n### 🔹 内容可见性与抓取优化\n\n(1) 爬虫可见性\n\n- 避免 纯前端渲染（CSR）导致内容加载不到 → 可采用 **SSR（服务端渲染） 或 预渲染（Prerender）**\n\n- **对于 Vue、React 应用：可用 Nuxt.js、Next.js 或 静态网站生成 (SSG)**\n\n(2) 图片优化\n\n- 使用 `<img>` 并加 alt 文本描述\n\n- WebP/AVIF 格式，懒加载 `loading=\"lazy\"`\n\n- 为重要图片生成 结构化数据（如产品图、文章配图）\n\n(3) 多语言站点\n\n- `<link rel=\"alternate\" hreflang=\"xx\" ...>` 告诉搜索引擎不同语言的版本。\n\n### 🔹 页面性能优化（影响排名的核心指标 Core Web Vitals）\n\nGoogle 的 CWV 三大指标：\n\n- LCP (最大内容渲染时间)：控制在 ≤2.5s\n\n- FID (首次输入延迟)：≤100ms\n\n- CLS (累计布局偏移)：≤0.1\n\n前端优化手段：\n\n- 使用 HTTP/2、CDN 加速\n\n- 图片懒加载、视频分片加载\n\n- CSS/JS 压缩、拆分，减少阻塞\n\n- 关键 CSS 内联，非关键资源延迟加载\n\n### 🔹 技术层面优化\n\n(1) Sitemap & Robots\n\n- `/sitemap.xml`：清晰列出页面结构\n\n- `robots.txt`：在网站根目录放置 robots.txt 文件，明确告知蜘蛛 \"可爬取\" 和 \"不可爬取\" 的内容（控制抓取范围，避免蜘蛛浪费资源爬取无价值页面）\n\n(2) 结构化数据（Schema.org）\n\n- 使用 JSON-LD 添加：\n\n  - 文章：Article\n\n  - 产品：Product\n\n  - FAQ：FAQPage\n\n  - 面包屑：BreadcrumbList\n\n👉 有助于获取 富摘要（Rich Snippets），提高点击率\n\n(3) 移动端优化\n\n- 响应式布局（RWD）\n\n- viewport 标签\n\n- 避免 Flash / 不兼容插件\n\n### 🔹 用户体验与交互\n\n- 确保页面 无 404 错误，有自定义 404 页面\n\n- 页面导航清晰，层级不要过深（建议 ≤3 层）\n\n- 提高可访问性（WCAG 标准）：如 ARIA 属性、键盘导航\n\n- 页面加载时避免 广告过多、弹窗遮挡内容\n\n### 🔹 前端开发常见 SEO 陷阱\n\n- ❌ 单页应用（SPA）未处理 SSR → 内容抓取困难\n\n- ❌ 动态生成的链接没有 href → 爬虫无法跟踪\n\n- ❌ 图片仅用 CSS 背景图，缺少 alt → 无法索引\n\n- ❌ 过度依赖 JS 渲染 meta 标签 → 搜索引擎可能忽略\n\n### 🔹 前端工具推荐\n\n- **Lighthouse** (谷歌浏览器插件)：检测性能与 SEO 指标\n\n- **Google Search Console**：监控收录、报错与排名问题\n\n- **Ahrefs / SEMrush** (关键词分析网站)：关键词分析与竞争对手分析/调研\n\n- **Screaming Frog**：模拟爬虫抓取检查网，发现问题\n\n✅ 总结一下：\n前端 SEO 优化核心就是 让搜索引擎能更快、更准确、更全面地理解你的网站内容，并且在性能、结构、可访问性上为用户提供良好体验\n","source":"_posts/2025-09-11-SEO优化.md","raw":"---\ntitle: SEO优化\ndate: 2025-09-11 10:26:11\ntags:\n  - SEO\ncategories: SEO\ncover: /images/SEO优化/cover.jpg # 封面图\n---\n\n## 🔍 前端开发 SEO 优化策略详解\n\n### 🔹 HTML 页面结构与标签优化\n\n(1) **语义化 HTML**\n\n- 使用正确的语义化标签：`<header>`、`<nav>`、`<main>`、`<article>`、`<section>`、`<footer>`\n\n- 文章标题用 h1-h6：`<h1>`（一个页面仅一个，包含主要关键词），子标题 `<h2> - <h6>` 标题层级合理分布\n\n- 列表数据用 `<ul> / <ol>`，强调用 `<strong>` 而不是` <b>`\n\n- 所有 `<img>` 标签都添加 alt 文本描述属性（内容包含关键词）\n\n- `<a>`链接：需添加 href（避免`javascript:void(0)`），锚文本需描述目标页面内容，title 鼠标悬停时显示的提示信息\n\n- 避免用图片替代文字：如标题、按钮文本需用 HTML 文字，而非图片（蜘蛛无法识别图片中的文字）\n\n- 扁平化结构：`/home/page/content` (页面层级过多，蜘蛛易丢失深层链接)\n\n👉 好处：提升爬虫理解页面结构的能力\n\n(2) Meta 标签 (辅助手段)\n\n- `<title>`标签：每个页面独立、包含核心关键词\n\n- **描述 description**：内容摘要（120 字内），包含关键词和用户利益点，简洁准确，提升搜索结果点击率（CTR）\n  `<meta name=\"description\" content=\"本文详解前端SEO的10个核心策略，包括语义化标签、图片优化、加载速度提升，帮助开发者快速掌握优化技巧。\">`\n\n- **关键字 keywords**：虽权重降低，但可辅助蜘蛛理解核心关键词（避免堆砌，3-5 个为宜）\n\n  `<meta name=\"keywords\" content=\"前端SEO, Meta标签优化, 搜索引擎排名\">`\n\n- `<meta name=\"robots\">`：决定页面是否被索引、是否传递链接权重\n\n(3) **路由/链接优化**\n\n- 使用静态化、语义化的 URL (避免动态参数过多)，如：\n\n  - ✅ `/blog/seo-strategy`\n\n  - ❌ `/index.php?id=123`\n\n- 路由使用 history 模式，比 hash 模式更好被抓取\n\n  - hash 模式`/#/query`，在解析 URL 时，会忽略 '#' 及其后面的内容\n\n- 在页面内，给内部链接添加 title 和语义清晰的锚文本，可以提示/促进用户去点击\n\n  - `<a href=\"/seo-strategy\" title=\"详解前端开发中的SEO优化方法\">前端SEO优化策略</a>`\n\n### 🔹 内容可见性与抓取优化\n\n(1) 爬虫可见性\n\n- 避免 纯前端渲染（CSR）导致内容加载不到 → 可采用 **SSR（服务端渲染） 或 预渲染（Prerender）**\n\n- **对于 Vue、React 应用：可用 Nuxt.js、Next.js 或 静态网站生成 (SSG)**\n\n(2) 图片优化\n\n- 使用 `<img>` 并加 alt 文本描述\n\n- WebP/AVIF 格式，懒加载 `loading=\"lazy\"`\n\n- 为重要图片生成 结构化数据（如产品图、文章配图）\n\n(3) 多语言站点\n\n- `<link rel=\"alternate\" hreflang=\"xx\" ...>` 告诉搜索引擎不同语言的版本。\n\n### 🔹 页面性能优化（影响排名的核心指标 Core Web Vitals）\n\nGoogle 的 CWV 三大指标：\n\n- LCP (最大内容渲染时间)：控制在 ≤2.5s\n\n- FID (首次输入延迟)：≤100ms\n\n- CLS (累计布局偏移)：≤0.1\n\n前端优化手段：\n\n- 使用 HTTP/2、CDN 加速\n\n- 图片懒加载、视频分片加载\n\n- CSS/JS 压缩、拆分，减少阻塞\n\n- 关键 CSS 内联，非关键资源延迟加载\n\n### 🔹 技术层面优化\n\n(1) Sitemap & Robots\n\n- `/sitemap.xml`：清晰列出页面结构\n\n- `robots.txt`：在网站根目录放置 robots.txt 文件，明确告知蜘蛛 \"可爬取\" 和 \"不可爬取\" 的内容（控制抓取范围，避免蜘蛛浪费资源爬取无价值页面）\n\n(2) 结构化数据（Schema.org）\n\n- 使用 JSON-LD 添加：\n\n  - 文章：Article\n\n  - 产品：Product\n\n  - FAQ：FAQPage\n\n  - 面包屑：BreadcrumbList\n\n👉 有助于获取 富摘要（Rich Snippets），提高点击率\n\n(3) 移动端优化\n\n- 响应式布局（RWD）\n\n- viewport 标签\n\n- 避免 Flash / 不兼容插件\n\n### 🔹 用户体验与交互\n\n- 确保页面 无 404 错误，有自定义 404 页面\n\n- 页面导航清晰，层级不要过深（建议 ≤3 层）\n\n- 提高可访问性（WCAG 标准）：如 ARIA 属性、键盘导航\n\n- 页面加载时避免 广告过多、弹窗遮挡内容\n\n### 🔹 前端开发常见 SEO 陷阱\n\n- ❌ 单页应用（SPA）未处理 SSR → 内容抓取困难\n\n- ❌ 动态生成的链接没有 href → 爬虫无法跟踪\n\n- ❌ 图片仅用 CSS 背景图，缺少 alt → 无法索引\n\n- ❌ 过度依赖 JS 渲染 meta 标签 → 搜索引擎可能忽略\n\n### 🔹 前端工具推荐\n\n- **Lighthouse** (谷歌浏览器插件)：检测性能与 SEO 指标\n\n- **Google Search Console**：监控收录、报错与排名问题\n\n- **Ahrefs / SEMrush** (关键词分析网站)：关键词分析与竞争对手分析/调研\n\n- **Screaming Frog**：模拟爬虫抓取检查网，发现问题\n\n✅ 总结一下：\n前端 SEO 优化核心就是 让搜索引擎能更快、更准确、更全面地理解你的网站内容，并且在性能、结构、可访问性上为用户提供良好体验\n","slug":"SEO优化","published":1,"updated":"2025-09-13T08:09:15.106Z","comments":1,"layout":"post","photos":[],"_id":"cmfhzm6b70007iwncdqrr4w99","content":"<h2 id=\"🔍-前端开发-SEO-优化策略详解\"><a href=\"#🔍-前端开发-SEO-优化策略详解\" class=\"headerlink\" title=\"🔍 前端开发 SEO 优化策略详解\"></a>🔍 前端开发 SEO 优化策略详解</h2><h3 id=\"🔹-HTML-页面结构与标签优化\"><a href=\"#🔹-HTML-页面结构与标签优化\" class=\"headerlink\" title=\"🔹 HTML 页面结构与标签优化\"></a>🔹 HTML 页面结构与标签优化</h3><p>(1) <strong>语义化 HTML</strong></p>\n<ul>\n<li><p>使用正确的语义化标签：<code>&lt;header&gt;</code>、<code>&lt;nav&gt;</code>、<code>&lt;main&gt;</code>、<code>&lt;article&gt;</code>、<code>&lt;section&gt;</code>、<code>&lt;footer&gt;</code></p>\n</li>\n<li><p>文章标题用 h1-h6：<code>&lt;h1&gt;</code>（一个页面仅一个，包含主要关键词），子标题 <code>&lt;h2&gt; - &lt;h6&gt;</code> 标题层级合理分布</p>\n</li>\n<li><p>列表数据用 <code>&lt;ul&gt; / &lt;ol&gt;</code>，强调用 <code>&lt;strong&gt;</code> 而不是<code> &lt;b&gt;</code></p>\n</li>\n<li><p>所有 <code>&lt;img&gt;</code> 标签都添加 alt 文本描述属性（内容包含关键词）</p>\n</li>\n<li><p><code>&lt;a&gt;</code>链接：需添加 href（避免<code>javascript:void(0)</code>），锚文本需描述目标页面内容，title 鼠标悬停时显示的提示信息</p>\n</li>\n<li><p>避免用图片替代文字：如标题、按钮文本需用 HTML 文字，而非图片（蜘蛛无法识别图片中的文字）</p>\n</li>\n<li><p>扁平化结构：<code>/home/page/content</code> (页面层级过多，蜘蛛易丢失深层链接)</p>\n</li>\n</ul>\n<p>👉 好处：提升爬虫理解页面结构的能力</p>\n<p>(2) Meta 标签 (辅助手段)</p>\n<ul>\n<li><p><code>&lt;title&gt;</code>标签：每个页面独立、包含核心关键词</p>\n</li>\n<li><p><strong>描述 description</strong>：内容摘要（120 字内），包含关键词和用户利益点，简洁准确，提升搜索结果点击率（CTR）<br><code>&lt;meta name=&quot;description&quot; content=&quot;本文详解前端SEO的10个核心策略，包括语义化标签、图片优化、加载速度提升，帮助开发者快速掌握优化技巧。&quot;&gt;</code></p>\n</li>\n<li><p><strong>关键字 keywords</strong>：虽权重降低，但可辅助蜘蛛理解核心关键词（避免堆砌，3-5 个为宜）</p>\n<p><code>&lt;meta name=&quot;keywords&quot; content=&quot;前端SEO, Meta标签优化, 搜索引擎排名&quot;&gt;</code></p>\n</li>\n<li><p><code>&lt;meta name=&quot;robots&quot;&gt;</code>：决定页面是否被索引、是否传递链接权重</p>\n</li>\n</ul>\n<p>(3) <strong>路由&#x2F;链接优化</strong></p>\n<ul>\n<li><p>使用静态化、语义化的 URL (避免动态参数过多)，如：</p>\n<ul>\n<li><p>✅ <code>/blog/seo-strategy</code></p>\n</li>\n<li><p>❌ <code>/index.php?id=123</code></p>\n</li>\n</ul>\n</li>\n<li><p>路由使用 history 模式，比 hash 模式更好被抓取</p>\n<ul>\n<li>hash 模式<code>/#/query</code>，在解析 URL 时，会忽略 ‘#’ 及其后面的内容</li>\n</ul>\n</li>\n<li><p>在页面内，给内部链接添加 title 和语义清晰的锚文本，可以提示&#x2F;促进用户去点击</p>\n<ul>\n<li><code>&lt;a href=&quot;/seo-strategy&quot; title=&quot;详解前端开发中的SEO优化方法&quot;&gt;前端SEO优化策略&lt;/a&gt;</code></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"🔹-内容可见性与抓取优化\"><a href=\"#🔹-内容可见性与抓取优化\" class=\"headerlink\" title=\"🔹 内容可见性与抓取优化\"></a>🔹 内容可见性与抓取优化</h3><p>(1) 爬虫可见性</p>\n<ul>\n<li><p>避免 纯前端渲染（CSR）导致内容加载不到 → 可采用 <strong>SSR（服务端渲染） 或 预渲染（Prerender）</strong></p>\n</li>\n<li><p><strong>对于 Vue、React 应用：可用 Nuxt.js、Next.js 或 静态网站生成 (SSG)</strong></p>\n</li>\n</ul>\n<p>(2) 图片优化</p>\n<ul>\n<li><p>使用 <code>&lt;img&gt;</code> 并加 alt 文本描述</p>\n</li>\n<li><p>WebP&#x2F;AVIF 格式，懒加载 <code>loading=&quot;lazy&quot;</code></p>\n</li>\n<li><p>为重要图片生成 结构化数据（如产品图、文章配图）</p>\n</li>\n</ul>\n<p>(3) 多语言站点</p>\n<ul>\n<li><code>&lt;link rel=&quot;alternate&quot; hreflang=&quot;xx&quot; ...&gt;</code> 告诉搜索引擎不同语言的版本。</li>\n</ul>\n<h3 id=\"🔹-页面性能优化（影响排名的核心指标-Core-Web-Vitals）\"><a href=\"#🔹-页面性能优化（影响排名的核心指标-Core-Web-Vitals）\" class=\"headerlink\" title=\"🔹 页面性能优化（影响排名的核心指标 Core Web Vitals）\"></a>🔹 页面性能优化（影响排名的核心指标 Core Web Vitals）</h3><p>Google 的 CWV 三大指标：</p>\n<ul>\n<li><p>LCP (最大内容渲染时间)：控制在 ≤2.5s</p>\n</li>\n<li><p>FID (首次输入延迟)：≤100ms</p>\n</li>\n<li><p>CLS (累计布局偏移)：≤0.1</p>\n</li>\n</ul>\n<p>前端优化手段：</p>\n<ul>\n<li><p>使用 HTTP&#x2F;2、CDN 加速</p>\n</li>\n<li><p>图片懒加载、视频分片加载</p>\n</li>\n<li><p>CSS&#x2F;JS 压缩、拆分，减少阻塞</p>\n</li>\n<li><p>关键 CSS 内联，非关键资源延迟加载</p>\n</li>\n</ul>\n<h3 id=\"🔹-技术层面优化\"><a href=\"#🔹-技术层面优化\" class=\"headerlink\" title=\"🔹 技术层面优化\"></a>🔹 技术层面优化</h3><p>(1) Sitemap &amp; Robots</p>\n<ul>\n<li><p><code>/sitemap.xml</code>：清晰列出页面结构</p>\n</li>\n<li><p><code>robots.txt</code>：在网站根目录放置 robots.txt 文件，明确告知蜘蛛 “可爬取” 和 “不可爬取” 的内容（控制抓取范围，避免蜘蛛浪费资源爬取无价值页面）</p>\n</li>\n</ul>\n<p>(2) 结构化数据（Schema.org）</p>\n<ul>\n<li><p>使用 JSON-LD 添加：</p>\n<ul>\n<li><p>文章：Article</p>\n</li>\n<li><p>产品：Product</p>\n</li>\n<li><p>FAQ：FAQPage</p>\n</li>\n<li><p>面包屑：BreadcrumbList</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>👉 有助于获取 富摘要（Rich Snippets），提高点击率</p>\n<p>(3) 移动端优化</p>\n<ul>\n<li><p>响应式布局（RWD）</p>\n</li>\n<li><p>viewport 标签</p>\n</li>\n<li><p>避免 Flash &#x2F; 不兼容插件</p>\n</li>\n</ul>\n<h3 id=\"🔹-用户体验与交互\"><a href=\"#🔹-用户体验与交互\" class=\"headerlink\" title=\"🔹 用户体验与交互\"></a>🔹 用户体验与交互</h3><ul>\n<li><p>确保页面 无 404 错误，有自定义 404 页面</p>\n</li>\n<li><p>页面导航清晰，层级不要过深（建议 ≤3 层）</p>\n</li>\n<li><p>提高可访问性（WCAG 标准）：如 ARIA 属性、键盘导航</p>\n</li>\n<li><p>页面加载时避免 广告过多、弹窗遮挡内容</p>\n</li>\n</ul>\n<h3 id=\"🔹-前端开发常见-SEO-陷阱\"><a href=\"#🔹-前端开发常见-SEO-陷阱\" class=\"headerlink\" title=\"🔹 前端开发常见 SEO 陷阱\"></a>🔹 前端开发常见 SEO 陷阱</h3><ul>\n<li><p>❌ 单页应用（SPA）未处理 SSR → 内容抓取困难</p>\n</li>\n<li><p>❌ 动态生成的链接没有 href → 爬虫无法跟踪</p>\n</li>\n<li><p>❌ 图片仅用 CSS 背景图，缺少 alt → 无法索引</p>\n</li>\n<li><p>❌ 过度依赖 JS 渲染 meta 标签 → 搜索引擎可能忽略</p>\n</li>\n</ul>\n<h3 id=\"🔹-前端工具推荐\"><a href=\"#🔹-前端工具推荐\" class=\"headerlink\" title=\"🔹 前端工具推荐\"></a>🔹 前端工具推荐</h3><ul>\n<li><p><strong>Lighthouse</strong> (谷歌浏览器插件)：检测性能与 SEO 指标</p>\n</li>\n<li><p><strong>Google Search Console</strong>：监控收录、报错与排名问题</p>\n</li>\n<li><p><strong>Ahrefs &#x2F; SEMrush</strong> (关键词分析网站)：关键词分析与竞争对手分析&#x2F;调研</p>\n</li>\n<li><p><strong>Screaming Frog</strong>：模拟爬虫抓取检查网，发现问题</p>\n</li>\n</ul>\n<p>✅ 总结一下：<br>前端 SEO 优化核心就是 让搜索引擎能更快、更准确、更全面地理解你的网站内容，并且在性能、结构、可访问性上为用户提供良好体验</p>\n","excerpt":"","more":"<h2 id=\"🔍-前端开发-SEO-优化策略详解\"><a href=\"#🔍-前端开发-SEO-优化策略详解\" class=\"headerlink\" title=\"🔍 前端开发 SEO 优化策略详解\"></a>🔍 前端开发 SEO 优化策略详解</h2><h3 id=\"🔹-HTML-页面结构与标签优化\"><a href=\"#🔹-HTML-页面结构与标签优化\" class=\"headerlink\" title=\"🔹 HTML 页面结构与标签优化\"></a>🔹 HTML 页面结构与标签优化</h3><p>(1) <strong>语义化 HTML</strong></p>\n<ul>\n<li><p>使用正确的语义化标签：<code>&lt;header&gt;</code>、<code>&lt;nav&gt;</code>、<code>&lt;main&gt;</code>、<code>&lt;article&gt;</code>、<code>&lt;section&gt;</code>、<code>&lt;footer&gt;</code></p>\n</li>\n<li><p>文章标题用 h1-h6：<code>&lt;h1&gt;</code>（一个页面仅一个，包含主要关键词），子标题 <code>&lt;h2&gt; - &lt;h6&gt;</code> 标题层级合理分布</p>\n</li>\n<li><p>列表数据用 <code>&lt;ul&gt; / &lt;ol&gt;</code>，强调用 <code>&lt;strong&gt;</code> 而不是<code> &lt;b&gt;</code></p>\n</li>\n<li><p>所有 <code>&lt;img&gt;</code> 标签都添加 alt 文本描述属性（内容包含关键词）</p>\n</li>\n<li><p><code>&lt;a&gt;</code>链接：需添加 href（避免<code>javascript:void(0)</code>），锚文本需描述目标页面内容，title 鼠标悬停时显示的提示信息</p>\n</li>\n<li><p>避免用图片替代文字：如标题、按钮文本需用 HTML 文字，而非图片（蜘蛛无法识别图片中的文字）</p>\n</li>\n<li><p>扁平化结构：<code>/home/page/content</code> (页面层级过多，蜘蛛易丢失深层链接)</p>\n</li>\n</ul>\n<p>👉 好处：提升爬虫理解页面结构的能力</p>\n<p>(2) Meta 标签 (辅助手段)</p>\n<ul>\n<li><p><code>&lt;title&gt;</code>标签：每个页面独立、包含核心关键词</p>\n</li>\n<li><p><strong>描述 description</strong>：内容摘要（120 字内），包含关键词和用户利益点，简洁准确，提升搜索结果点击率（CTR）<br><code>&lt;meta name=&quot;description&quot; content=&quot;本文详解前端SEO的10个核心策略，包括语义化标签、图片优化、加载速度提升，帮助开发者快速掌握优化技巧。&quot;&gt;</code></p>\n</li>\n<li><p><strong>关键字 keywords</strong>：虽权重降低，但可辅助蜘蛛理解核心关键词（避免堆砌，3-5 个为宜）</p>\n<p><code>&lt;meta name=&quot;keywords&quot; content=&quot;前端SEO, Meta标签优化, 搜索引擎排名&quot;&gt;</code></p>\n</li>\n<li><p><code>&lt;meta name=&quot;robots&quot;&gt;</code>：决定页面是否被索引、是否传递链接权重</p>\n</li>\n</ul>\n<p>(3) <strong>路由&#x2F;链接优化</strong></p>\n<ul>\n<li><p>使用静态化、语义化的 URL (避免动态参数过多)，如：</p>\n<ul>\n<li><p>✅ <code>/blog/seo-strategy</code></p>\n</li>\n<li><p>❌ <code>/index.php?id=123</code></p>\n</li>\n</ul>\n</li>\n<li><p>路由使用 history 模式，比 hash 模式更好被抓取</p>\n<ul>\n<li>hash 模式<code>/#/query</code>，在解析 URL 时，会忽略 ‘#’ 及其后面的内容</li>\n</ul>\n</li>\n<li><p>在页面内，给内部链接添加 title 和语义清晰的锚文本，可以提示&#x2F;促进用户去点击</p>\n<ul>\n<li><code>&lt;a href=&quot;/seo-strategy&quot; title=&quot;详解前端开发中的SEO优化方法&quot;&gt;前端SEO优化策略&lt;/a&gt;</code></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"🔹-内容可见性与抓取优化\"><a href=\"#🔹-内容可见性与抓取优化\" class=\"headerlink\" title=\"🔹 内容可见性与抓取优化\"></a>🔹 内容可见性与抓取优化</h3><p>(1) 爬虫可见性</p>\n<ul>\n<li><p>避免 纯前端渲染（CSR）导致内容加载不到 → 可采用 <strong>SSR（服务端渲染） 或 预渲染（Prerender）</strong></p>\n</li>\n<li><p><strong>对于 Vue、React 应用：可用 Nuxt.js、Next.js 或 静态网站生成 (SSG)</strong></p>\n</li>\n</ul>\n<p>(2) 图片优化</p>\n<ul>\n<li><p>使用 <code>&lt;img&gt;</code> 并加 alt 文本描述</p>\n</li>\n<li><p>WebP&#x2F;AVIF 格式，懒加载 <code>loading=&quot;lazy&quot;</code></p>\n</li>\n<li><p>为重要图片生成 结构化数据（如产品图、文章配图）</p>\n</li>\n</ul>\n<p>(3) 多语言站点</p>\n<ul>\n<li><code>&lt;link rel=&quot;alternate&quot; hreflang=&quot;xx&quot; ...&gt;</code> 告诉搜索引擎不同语言的版本。</li>\n</ul>\n<h3 id=\"🔹-页面性能优化（影响排名的核心指标-Core-Web-Vitals）\"><a href=\"#🔹-页面性能优化（影响排名的核心指标-Core-Web-Vitals）\" class=\"headerlink\" title=\"🔹 页面性能优化（影响排名的核心指标 Core Web Vitals）\"></a>🔹 页面性能优化（影响排名的核心指标 Core Web Vitals）</h3><p>Google 的 CWV 三大指标：</p>\n<ul>\n<li><p>LCP (最大内容渲染时间)：控制在 ≤2.5s</p>\n</li>\n<li><p>FID (首次输入延迟)：≤100ms</p>\n</li>\n<li><p>CLS (累计布局偏移)：≤0.1</p>\n</li>\n</ul>\n<p>前端优化手段：</p>\n<ul>\n<li><p>使用 HTTP&#x2F;2、CDN 加速</p>\n</li>\n<li><p>图片懒加载、视频分片加载</p>\n</li>\n<li><p>CSS&#x2F;JS 压缩、拆分，减少阻塞</p>\n</li>\n<li><p>关键 CSS 内联，非关键资源延迟加载</p>\n</li>\n</ul>\n<h3 id=\"🔹-技术层面优化\"><a href=\"#🔹-技术层面优化\" class=\"headerlink\" title=\"🔹 技术层面优化\"></a>🔹 技术层面优化</h3><p>(1) Sitemap &amp; Robots</p>\n<ul>\n<li><p><code>/sitemap.xml</code>：清晰列出页面结构</p>\n</li>\n<li><p><code>robots.txt</code>：在网站根目录放置 robots.txt 文件，明确告知蜘蛛 “可爬取” 和 “不可爬取” 的内容（控制抓取范围，避免蜘蛛浪费资源爬取无价值页面）</p>\n</li>\n</ul>\n<p>(2) 结构化数据（Schema.org）</p>\n<ul>\n<li><p>使用 JSON-LD 添加：</p>\n<ul>\n<li><p>文章：Article</p>\n</li>\n<li><p>产品：Product</p>\n</li>\n<li><p>FAQ：FAQPage</p>\n</li>\n<li><p>面包屑：BreadcrumbList</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>👉 有助于获取 富摘要（Rich Snippets），提高点击率</p>\n<p>(3) 移动端优化</p>\n<ul>\n<li><p>响应式布局（RWD）</p>\n</li>\n<li><p>viewport 标签</p>\n</li>\n<li><p>避免 Flash &#x2F; 不兼容插件</p>\n</li>\n</ul>\n<h3 id=\"🔹-用户体验与交互\"><a href=\"#🔹-用户体验与交互\" class=\"headerlink\" title=\"🔹 用户体验与交互\"></a>🔹 用户体验与交互</h3><ul>\n<li><p>确保页面 无 404 错误，有自定义 404 页面</p>\n</li>\n<li><p>页面导航清晰，层级不要过深（建议 ≤3 层）</p>\n</li>\n<li><p>提高可访问性（WCAG 标准）：如 ARIA 属性、键盘导航</p>\n</li>\n<li><p>页面加载时避免 广告过多、弹窗遮挡内容</p>\n</li>\n</ul>\n<h3 id=\"🔹-前端开发常见-SEO-陷阱\"><a href=\"#🔹-前端开发常见-SEO-陷阱\" class=\"headerlink\" title=\"🔹 前端开发常见 SEO 陷阱\"></a>🔹 前端开发常见 SEO 陷阱</h3><ul>\n<li><p>❌ 单页应用（SPA）未处理 SSR → 内容抓取困难</p>\n</li>\n<li><p>❌ 动态生成的链接没有 href → 爬虫无法跟踪</p>\n</li>\n<li><p>❌ 图片仅用 CSS 背景图，缺少 alt → 无法索引</p>\n</li>\n<li><p>❌ 过度依赖 JS 渲染 meta 标签 → 搜索引擎可能忽略</p>\n</li>\n</ul>\n<h3 id=\"🔹-前端工具推荐\"><a href=\"#🔹-前端工具推荐\" class=\"headerlink\" title=\"🔹 前端工具推荐\"></a>🔹 前端工具推荐</h3><ul>\n<li><p><strong>Lighthouse</strong> (谷歌浏览器插件)：检测性能与 SEO 指标</p>\n</li>\n<li><p><strong>Google Search Console</strong>：监控收录、报错与排名问题</p>\n</li>\n<li><p><strong>Ahrefs &#x2F; SEMrush</strong> (关键词分析网站)：关键词分析与竞争对手分析&#x2F;调研</p>\n</li>\n<li><p><strong>Screaming Frog</strong>：模拟爬虫抓取检查网，发现问题</p>\n</li>\n</ul>\n<p>✅ 总结一下：<br>前端 SEO 优化核心就是 让搜索引擎能更快、更准确、更全面地理解你的网站内容，并且在性能、结构、可访问性上为用户提供良好体验</p>\n"},{"title":"前端实现导出xlsx表格","date":"2025-09-13T02:08:19.000Z","cover":"/images/前端实现导出xlsx表格/cover.jpg","_content":"\n前端根据后端接口返回的数据（数组 / 文件本身 / 链接）做对应的下载处理：\n\n### 👉 根据接口返回的数据数组(表格/列表数据)，前端自己实现 excel 表格下载\n\n**（1）下载依赖**\n\n```bash\nnpm install xlsx file-saver\n```\n\n**（2）编写保存函数 htmlToExcel.js**\n\n```javascript\nimport FileSaver, { saveAs } from 'file-saver'\nimport * as XLSX from 'xlsx'\nimport { ElMessage } from 'element-plus'\n\nexport default {\n\tdownloadXlsx(dataList, fileName, wscols) {\n\t\ttry {\n\t\t\tconst stringToBuff = (str) => {\n\t\t\t\tlet buf = new ArrayBuffer(str.length)\n\t\t\t\tlet view = new Uint8Array(buf)\n\t\t\t\tfor (let i = 0; i !== str.length; ++i) {\n\t\t\t\t\tview[i] = str.charCodeAt(i) & 0xff\n\t\t\t\t}\n\t\t\t\treturn buf\n\t\t\t}\n\t\t\t// 创建工作簿\n\t\t\tlet workbook = XLSX.utils.book_new()\n\t\t\t// 将数据转换为工作表\n\t\t\tlet worksheet = XLSX.utils.aoa_to_sheet(dataList)\n\t\t\t// 设置导出表格每一列的宽\n\t\t\tif (wscols) worksheet['!cols'] = wscols\n\t\t\t// 将工作表添加到工作簿\n\t\t\tXLSX.utils.book_append_sheet(workbook, worksheet, 'sheet1')\n\n\t\t\t// 创建二进制对象写入转换好的字节流\n\t\t\tlet xlsxBlob = new Blob(\n\t\t\t\t[\n\t\t\t\t\tstringToBuff(\n\t\t\t\t\t\tXLSX.write(workbook, {\n\t\t\t\t\t\t\tbookType: 'xlsx',\n\t\t\t\t\t\t\tbookSST: false,\n\t\t\t\t\t\t\ttype: 'binary',\n\t\t\t\t\t\t})\n\t\t\t\t\t),\n\t\t\t\t],\n\t\t\t\t{ type: '' }\n\t\t\t)\n\t\t\t// 下载导出的文件\n\t\t\tFileSaver.saveAs(xlsxBlob, fileName + '.xlsx')\n\t\t\tElMessage({ type: 'success', message: '导出成功' })\n\t\t} catch (e) {\n\t\t\tconsole.error(e)\n\t\t\tElMessage.error('导出失败')\n\t\t}\n\t},\n\n\t/** 加上 xlsxParam 可以解决导出的表格数据错误的问题,比如以下各种情况等:\n\t * 身份证号： 5.23E+17\n\t * 日期格式被补全到时分秒\n\t * 3% ->  0.03\n\t * '1-7' -> 2001/1/7\n\t */\n\tgetExcel(dom, fileName) {\n\t\tlet xlsxParam = { raw: true }\n\t\tconst domDu = document.querySelector(dom)\n\t\t// let worksheet = XLSX.utils.table_to_book(domDu)\n\t\tlet worksheet = XLSX.utils.table_to_book(domDu, xlsxParam)\n\t\tlet worksheetout = XLSX.write(worksheet, {\n\t\t\tbookType: 'xlsx',\n\t\t\tbookSST: true,\n\t\t\ttype: 'array',\n\t\t})\n\t\ttry {\n\t\t\tFileSaver.saveAs(\n\t\t\t\tnew Blob([worksheetout], { type: 'application/octet-stream' }),\n\t\t\t\tfileName\n\t\t\t)\n\t\t\tElMessage({ type: 'success', message: '导出成功' })\n\t\t} catch (e) {\n\t\t\tconsole.error(e)\n\t\t\tElMessage.error('导出失败')\n\t\t}\n\t\treturn worksheetout\n\t},\n}\n```\n\n**（3）直接使用**\n\n```md\n<el-table ref=\"reportRef\" v-loading=\"loading\" :data=\"dataList\" id=\"exportTable\">...</el-table>\n\n<script setup>\nimport download from '@/utils/htmlToExcel.js'\nconst loading = ref(false)\nconst dataList = ref([])\nconst getDataList = () => {}\n\n// 使用方法1\nconst handleExport = () => {\n    let list = [\n        [\n            \"姓名\",\n            \"年龄\",\n            \"性别\",\n            \"学历\",\n            \"创建时间\",\n        ],\n    ];\n    dataList.value.forEach((item, index) => {\n        list.push([\n            item.name,\n            item.age,\n            item.sex,\n            item.education,\n            item.createTime,\n        ]);\n    });\n    download.downloadXlsx(list, `2023-12-01.xlsx`);\n}\n\n// 使用方法2， 适用于复杂的表格 (单元格合并等情况)\nconst handleExport = () => {\n    download.getExcel('#exportTable', `2023-12-01.xlsx`)\n}\n</script>\n```\n\n### 👉 接口直接返回文件，实现 excel 表格下载\n\n- 接口返回\n\n```javascript\n// http.js\nimport request from '@/utils/request'\nexport function exportVarTestReport(data) {\n\treturn request({\n\t\turl: '/app-api/website/calc/download',\n\t\tmethod: 'get',\n\t\tparams: data,\n\t\tresponseType: 'blob',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t},\n\t})\n}\n```\n<img src=\"/images/前端实现导出xlsx表格/exportFile1.png\" alt=\"image\" class=\"max600\"/>\n<img src=\"/images/前端实现导出xlsx表格/exportFile2.png\" alt=\"image\" class=\"max600\"/>\n\n- 处理数据(下载)\n\n```javascript\n// 下载报告操作\nfunction downloadReport(row) {\n\ttry {\n\t\texportReport({\n\t\t\tid: row.id,\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\t// 处理整个文件res.data\n\t\t\t\t// ******** 开始 ********\n\t\t\t\tconst link = document.createElement('a')\n\t\t\t\tconst blogObj = new Blob([res.data], {\n\t\t\t\t\ttype: 'application/vnd.ms-excel',\n\t\t\t\t})\n\t\t\t\t// 创建一个新的url对象\n\t\t\t\tconst objectUrl = window.URL.createObjectURL(blogObj)\n\t\t\t\tlink.href = objectUrl\n\t\t\t\t// 导出文件名\n\t\t\t\tlink.download = `result.xlsx`\n\t\t\t\t// 自定义下载文件名\n\t\t\t\tlink.click()\n\t\t\t\t// 为了更好地性能和内存使用状况，应该在适当的时候释放url\n\t\t\t\twindow.URL.revokeObjectURL(objectUrl)\n\t\t\t\t// ******** 结束 ********\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tconsole.log('下载失败')\n\t\t\t})\n\t\t\t.finally(() => {})\n\t} catch (error) {}\n}\n```\n\n### 👉 接口返回一个文件链接，实现点击按钮下载\n\n```javascript\nconst href = 'http: xxxxx'\nclickDownFile('name', href)\n\n// 点击按钮下载\nfunction clickDownFile(filename, href) {\n\tconst a = document.createElement('a')\n\ta.href = href // a链接的下载地址\n\ta.setAttribute('download', filename)\n\tdocument.body.appendChild(a)\n\ta.click()\n\tdocument.body.removeChild(a)\n\twindow.URL.revokeObjectURL(href)\n}\n```\n","source":"_posts/2025-09-13-前端实现导出xlsx表格.md","raw":"---\ntitle: 前端实现导出xlsx表格\ndate: 2025-09-13 10:08:19\ntags:\n  - export\n  - xlsx\ncategories: 上传/导出\ncover: /images/前端实现导出xlsx表格/cover.jpg # 封面图\n---\n\n前端根据后端接口返回的数据（数组 / 文件本身 / 链接）做对应的下载处理：\n\n### 👉 根据接口返回的数据数组(表格/列表数据)，前端自己实现 excel 表格下载\n\n**（1）下载依赖**\n\n```bash\nnpm install xlsx file-saver\n```\n\n**（2）编写保存函数 htmlToExcel.js**\n\n```javascript\nimport FileSaver, { saveAs } from 'file-saver'\nimport * as XLSX from 'xlsx'\nimport { ElMessage } from 'element-plus'\n\nexport default {\n\tdownloadXlsx(dataList, fileName, wscols) {\n\t\ttry {\n\t\t\tconst stringToBuff = (str) => {\n\t\t\t\tlet buf = new ArrayBuffer(str.length)\n\t\t\t\tlet view = new Uint8Array(buf)\n\t\t\t\tfor (let i = 0; i !== str.length; ++i) {\n\t\t\t\t\tview[i] = str.charCodeAt(i) & 0xff\n\t\t\t\t}\n\t\t\t\treturn buf\n\t\t\t}\n\t\t\t// 创建工作簿\n\t\t\tlet workbook = XLSX.utils.book_new()\n\t\t\t// 将数据转换为工作表\n\t\t\tlet worksheet = XLSX.utils.aoa_to_sheet(dataList)\n\t\t\t// 设置导出表格每一列的宽\n\t\t\tif (wscols) worksheet['!cols'] = wscols\n\t\t\t// 将工作表添加到工作簿\n\t\t\tXLSX.utils.book_append_sheet(workbook, worksheet, 'sheet1')\n\n\t\t\t// 创建二进制对象写入转换好的字节流\n\t\t\tlet xlsxBlob = new Blob(\n\t\t\t\t[\n\t\t\t\t\tstringToBuff(\n\t\t\t\t\t\tXLSX.write(workbook, {\n\t\t\t\t\t\t\tbookType: 'xlsx',\n\t\t\t\t\t\t\tbookSST: false,\n\t\t\t\t\t\t\ttype: 'binary',\n\t\t\t\t\t\t})\n\t\t\t\t\t),\n\t\t\t\t],\n\t\t\t\t{ type: '' }\n\t\t\t)\n\t\t\t// 下载导出的文件\n\t\t\tFileSaver.saveAs(xlsxBlob, fileName + '.xlsx')\n\t\t\tElMessage({ type: 'success', message: '导出成功' })\n\t\t} catch (e) {\n\t\t\tconsole.error(e)\n\t\t\tElMessage.error('导出失败')\n\t\t}\n\t},\n\n\t/** 加上 xlsxParam 可以解决导出的表格数据错误的问题,比如以下各种情况等:\n\t * 身份证号： 5.23E+17\n\t * 日期格式被补全到时分秒\n\t * 3% ->  0.03\n\t * '1-7' -> 2001/1/7\n\t */\n\tgetExcel(dom, fileName) {\n\t\tlet xlsxParam = { raw: true }\n\t\tconst domDu = document.querySelector(dom)\n\t\t// let worksheet = XLSX.utils.table_to_book(domDu)\n\t\tlet worksheet = XLSX.utils.table_to_book(domDu, xlsxParam)\n\t\tlet worksheetout = XLSX.write(worksheet, {\n\t\t\tbookType: 'xlsx',\n\t\t\tbookSST: true,\n\t\t\ttype: 'array',\n\t\t})\n\t\ttry {\n\t\t\tFileSaver.saveAs(\n\t\t\t\tnew Blob([worksheetout], { type: 'application/octet-stream' }),\n\t\t\t\tfileName\n\t\t\t)\n\t\t\tElMessage({ type: 'success', message: '导出成功' })\n\t\t} catch (e) {\n\t\t\tconsole.error(e)\n\t\t\tElMessage.error('导出失败')\n\t\t}\n\t\treturn worksheetout\n\t},\n}\n```\n\n**（3）直接使用**\n\n```md\n<el-table ref=\"reportRef\" v-loading=\"loading\" :data=\"dataList\" id=\"exportTable\">...</el-table>\n\n<script setup>\nimport download from '@/utils/htmlToExcel.js'\nconst loading = ref(false)\nconst dataList = ref([])\nconst getDataList = () => {}\n\n// 使用方法1\nconst handleExport = () => {\n    let list = [\n        [\n            \"姓名\",\n            \"年龄\",\n            \"性别\",\n            \"学历\",\n            \"创建时间\",\n        ],\n    ];\n    dataList.value.forEach((item, index) => {\n        list.push([\n            item.name,\n            item.age,\n            item.sex,\n            item.education,\n            item.createTime,\n        ]);\n    });\n    download.downloadXlsx(list, `2023-12-01.xlsx`);\n}\n\n// 使用方法2， 适用于复杂的表格 (单元格合并等情况)\nconst handleExport = () => {\n    download.getExcel('#exportTable', `2023-12-01.xlsx`)\n}\n</script>\n```\n\n### 👉 接口直接返回文件，实现 excel 表格下载\n\n- 接口返回\n\n```javascript\n// http.js\nimport request from '@/utils/request'\nexport function exportVarTestReport(data) {\n\treturn request({\n\t\turl: '/app-api/website/calc/download',\n\t\tmethod: 'get',\n\t\tparams: data,\n\t\tresponseType: 'blob',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t},\n\t})\n}\n```\n<img src=\"/images/前端实现导出xlsx表格/exportFile1.png\" alt=\"image\" class=\"max600\"/>\n<img src=\"/images/前端实现导出xlsx表格/exportFile2.png\" alt=\"image\" class=\"max600\"/>\n\n- 处理数据(下载)\n\n```javascript\n// 下载报告操作\nfunction downloadReport(row) {\n\ttry {\n\t\texportReport({\n\t\t\tid: row.id,\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\t// 处理整个文件res.data\n\t\t\t\t// ******** 开始 ********\n\t\t\t\tconst link = document.createElement('a')\n\t\t\t\tconst blogObj = new Blob([res.data], {\n\t\t\t\t\ttype: 'application/vnd.ms-excel',\n\t\t\t\t})\n\t\t\t\t// 创建一个新的url对象\n\t\t\t\tconst objectUrl = window.URL.createObjectURL(blogObj)\n\t\t\t\tlink.href = objectUrl\n\t\t\t\t// 导出文件名\n\t\t\t\tlink.download = `result.xlsx`\n\t\t\t\t// 自定义下载文件名\n\t\t\t\tlink.click()\n\t\t\t\t// 为了更好地性能和内存使用状况，应该在适当的时候释放url\n\t\t\t\twindow.URL.revokeObjectURL(objectUrl)\n\t\t\t\t// ******** 结束 ********\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tconsole.log('下载失败')\n\t\t\t})\n\t\t\t.finally(() => {})\n\t} catch (error) {}\n}\n```\n\n### 👉 接口返回一个文件链接，实现点击按钮下载\n\n```javascript\nconst href = 'http: xxxxx'\nclickDownFile('name', href)\n\n// 点击按钮下载\nfunction clickDownFile(filename, href) {\n\tconst a = document.createElement('a')\n\ta.href = href // a链接的下载地址\n\ta.setAttribute('download', filename)\n\tdocument.body.appendChild(a)\n\ta.click()\n\tdocument.body.removeChild(a)\n\twindow.URL.revokeObjectURL(href)\n}\n```\n","slug":"前端实现导出xlsx表格","published":1,"updated":"2025-09-13T08:09:15.107Z","comments":1,"layout":"post","photos":[],"_id":"cmfhzm6b70008iwnc4pljfxaf","content":"<p>前端根据后端接口返回的数据（数组 &#x2F; 文件本身 &#x2F; 链接）做对应的下载处理：</p>\n<h3 id=\"👉-根据接口返回的数据数组-表格-列表数据-，前端自己实现-excel-表格下载\"><a href=\"#👉-根据接口返回的数据数组-表格-列表数据-，前端自己实现-excel-表格下载\" class=\"headerlink\" title=\"👉 根据接口返回的数据数组(表格&#x2F;列表数据)，前端自己实现 excel 表格下载\"></a>👉 根据接口返回的数据数组(表格&#x2F;列表数据)，前端自己实现 excel 表格下载</h3><p><strong>（1）下载依赖</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install xlsx file-saver</span><br></pre></td></tr></table></figure>\n\n<p><strong>（2）编写保存函数 htmlToExcel.js</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">FileSaver</span>, &#123; saveAs &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;file-saver&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> <span class=\"variable constant_\">XLSX</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;xlsx&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">ElMessage</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;element-plus&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">\t<span class=\"title function_\">downloadXlsx</span>(<span class=\"params\">dataList, fileName, wscols</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">const</span> <span class=\"title function_\">stringToBuff</span> = (<span class=\"params\">str</span>) =&gt; &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">let</span> buf = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayBuffer</span>(str.<span class=\"property\">length</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">let</span> view = <span class=\"keyword\">new</span> <span class=\"title class_\">Uint8Array</span>(buf)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i !== str.<span class=\"property\">length</span>; ++i) &#123;</span><br><span class=\"line\">\t\t\t\t\tview[i] = str.<span class=\"title function_\">charCodeAt</span>(i) &amp; <span class=\"number\">0xff</span></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> buf</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 创建工作簿</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">let</span> workbook = <span class=\"variable constant_\">XLSX</span>.<span class=\"property\">utils</span>.<span class=\"title function_\">book_new</span>()</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 将数据转换为工作表</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">let</span> worksheet = <span class=\"variable constant_\">XLSX</span>.<span class=\"property\">utils</span>.<span class=\"title function_\">aoa_to_sheet</span>(dataList)</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 设置导出表格每一列的宽</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (wscols) worksheet[<span class=\"string\">&#x27;!cols&#x27;</span>] = wscols</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 将工作表添加到工作簿</span></span><br><span class=\"line\">\t\t\t<span class=\"variable constant_\">XLSX</span>.<span class=\"property\">utils</span>.<span class=\"title function_\">book_append_sheet</span>(workbook, worksheet, <span class=\"string\">&#x27;sheet1&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 创建二进制对象写入转换好的字节流</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">let</span> xlsxBlob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>(</span><br><span class=\"line\">\t\t\t\t[</span><br><span class=\"line\">\t\t\t\t\t<span class=\"title function_\">stringToBuff</span>(</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"variable constant_\">XLSX</span>.<span class=\"title function_\">write</span>(workbook, &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"attr\">bookType</span>: <span class=\"string\">&#x27;xlsx&#x27;</span>,</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"attr\">bookSST</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"attr\">type</span>: <span class=\"string\">&#x27;binary&#x27;</span>,</span><br><span class=\"line\">\t\t\t\t\t\t&#125;)</span><br><span class=\"line\">\t\t\t\t\t),</span><br><span class=\"line\">\t\t\t\t],</span><br><span class=\"line\">\t\t\t\t&#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;&#x27;</span> &#125;</span><br><span class=\"line\">\t\t\t)</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 下载导出的文件</span></span><br><span class=\"line\">\t\t\t<span class=\"title class_\">FileSaver</span>.<span class=\"title function_\">saveAs</span>(xlsxBlob, fileName + <span class=\"string\">&#x27;.xlsx&#x27;</span>)</span><br><span class=\"line\">\t\t\t<span class=\"title class_\">ElMessage</span>(&#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;success&#x27;</span>, <span class=\"attr\">message</span>: <span class=\"string\">&#x27;导出成功&#x27;</span> &#125;)</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(e)</span><br><span class=\"line\">\t\t\t<span class=\"title class_\">ElMessage</span>.<span class=\"title function_\">error</span>(<span class=\"string\">&#x27;导出失败&#x27;</span>)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/** 加上 xlsxParam 可以解决导出的表格数据错误的问题,比如以下各种情况等:</span></span><br><span class=\"line\"><span class=\"comment\">\t * 身份证号： 5.23E+17</span></span><br><span class=\"line\"><span class=\"comment\">\t * 日期格式被补全到时分秒</span></span><br><span class=\"line\"><span class=\"comment\">\t * 3% -&gt;  0.03</span></span><br><span class=\"line\"><span class=\"comment\">\t * &#x27;1-7&#x27; -&gt; 2001/1/7</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"title function_\">getExcel</span>(<span class=\"params\">dom, fileName</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> xlsxParam = &#123; <span class=\"attr\">raw</span>: <span class=\"literal\">true</span> &#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">const</span> domDu = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(dom)</span><br><span class=\"line\">\t\t<span class=\"comment\">// let worksheet = XLSX.utils.table_to_book(domDu)</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> worksheet = <span class=\"variable constant_\">XLSX</span>.<span class=\"property\">utils</span>.<span class=\"title function_\">table_to_book</span>(domDu, xlsxParam)</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> worksheetout = <span class=\"variable constant_\">XLSX</span>.<span class=\"title function_\">write</span>(worksheet, &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">bookType</span>: <span class=\"string\">&#x27;xlsx&#x27;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">bookSST</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">type</span>: <span class=\"string\">&#x27;array&#x27;</span>,</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"title class_\">FileSaver</span>.<span class=\"title function_\">saveAs</span>(</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([worksheetout], &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;application/octet-stream&#x27;</span> &#125;),</span><br><span class=\"line\">\t\t\t\tfileName</span><br><span class=\"line\">\t\t\t)</span><br><span class=\"line\">\t\t\t<span class=\"title class_\">ElMessage</span>(&#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;success&#x27;</span>, <span class=\"attr\">message</span>: <span class=\"string\">&#x27;导出成功&#x27;</span> &#125;)</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(e)</span><br><span class=\"line\">\t\t\t<span class=\"title class_\">ElMessage</span>.<span class=\"title function_\">error</span>(<span class=\"string\">&#x27;导出失败&#x27;</span>)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> worksheetout</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>（3）直接使用</strong></p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">el-table</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;reportRef&quot;</span> <span class=\"attr\">v-loading</span>=<span class=\"string\">&quot;loading&quot;</span> <span class=\"attr\">:data</span>=<span class=\"string\">&quot;dataList&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;exportTable&quot;</span>&gt;</span></span>...<span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">el-table</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span></span></span><br><span class=\"line\">import download from &#x27;@/utils/htmlToExcel.js&#x27;</span><br><span class=\"line\">const loading = ref(false)</span><br><span class=\"line\">const dataList = ref([])</span><br><span class=\"line\">const getDataList = () =&gt; &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 使用方法1</span><br><span class=\"line\">const handleExport = () =&gt; &#123;</span><br><span class=\"line\">    let list = [</span><br><span class=\"line\">        [</span><br><span class=\"line\">            &quot;姓名&quot;,</span><br><span class=\"line\">            &quot;年龄&quot;,</span><br><span class=\"line\">            &quot;性别&quot;,</span><br><span class=\"line\">            &quot;学历&quot;,</span><br><span class=\"line\">            &quot;创建时间&quot;,</span><br><span class=\"line\">        ],</span><br><span class=\"line\">    ];</span><br><span class=\"line\">    dataList.value.forEach((item, index) =&gt; &#123;</span><br><span class=\"line\">        list.push([</span><br><span class=\"line\">            item.name,</span><br><span class=\"line\">            item.age,</span><br><span class=\"line\">            item.sex,</span><br><span class=\"line\">            item.education,</span><br><span class=\"line\">            item.createTime,</span><br><span class=\"line\">        ]);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    download.downloadXlsx(list, <span class=\"code\">`2023-12-01.xlsx`</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 使用方法2， 适用于复杂的表格 (单元格合并等情况)</span><br><span class=\"line\">const handleExport = () =&gt; &#123;</span><br><span class=\"line\">    download.getExcel(&#x27;#exportTable&#x27;, <span class=\"code\">`2023-12-01.xlsx`</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"👉-接口直接返回文件，实现-excel-表格下载\"><a href=\"#👉-接口直接返回文件，实现-excel-表格下载\" class=\"headerlink\" title=\"👉 接口直接返回文件，实现 excel 表格下载\"></a>👉 接口直接返回文件，实现 excel 表格下载</h3><ul>\n<li>接口返回</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// http.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> request <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/utils/request&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">exportVarTestReport</span>(<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"title function_\">request</span>(&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">url</span>: <span class=\"string\">&#x27;/app-api/website/calc/download&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">method</span>: <span class=\"string\">&#x27;get&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">params</span>: data,</span><br><span class=\"line\">\t\t<span class=\"attr\">responseType</span>: <span class=\"string\">&#x27;blob&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/x-www-form-urlencoded&#x27;</span>,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<img src=\"/images/前端实现导出xlsx表格/exportFile1.png\" alt=\"image\" class=\"max600\"/>\n<img src=\"/images/前端实现导出xlsx表格/exportFile2.png\" alt=\"image\" class=\"max600\"/>\n\n<ul>\n<li>处理数据(下载)</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 下载报告操作</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">downloadReport</span>(<span class=\"params\">row</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"title function_\">exportReport</span>(&#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">id</span>: row.<span class=\"property\">id</span>,</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">\t\t\t.<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 处理整个文件res.data</span></span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// ******** 开始 ********</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">const</span> link = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;a&#x27;</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">const</span> blogObj = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([res.<span class=\"property\">data</span>], &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"attr\">type</span>: <span class=\"string\">&#x27;application/vnd.ms-excel&#x27;</span>,</span><br><span class=\"line\">\t\t\t\t&#125;)</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 创建一个新的url对象</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">const</span> objectUrl = <span class=\"variable language_\">window</span>.<span class=\"property\">URL</span>.<span class=\"title function_\">createObjectURL</span>(blogObj)</span><br><span class=\"line\">\t\t\t\tlink.<span class=\"property\">href</span> = objectUrl</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 导出文件名</span></span><br><span class=\"line\">\t\t\t\tlink.<span class=\"property\">download</span> = <span class=\"string\">`result.xlsx`</span></span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 自定义下载文件名</span></span><br><span class=\"line\">\t\t\t\tlink.<span class=\"title function_\">click</span>()</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 为了更好地性能和内存使用状况，应该在适当的时候释放url</span></span><br><span class=\"line\">\t\t\t\t<span class=\"variable language_\">window</span>.<span class=\"property\">URL</span>.<span class=\"title function_\">revokeObjectURL</span>(objectUrl)</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// ******** 结束 ********</span></span><br><span class=\"line\">\t\t\t&#125;)</span><br><span class=\"line\">\t\t\t.<span class=\"title function_\">catch</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;下载失败&#x27;</span>)</span><br><span class=\"line\">\t\t\t&#125;)</span><br><span class=\"line\">\t\t\t.<span class=\"title function_\">finally</span>(<span class=\"function\">() =&gt;</span> &#123;&#125;)</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (error) &#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"👉-接口返回一个文件链接，实现点击按钮下载\"><a href=\"#👉-接口返回一个文件链接，实现点击按钮下载\" class=\"headerlink\" title=\"👉 接口返回一个文件链接，实现点击按钮下载\"></a>👉 接口返回一个文件链接，实现点击按钮下载</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> href = <span class=\"string\">&#x27;http: xxxxx&#x27;</span></span><br><span class=\"line\"><span class=\"title function_\">clickDownFile</span>(<span class=\"string\">&#x27;name&#x27;</span>, href)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 点击按钮下载</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">clickDownFile</span>(<span class=\"params\">filename, href</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> a = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;a&#x27;</span>)</span><br><span class=\"line\">\ta.<span class=\"property\">href</span> = href <span class=\"comment\">// a链接的下载地址</span></span><br><span class=\"line\">\ta.<span class=\"title function_\">setAttribute</span>(<span class=\"string\">&#x27;download&#x27;</span>, filename)</span><br><span class=\"line\">\t<span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"title function_\">appendChild</span>(a)</span><br><span class=\"line\">\ta.<span class=\"title function_\">click</span>()</span><br><span class=\"line\">\t<span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"title function_\">removeChild</span>(a)</span><br><span class=\"line\">\t<span class=\"variable language_\">window</span>.<span class=\"property\">URL</span>.<span class=\"title function_\">revokeObjectURL</span>(href)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>前端根据后端接口返回的数据（数组 &#x2F; 文件本身 &#x2F; 链接）做对应的下载处理：</p>\n<h3 id=\"👉-根据接口返回的数据数组-表格-列表数据-，前端自己实现-excel-表格下载\"><a href=\"#👉-根据接口返回的数据数组-表格-列表数据-，前端自己实现-excel-表格下载\" class=\"headerlink\" title=\"👉 根据接口返回的数据数组(表格&#x2F;列表数据)，前端自己实现 excel 表格下载\"></a>👉 根据接口返回的数据数组(表格&#x2F;列表数据)，前端自己实现 excel 表格下载</h3><p><strong>（1）下载依赖</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install xlsx file-saver</span><br></pre></td></tr></table></figure>\n\n<p><strong>（2）编写保存函数 htmlToExcel.js</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">FileSaver</span>, &#123; saveAs &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;file-saver&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> <span class=\"variable constant_\">XLSX</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;xlsx&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">ElMessage</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;element-plus&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">\t<span class=\"title function_\">downloadXlsx</span>(<span class=\"params\">dataList, fileName, wscols</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">const</span> <span class=\"title function_\">stringToBuff</span> = (<span class=\"params\">str</span>) =&gt; &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">let</span> buf = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayBuffer</span>(str.<span class=\"property\">length</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">let</span> view = <span class=\"keyword\">new</span> <span class=\"title class_\">Uint8Array</span>(buf)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i !== str.<span class=\"property\">length</span>; ++i) &#123;</span><br><span class=\"line\">\t\t\t\t\tview[i] = str.<span class=\"title function_\">charCodeAt</span>(i) &amp; <span class=\"number\">0xff</span></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> buf</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 创建工作簿</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">let</span> workbook = <span class=\"variable constant_\">XLSX</span>.<span class=\"property\">utils</span>.<span class=\"title function_\">book_new</span>()</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 将数据转换为工作表</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">let</span> worksheet = <span class=\"variable constant_\">XLSX</span>.<span class=\"property\">utils</span>.<span class=\"title function_\">aoa_to_sheet</span>(dataList)</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 设置导出表格每一列的宽</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (wscols) worksheet[<span class=\"string\">&#x27;!cols&#x27;</span>] = wscols</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 将工作表添加到工作簿</span></span><br><span class=\"line\">\t\t\t<span class=\"variable constant_\">XLSX</span>.<span class=\"property\">utils</span>.<span class=\"title function_\">book_append_sheet</span>(workbook, worksheet, <span class=\"string\">&#x27;sheet1&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 创建二进制对象写入转换好的字节流</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">let</span> xlsxBlob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>(</span><br><span class=\"line\">\t\t\t\t[</span><br><span class=\"line\">\t\t\t\t\t<span class=\"title function_\">stringToBuff</span>(</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"variable constant_\">XLSX</span>.<span class=\"title function_\">write</span>(workbook, &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"attr\">bookType</span>: <span class=\"string\">&#x27;xlsx&#x27;</span>,</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"attr\">bookSST</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"attr\">type</span>: <span class=\"string\">&#x27;binary&#x27;</span>,</span><br><span class=\"line\">\t\t\t\t\t\t&#125;)</span><br><span class=\"line\">\t\t\t\t\t),</span><br><span class=\"line\">\t\t\t\t],</span><br><span class=\"line\">\t\t\t\t&#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;&#x27;</span> &#125;</span><br><span class=\"line\">\t\t\t)</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 下载导出的文件</span></span><br><span class=\"line\">\t\t\t<span class=\"title class_\">FileSaver</span>.<span class=\"title function_\">saveAs</span>(xlsxBlob, fileName + <span class=\"string\">&#x27;.xlsx&#x27;</span>)</span><br><span class=\"line\">\t\t\t<span class=\"title class_\">ElMessage</span>(&#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;success&#x27;</span>, <span class=\"attr\">message</span>: <span class=\"string\">&#x27;导出成功&#x27;</span> &#125;)</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(e)</span><br><span class=\"line\">\t\t\t<span class=\"title class_\">ElMessage</span>.<span class=\"title function_\">error</span>(<span class=\"string\">&#x27;导出失败&#x27;</span>)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/** 加上 xlsxParam 可以解决导出的表格数据错误的问题,比如以下各种情况等:</span></span><br><span class=\"line\"><span class=\"comment\">\t * 身份证号： 5.23E+17</span></span><br><span class=\"line\"><span class=\"comment\">\t * 日期格式被补全到时分秒</span></span><br><span class=\"line\"><span class=\"comment\">\t * 3% -&gt;  0.03</span></span><br><span class=\"line\"><span class=\"comment\">\t * &#x27;1-7&#x27; -&gt; 2001/1/7</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"title function_\">getExcel</span>(<span class=\"params\">dom, fileName</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> xlsxParam = &#123; <span class=\"attr\">raw</span>: <span class=\"literal\">true</span> &#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">const</span> domDu = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(dom)</span><br><span class=\"line\">\t\t<span class=\"comment\">// let worksheet = XLSX.utils.table_to_book(domDu)</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> worksheet = <span class=\"variable constant_\">XLSX</span>.<span class=\"property\">utils</span>.<span class=\"title function_\">table_to_book</span>(domDu, xlsxParam)</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> worksheetout = <span class=\"variable constant_\">XLSX</span>.<span class=\"title function_\">write</span>(worksheet, &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">bookType</span>: <span class=\"string\">&#x27;xlsx&#x27;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">bookSST</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">type</span>: <span class=\"string\">&#x27;array&#x27;</span>,</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"title class_\">FileSaver</span>.<span class=\"title function_\">saveAs</span>(</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([worksheetout], &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;application/octet-stream&#x27;</span> &#125;),</span><br><span class=\"line\">\t\t\t\tfileName</span><br><span class=\"line\">\t\t\t)</span><br><span class=\"line\">\t\t\t<span class=\"title class_\">ElMessage</span>(&#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;success&#x27;</span>, <span class=\"attr\">message</span>: <span class=\"string\">&#x27;导出成功&#x27;</span> &#125;)</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(e)</span><br><span class=\"line\">\t\t\t<span class=\"title class_\">ElMessage</span>.<span class=\"title function_\">error</span>(<span class=\"string\">&#x27;导出失败&#x27;</span>)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> worksheetout</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>（3）直接使用</strong></p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">el-table</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;reportRef&quot;</span> <span class=\"attr\">v-loading</span>=<span class=\"string\">&quot;loading&quot;</span> <span class=\"attr\">:data</span>=<span class=\"string\">&quot;dataList&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;exportTable&quot;</span>&gt;</span></span>...<span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">el-table</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span></span></span><br><span class=\"line\">import download from &#x27;@/utils/htmlToExcel.js&#x27;</span><br><span class=\"line\">const loading = ref(false)</span><br><span class=\"line\">const dataList = ref([])</span><br><span class=\"line\">const getDataList = () =&gt; &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 使用方法1</span><br><span class=\"line\">const handleExport = () =&gt; &#123;</span><br><span class=\"line\">    let list = [</span><br><span class=\"line\">        [</span><br><span class=\"line\">            &quot;姓名&quot;,</span><br><span class=\"line\">            &quot;年龄&quot;,</span><br><span class=\"line\">            &quot;性别&quot;,</span><br><span class=\"line\">            &quot;学历&quot;,</span><br><span class=\"line\">            &quot;创建时间&quot;,</span><br><span class=\"line\">        ],</span><br><span class=\"line\">    ];</span><br><span class=\"line\">    dataList.value.forEach((item, index) =&gt; &#123;</span><br><span class=\"line\">        list.push([</span><br><span class=\"line\">            item.name,</span><br><span class=\"line\">            item.age,</span><br><span class=\"line\">            item.sex,</span><br><span class=\"line\">            item.education,</span><br><span class=\"line\">            item.createTime,</span><br><span class=\"line\">        ]);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    download.downloadXlsx(list, <span class=\"code\">`2023-12-01.xlsx`</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 使用方法2， 适用于复杂的表格 (单元格合并等情况)</span><br><span class=\"line\">const handleExport = () =&gt; &#123;</span><br><span class=\"line\">    download.getExcel(&#x27;#exportTable&#x27;, <span class=\"code\">`2023-12-01.xlsx`</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"👉-接口直接返回文件，实现-excel-表格下载\"><a href=\"#👉-接口直接返回文件，实现-excel-表格下载\" class=\"headerlink\" title=\"👉 接口直接返回文件，实现 excel 表格下载\"></a>👉 接口直接返回文件，实现 excel 表格下载</h3><ul>\n<li>接口返回</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// http.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> request <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/utils/request&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">exportVarTestReport</span>(<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"title function_\">request</span>(&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">url</span>: <span class=\"string\">&#x27;/app-api/website/calc/download&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">method</span>: <span class=\"string\">&#x27;get&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">params</span>: data,</span><br><span class=\"line\">\t\t<span class=\"attr\">responseType</span>: <span class=\"string\">&#x27;blob&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/x-www-form-urlencoded&#x27;</span>,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<img src=\"/images/前端实现导出xlsx表格/exportFile1.png\" alt=\"image\" class=\"max600\"/>\n<img src=\"/images/前端实现导出xlsx表格/exportFile2.png\" alt=\"image\" class=\"max600\"/>\n\n<ul>\n<li>处理数据(下载)</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 下载报告操作</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">downloadReport</span>(<span class=\"params\">row</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"title function_\">exportReport</span>(&#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">id</span>: row.<span class=\"property\">id</span>,</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">\t\t\t.<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 处理整个文件res.data</span></span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// ******** 开始 ********</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">const</span> link = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;a&#x27;</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">const</span> blogObj = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([res.<span class=\"property\">data</span>], &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"attr\">type</span>: <span class=\"string\">&#x27;application/vnd.ms-excel&#x27;</span>,</span><br><span class=\"line\">\t\t\t\t&#125;)</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 创建一个新的url对象</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">const</span> objectUrl = <span class=\"variable language_\">window</span>.<span class=\"property\">URL</span>.<span class=\"title function_\">createObjectURL</span>(blogObj)</span><br><span class=\"line\">\t\t\t\tlink.<span class=\"property\">href</span> = objectUrl</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 导出文件名</span></span><br><span class=\"line\">\t\t\t\tlink.<span class=\"property\">download</span> = <span class=\"string\">`result.xlsx`</span></span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 自定义下载文件名</span></span><br><span class=\"line\">\t\t\t\tlink.<span class=\"title function_\">click</span>()</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 为了更好地性能和内存使用状况，应该在适当的时候释放url</span></span><br><span class=\"line\">\t\t\t\t<span class=\"variable language_\">window</span>.<span class=\"property\">URL</span>.<span class=\"title function_\">revokeObjectURL</span>(objectUrl)</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// ******** 结束 ********</span></span><br><span class=\"line\">\t\t\t&#125;)</span><br><span class=\"line\">\t\t\t.<span class=\"title function_\">catch</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;下载失败&#x27;</span>)</span><br><span class=\"line\">\t\t\t&#125;)</span><br><span class=\"line\">\t\t\t.<span class=\"title function_\">finally</span>(<span class=\"function\">() =&gt;</span> &#123;&#125;)</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (error) &#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"👉-接口返回一个文件链接，实现点击按钮下载\"><a href=\"#👉-接口返回一个文件链接，实现点击按钮下载\" class=\"headerlink\" title=\"👉 接口返回一个文件链接，实现点击按钮下载\"></a>👉 接口返回一个文件链接，实现点击按钮下载</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> href = <span class=\"string\">&#x27;http: xxxxx&#x27;</span></span><br><span class=\"line\"><span class=\"title function_\">clickDownFile</span>(<span class=\"string\">&#x27;name&#x27;</span>, href)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 点击按钮下载</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">clickDownFile</span>(<span class=\"params\">filename, href</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> a = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;a&#x27;</span>)</span><br><span class=\"line\">\ta.<span class=\"property\">href</span> = href <span class=\"comment\">// a链接的下载地址</span></span><br><span class=\"line\">\ta.<span class=\"title function_\">setAttribute</span>(<span class=\"string\">&#x27;download&#x27;</span>, filename)</span><br><span class=\"line\">\t<span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"title function_\">appendChild</span>(a)</span><br><span class=\"line\">\ta.<span class=\"title function_\">click</span>()</span><br><span class=\"line\">\t<span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"title function_\">removeChild</span>(a)</span><br><span class=\"line\">\t<span class=\"variable language_\">window</span>.<span class=\"property\">URL</span>.<span class=\"title function_\">revokeObjectURL</span>(href)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"前端性能优化","date":"2025-09-12T07:49:53.000Z","cover":"/images/前端性能优化/cover.jpg","_content":"\n前端性能优化是提升用户体验的核心环节，直接影响**页面加载速度、交互流畅度和用户留存率**。\n优化需覆盖**资源加载、渲染执行、运行时效率**三大阶段，结合量化指标（如 Core Web Vitals）制定针对性方案。以下是系统的前端性能优化策略详解：\n\n### 资源加载阶段优化（减少加载时间）\n\n加载阶段是用户对性能的第一感知，目标是**降低首屏加载时间（FCP）和资源传输成本**\n\n**（1）资源体积优化**\n\n- **代码压缩与混淆**\n\n  - JS：使用 Terser 压缩(移除空格/换行/注释，缩短变量名)，Webpack/Vite 生产模式默认开启\n  - CSS：通过 CSSNano 压缩，配合 PostCSS 移除冗余规则\n  - HTML：使用 html-minifier 压缩，移除空白字符和注释\n    👉 效果：通常可减少 30%-60% 的资源体积\n\n- **图片与媒体优化**\n\n  - 采用精灵图，减少 http 请求次数\n  - 使用 svg 图，体积小\n\n  - **格式转换**：优先使用 WebP/AVIF（比 JPG 小 30%-50%），通过`<picture>`标签兼容旧浏览器\n\n  ```html\n  <picture>\n  \t<source srcset=\"image.avif\" type=\"image/avif\" />\n  \t<source srcset=\"image.webp\" type=\"image/webp\" />\n  \t<img src=\"image.jpg\" alt=\"描述文本\" />\n  </picture>\n  ```\n\n  - **分辨率适配**：用 srcset 和 sizes 提供多分辨率图片，避免大图片在小屏幕上加载\n\n  ```html\n  <img\n  \tsrc=\"pic-800.jpg\"\n  \tsrcset=\"pic-400.jpg 400w, pic-800.jpg 800w\"\n  \tsizes=\"(max-width: 600px) 400px, 800px\"\n  />\n  ```\n\n  - **压缩处理**：通过 Sharp（Node.js 库）或 TinyPNG 批量压缩图片，保留视觉质量的同时减小体积\n\n- **Tree Shaking（树摇）**\n  移除未引用的代码（如未使用的函数、库），需满足:\n  - 使用 ES6 模块（import/export）而非 CommonJS（require）\n  - 配置 package.json 的 sideEffects: false（标记无副作用文件）\n  - Webpack/Vite 生产模式自动启用\n\n**（2）资源加载策略**\n\n- **按需加载**\n\n- **预加载与预连接**\n\n  - preload：提前加载关键资源（如首屏 CSS、字体），优先级高于普通资源\n  - preconnect：提前建立与第三方域名的连接（如 CDN、API 服务器），减少 DNS 解析和 TCP 握手耗时\n\n- **懒加载（Lazy Load）**\n  延迟加载非首屏资源，减少初始请求数\n  - 图片 / 视频：使用 loading=\"lazy\"属性（浏览器原生支持）\n  ```html\n  <img src=\"below-fold.jpg\" loading=\"lazy\" alt=\"折叠区域图片\" />\n  ```\n  - 组件：通过 IntersectionObserver 观察者监听元素可见性后加载\n  ```javascript\n  const observer = new IntersectionObserver((entries) => {\n  \tentries.forEach((entry) => {\n  \t\tif (entry.isIntersecting) {\n  \t\t\timport('./LazyComponent').then((module) => {\n  \t\t\t\t// 渲染组件\n  \t\t\t})\n  \t\t\tobserver.unobserve(entry.target)\n  \t\t}\n  \t})\n  })\n  observer.observe(document.getElementById('lazy-container'))\n  ```\n\n**（3）网络传输优化**\n\n- **CDN 分发静态资源**\n  将 JS、CSS、图片等静态资源部署到 CDN（如 Cloudflare、阿里云 CDN），用户从最近的节点加载，减少网络延迟（尤其跨地区用户）\n\n- **启用 HTTP/2 或 HTTP/3**\n\n  - HTTP/2：支持多路复用（同一连接并发请求），解决 HTTP/1.1 的队头阻塞问题\n  - HTTP/3：基于 QUIC 协议（UDP），进一步优化丢包恢复和连接建立速度\n    👉 实施：Nginx/Apache 配置启用，大型应用可借助 Cloudflare 等服务商快速支持\n\n- **缓存策略优化**\n  - **强缓存**：静态资源（JS/CSS/ 图片）设置长期缓存\n  ```http\n  Cache-Control: max-age=31536000, immutable  # 缓存1年，不验证\n  ```\n  - **协商缓存**：API 数据或频繁更新的资源用 ETag 或 Last-Modified\n  ```http\n  ETag: \"abc123\"  # 资源唯一标识，内容变化则更新\n  Last-Modified: Tue, 11 Sep 2024 08:00:00 GMT\n  ```\n  - **缓存更新**：通过文件名哈希（如 app.8f3d.js）实现缓存击穿，内容变化时文件名更新\n\n### 渲染阶段优化（提升渲染效率）\n\n渲染阶段优化的核心是**减少重排（Reflow）和重绘（Repaint）**，提升页面渲染速度和流畅度\n**（1）DOM 优化**\n\n- **减少 DOM 节点数量与层级**\n  DOM 节点越多，浏览器构建渲染树（Render Tree）的耗时越长。优化方向：\n  - 避免无意义嵌套（如`<div><span>文本</span></div>`简化为`<span>文本</span>`）\n  - 用 CSS Grid/Flex 替代多层嵌套的布局结构\n  - 大型列表使用虚拟列表（如 react-window），仅渲染可视区域节点\n- **批量操作 DOM**\n  频繁修改 DOM 会触发多次重排，建议批量操作：\n  - 使用 documentFragment 或离线 DOM（如 div.innerHTML）暂存修改，完成后一次性插入文档：\n    ```javascript\n    const fragment = document.createDocumentFragment()\n    data.forEach((item) => {\n    \tconst li = document.createElement('li')\n    \tli.textContent = item.name\n    \tfragment.appendChild(li)\n    })\n    list.appendChild(fragment) // 仅触发1次重排\n    ```\n\n**（2）CSS 优化**\n\n- **简化选择器与样式**\n  - 避免复杂选择器（如 div:nth-child(2) > .class ~ span），改用类选择器（.item）\n  - 减少通配符（\\*）和属性选择器（[type=\"text\"]）的使用，匹配效率低\n  - 合并重复样式，使用 CSS 变量（--primary: #000）减少代码冗余\n- **避免触发重排的属性**\n  - 修改布局属性（width、height、margin 等）会触发重排，优先使用仅触发合成（Composite）的属性：\n  - 位移：用 transform: translate(Xpx, Ypx)替代 top/left\n  - 透明度：用 opacity 替代 visibility（后者仍会触发重绘）\n- **关键 CSS 内联**\n  将首屏必需的 CSS 内联到`<style>`中，避免外部 CSS 文件加载阻塞渲染：\n  ```html\n  <style>\n  \t/* 首屏关键CSS：导航、Banner等 */\n  \t.header {\n  \t\theight: 60px;\n  \t}\n  \t.banner {\n  \t\tbackground: #f0f0f0;\n  \t}\n  </style>\n  <!-- 非关键CSS异步加载 -->\n  <link\n  \trel=\"preload\"\n  \thref=\"non-critical.css\"\n  \tas=\"style\"\n  \tonload=\"this.rel='stylesheet'\"\n  />\n  ```\n\n**（3）渲染机制优化**\n\n- **使用 CSS Containment 隔离渲染范围**\n  告知浏览器某元素的渲染不会影响其他区域，限制重排 / 重绘范围：\n\n  ```css\n  .widget {\n  \tcontain: layout paint size; /* 布局、绘制、尺寸均独立 */\n  }\n  ```\n\n- **合理使用合成层（Compositor Layers）**\n  将频繁动画的元素（如轮播、弹窗）提升为独立合成层，避免影响其他元素：\n\n  ```css\n  .animated-element {\n  \twill-change: transform; /* 提示浏览器该元素将动画，提前准备合成层 */\n  \t/* 或使用 transform: translateZ(0) 强制创建合成层（兼容性更好） */\n  }\n  ```\n\n👉 注意：合成层过多会占用更多内存，需控制数量\n\n### 运行阶段优化（提升交互流畅度）\n\n运行阶段优化聚焦于**减少主线程阻塞**，确保用户交互（点击、滚动等）响应迅速\n**（1）JavaScript 优化**\n\n- 避免长任务（Long Tasks）\n  主线程执行超过 50ms 的任务会阻塞渲染，优化方案：\n\n  - 拆分长任务：用 setTimeout 或 queueMicrotask 分批次执行：\n\n    ```javascript\n    // 拆分大型循环\n    const processChunk = (start, end) => {\n    \tfor (let i = start; i < end && i < data.length; i++) {\n    \t\t// 处理单个数据\n    \t}\n    \tif (end < data.length) {\n    \t\tsetTimeout(() => processChunk(end, end + 100), 0) // 分批次执行\n    \t}\n    }\n    processChunk(0, 100)\n    ```\n\n  - 复杂计算移至 Web Worker：避免主线程阻塞（如数据解析、图表渲染）：\n\n    ```javascript\n    // 主线程\n    const worker = new Worker('data-processor.js')\n    worker.postMessage(largeDataset)\n    worker.onmessage = (e) => {\n    \tconsole.log('处理结果：', e.data)\n    }\n\n    // data-processor.js（Worker线程）\n    self.onmessage = (e) => {\n    \tconst result = heavyComputation(e.data) // 复杂计算\n    \tself.postMessage(result)\n    }\n    ```\n\n- 防抖（Debounce）与节流（Throttle）\n  限制高频事件（滚动、输入、resize）的执行频率：\n\n  - 防抖：延迟 n 秒后执行，若 n 秒内再次触发则重新计时（如搜索输入联想）：\n    ```javascript\n    const debounce = (fn, delay) => {\n    \tlet timer\n    \treturn (...args) => {\n    \t\tclearTimeout(timer)\n    \t\ttimer = setTimeout(() => fn.apply(this, args), delay)\n    \t}\n    }\n    input.addEventListener('input', debounce(handleSearch, 500))\n    ```\n  - 节流：每隔 n 秒最多执行一次（如滚动加载）：\n    ```javascript\n    const throttle = (fn, interval) => {\n    \tlet lastTime = 0\n    \treturn (...args) => {\n    \t\tconst now = Date.now()\n    \t\tif (now - lastTime >= interval) {\n    \t\t\tfn.apply(this, args)\n    \t\t\tlastTime = now\n    \t\t}\n    \t}\n    }\n    window.addEventListener('scroll', throttle(loadMore, 200))\n    ```\n\n- 优化事件监听\n\n  - 事件委托：将多个子元素的事件绑定到父元素，减少内存占用：\n\n    ```javascript\n    // 代替为每个li绑定click\n    ul.addEventListener('click', (e) => {\n    \tif (e.target.tagName === 'LI') {\n    \t\thandleLiClick(e.target)\n    \t}\n    })\n    ```\n\n  - 及时解绑：页面卸载或组件销毁时，移除事件监听和定时器：\n    ```javascript\n    // React useEffect示例\n    useEffect(() => {\n    \tconst timer = setInterval(updateData, 1000)\n    \treturn () => clearInterval(timer) // 组件卸载时清理\n    }, [])\n    ```\n\n**（2）动画与交互优化**\n\n- 优先使用 CSS 动画\n  CSS 动画由浏览器合成线程处理，不阻塞主线程；JS 动画需频繁触发重绘，优先选择：\n\n  - @keyframes 或 transition 实现动画；\n  - 复杂动画用 requestAnimationFrame 替代 setInterval（与浏览器刷新同步）：\n    ```javascript\n    const animate = (timestamp) => {\n    \t// 更新动画状态\n    \telement.style.transform = `translateX(${progress}px)`\n    \tif (progress < 100) {\n    \t\trequestAnimationFrame(animate) // 下一帧继续\n    \t}\n    }\n    requestAnimationFrame(animate)\n    ```\n\n- 优化滚动性能\n  滚动时避免 DOM 操作和复杂计算：\n\n  - 用 passive: true 优化触摸滚动（避免滚动阻塞）：\n\n    ```javascript\n    window.addEventListener('scroll', handleScroll, { passive: true })\n    ```\n\n  - 滚动事件中使用 getBoundingClientRect 时，缓存结果避免频繁重排。\n\n**（3）内存管理优化**\n\n- 避免内存泄漏\n  常见内存泄漏场景及解决方案：\n  - 未清理的定时器 / 事件监听：组件卸载时清除\n  - 全局变量：避免意外创建（如 function fn() { a = 1; }中的 a）\n  - 闭包引用：避免长期持有 DOM 或大对象引用；\n  - 使用 WeakMap/WeakSet 存储临时数据（键为对象时，对象销毁后自动回收）\n- 优化大型列表\n  长列表（1000 + 项）一次性渲染会导致 DOM 过多、内存飙升，解决方案：\n  - 虚拟列表：仅渲染可视区域项（如 react-window、vue-virtual-scroller）\n  - 分页加载：每次加载 20-50 项，滚动到底部时加载下一页\n\n### 性能监控与量化指标\n\n优化需结合量化指标持续迭代，核心关注:\n\n- Core Web Vitals（核心 Web 指标）\n  - LCP（最大内容绘制）：目标 < 2.5s（首屏核心内容加载时间）\n  - FID（首次输入延迟）：目标 < 100ms（用户首次交互响应时间）\n  - CLS（累积布局偏移）：目标 < 0.1（页面布局稳定性）\n- 监控工具\n  - 开发阶段：Lighthouse（Chrome 插件）、WebPageTest（详细性能报告）\n  - 生产环境：Chrome User Experience Report（真实用户数据）、Sentry（错误 + 性能监控）\n- 优化流程\n  - 用 Lighthouse 生成性能报告，定位瓶颈（如大图片未压缩、长任务阻塞）\n  - 按优先级实施优化（先解决核心指标不达标项）\n  - 上线后监控指标变化，持续迭代\n\n### 总结\n\n前端性能优化的核心逻辑是：**减少资源体积 → 加速资源传输 → 优化渲染效率 → 避免主线程阻塞**。需结合业务场景（如电商注重首屏加载，后台系统注重交互流畅度）制定优先级，同时通过量化指标验证优化效果。性能优化是持续过程，需随着用户增长和功能迭代不断调整策略\n","source":"_posts/2025-09-12-前端性能优化.md","raw":"---\ntitle: 前端性能优化\ndate: 2025-09-12 15:49:53\ntags:\n  - 性能优化\ncategories: 性能优化\ncover: /images/前端性能优化/cover.jpg # 封面图\n---\n\n前端性能优化是提升用户体验的核心环节，直接影响**页面加载速度、交互流畅度和用户留存率**。\n优化需覆盖**资源加载、渲染执行、运行时效率**三大阶段，结合量化指标（如 Core Web Vitals）制定针对性方案。以下是系统的前端性能优化策略详解：\n\n### 资源加载阶段优化（减少加载时间）\n\n加载阶段是用户对性能的第一感知，目标是**降低首屏加载时间（FCP）和资源传输成本**\n\n**（1）资源体积优化**\n\n- **代码压缩与混淆**\n\n  - JS：使用 Terser 压缩(移除空格/换行/注释，缩短变量名)，Webpack/Vite 生产模式默认开启\n  - CSS：通过 CSSNano 压缩，配合 PostCSS 移除冗余规则\n  - HTML：使用 html-minifier 压缩，移除空白字符和注释\n    👉 效果：通常可减少 30%-60% 的资源体积\n\n- **图片与媒体优化**\n\n  - 采用精灵图，减少 http 请求次数\n  - 使用 svg 图，体积小\n\n  - **格式转换**：优先使用 WebP/AVIF（比 JPG 小 30%-50%），通过`<picture>`标签兼容旧浏览器\n\n  ```html\n  <picture>\n  \t<source srcset=\"image.avif\" type=\"image/avif\" />\n  \t<source srcset=\"image.webp\" type=\"image/webp\" />\n  \t<img src=\"image.jpg\" alt=\"描述文本\" />\n  </picture>\n  ```\n\n  - **分辨率适配**：用 srcset 和 sizes 提供多分辨率图片，避免大图片在小屏幕上加载\n\n  ```html\n  <img\n  \tsrc=\"pic-800.jpg\"\n  \tsrcset=\"pic-400.jpg 400w, pic-800.jpg 800w\"\n  \tsizes=\"(max-width: 600px) 400px, 800px\"\n  />\n  ```\n\n  - **压缩处理**：通过 Sharp（Node.js 库）或 TinyPNG 批量压缩图片，保留视觉质量的同时减小体积\n\n- **Tree Shaking（树摇）**\n  移除未引用的代码（如未使用的函数、库），需满足:\n  - 使用 ES6 模块（import/export）而非 CommonJS（require）\n  - 配置 package.json 的 sideEffects: false（标记无副作用文件）\n  - Webpack/Vite 生产模式自动启用\n\n**（2）资源加载策略**\n\n- **按需加载**\n\n- **预加载与预连接**\n\n  - preload：提前加载关键资源（如首屏 CSS、字体），优先级高于普通资源\n  - preconnect：提前建立与第三方域名的连接（如 CDN、API 服务器），减少 DNS 解析和 TCP 握手耗时\n\n- **懒加载（Lazy Load）**\n  延迟加载非首屏资源，减少初始请求数\n  - 图片 / 视频：使用 loading=\"lazy\"属性（浏览器原生支持）\n  ```html\n  <img src=\"below-fold.jpg\" loading=\"lazy\" alt=\"折叠区域图片\" />\n  ```\n  - 组件：通过 IntersectionObserver 观察者监听元素可见性后加载\n  ```javascript\n  const observer = new IntersectionObserver((entries) => {\n  \tentries.forEach((entry) => {\n  \t\tif (entry.isIntersecting) {\n  \t\t\timport('./LazyComponent').then((module) => {\n  \t\t\t\t// 渲染组件\n  \t\t\t})\n  \t\t\tobserver.unobserve(entry.target)\n  \t\t}\n  \t})\n  })\n  observer.observe(document.getElementById('lazy-container'))\n  ```\n\n**（3）网络传输优化**\n\n- **CDN 分发静态资源**\n  将 JS、CSS、图片等静态资源部署到 CDN（如 Cloudflare、阿里云 CDN），用户从最近的节点加载，减少网络延迟（尤其跨地区用户）\n\n- **启用 HTTP/2 或 HTTP/3**\n\n  - HTTP/2：支持多路复用（同一连接并发请求），解决 HTTP/1.1 的队头阻塞问题\n  - HTTP/3：基于 QUIC 协议（UDP），进一步优化丢包恢复和连接建立速度\n    👉 实施：Nginx/Apache 配置启用，大型应用可借助 Cloudflare 等服务商快速支持\n\n- **缓存策略优化**\n  - **强缓存**：静态资源（JS/CSS/ 图片）设置长期缓存\n  ```http\n  Cache-Control: max-age=31536000, immutable  # 缓存1年，不验证\n  ```\n  - **协商缓存**：API 数据或频繁更新的资源用 ETag 或 Last-Modified\n  ```http\n  ETag: \"abc123\"  # 资源唯一标识，内容变化则更新\n  Last-Modified: Tue, 11 Sep 2024 08:00:00 GMT\n  ```\n  - **缓存更新**：通过文件名哈希（如 app.8f3d.js）实现缓存击穿，内容变化时文件名更新\n\n### 渲染阶段优化（提升渲染效率）\n\n渲染阶段优化的核心是**减少重排（Reflow）和重绘（Repaint）**，提升页面渲染速度和流畅度\n**（1）DOM 优化**\n\n- **减少 DOM 节点数量与层级**\n  DOM 节点越多，浏览器构建渲染树（Render Tree）的耗时越长。优化方向：\n  - 避免无意义嵌套（如`<div><span>文本</span></div>`简化为`<span>文本</span>`）\n  - 用 CSS Grid/Flex 替代多层嵌套的布局结构\n  - 大型列表使用虚拟列表（如 react-window），仅渲染可视区域节点\n- **批量操作 DOM**\n  频繁修改 DOM 会触发多次重排，建议批量操作：\n  - 使用 documentFragment 或离线 DOM（如 div.innerHTML）暂存修改，完成后一次性插入文档：\n    ```javascript\n    const fragment = document.createDocumentFragment()\n    data.forEach((item) => {\n    \tconst li = document.createElement('li')\n    \tli.textContent = item.name\n    \tfragment.appendChild(li)\n    })\n    list.appendChild(fragment) // 仅触发1次重排\n    ```\n\n**（2）CSS 优化**\n\n- **简化选择器与样式**\n  - 避免复杂选择器（如 div:nth-child(2) > .class ~ span），改用类选择器（.item）\n  - 减少通配符（\\*）和属性选择器（[type=\"text\"]）的使用，匹配效率低\n  - 合并重复样式，使用 CSS 变量（--primary: #000）减少代码冗余\n- **避免触发重排的属性**\n  - 修改布局属性（width、height、margin 等）会触发重排，优先使用仅触发合成（Composite）的属性：\n  - 位移：用 transform: translate(Xpx, Ypx)替代 top/left\n  - 透明度：用 opacity 替代 visibility（后者仍会触发重绘）\n- **关键 CSS 内联**\n  将首屏必需的 CSS 内联到`<style>`中，避免外部 CSS 文件加载阻塞渲染：\n  ```html\n  <style>\n  \t/* 首屏关键CSS：导航、Banner等 */\n  \t.header {\n  \t\theight: 60px;\n  \t}\n  \t.banner {\n  \t\tbackground: #f0f0f0;\n  \t}\n  </style>\n  <!-- 非关键CSS异步加载 -->\n  <link\n  \trel=\"preload\"\n  \thref=\"non-critical.css\"\n  \tas=\"style\"\n  \tonload=\"this.rel='stylesheet'\"\n  />\n  ```\n\n**（3）渲染机制优化**\n\n- **使用 CSS Containment 隔离渲染范围**\n  告知浏览器某元素的渲染不会影响其他区域，限制重排 / 重绘范围：\n\n  ```css\n  .widget {\n  \tcontain: layout paint size; /* 布局、绘制、尺寸均独立 */\n  }\n  ```\n\n- **合理使用合成层（Compositor Layers）**\n  将频繁动画的元素（如轮播、弹窗）提升为独立合成层，避免影响其他元素：\n\n  ```css\n  .animated-element {\n  \twill-change: transform; /* 提示浏览器该元素将动画，提前准备合成层 */\n  \t/* 或使用 transform: translateZ(0) 强制创建合成层（兼容性更好） */\n  }\n  ```\n\n👉 注意：合成层过多会占用更多内存，需控制数量\n\n### 运行阶段优化（提升交互流畅度）\n\n运行阶段优化聚焦于**减少主线程阻塞**，确保用户交互（点击、滚动等）响应迅速\n**（1）JavaScript 优化**\n\n- 避免长任务（Long Tasks）\n  主线程执行超过 50ms 的任务会阻塞渲染，优化方案：\n\n  - 拆分长任务：用 setTimeout 或 queueMicrotask 分批次执行：\n\n    ```javascript\n    // 拆分大型循环\n    const processChunk = (start, end) => {\n    \tfor (let i = start; i < end && i < data.length; i++) {\n    \t\t// 处理单个数据\n    \t}\n    \tif (end < data.length) {\n    \t\tsetTimeout(() => processChunk(end, end + 100), 0) // 分批次执行\n    \t}\n    }\n    processChunk(0, 100)\n    ```\n\n  - 复杂计算移至 Web Worker：避免主线程阻塞（如数据解析、图表渲染）：\n\n    ```javascript\n    // 主线程\n    const worker = new Worker('data-processor.js')\n    worker.postMessage(largeDataset)\n    worker.onmessage = (e) => {\n    \tconsole.log('处理结果：', e.data)\n    }\n\n    // data-processor.js（Worker线程）\n    self.onmessage = (e) => {\n    \tconst result = heavyComputation(e.data) // 复杂计算\n    \tself.postMessage(result)\n    }\n    ```\n\n- 防抖（Debounce）与节流（Throttle）\n  限制高频事件（滚动、输入、resize）的执行频率：\n\n  - 防抖：延迟 n 秒后执行，若 n 秒内再次触发则重新计时（如搜索输入联想）：\n    ```javascript\n    const debounce = (fn, delay) => {\n    \tlet timer\n    \treturn (...args) => {\n    \t\tclearTimeout(timer)\n    \t\ttimer = setTimeout(() => fn.apply(this, args), delay)\n    \t}\n    }\n    input.addEventListener('input', debounce(handleSearch, 500))\n    ```\n  - 节流：每隔 n 秒最多执行一次（如滚动加载）：\n    ```javascript\n    const throttle = (fn, interval) => {\n    \tlet lastTime = 0\n    \treturn (...args) => {\n    \t\tconst now = Date.now()\n    \t\tif (now - lastTime >= interval) {\n    \t\t\tfn.apply(this, args)\n    \t\t\tlastTime = now\n    \t\t}\n    \t}\n    }\n    window.addEventListener('scroll', throttle(loadMore, 200))\n    ```\n\n- 优化事件监听\n\n  - 事件委托：将多个子元素的事件绑定到父元素，减少内存占用：\n\n    ```javascript\n    // 代替为每个li绑定click\n    ul.addEventListener('click', (e) => {\n    \tif (e.target.tagName === 'LI') {\n    \t\thandleLiClick(e.target)\n    \t}\n    })\n    ```\n\n  - 及时解绑：页面卸载或组件销毁时，移除事件监听和定时器：\n    ```javascript\n    // React useEffect示例\n    useEffect(() => {\n    \tconst timer = setInterval(updateData, 1000)\n    \treturn () => clearInterval(timer) // 组件卸载时清理\n    }, [])\n    ```\n\n**（2）动画与交互优化**\n\n- 优先使用 CSS 动画\n  CSS 动画由浏览器合成线程处理，不阻塞主线程；JS 动画需频繁触发重绘，优先选择：\n\n  - @keyframes 或 transition 实现动画；\n  - 复杂动画用 requestAnimationFrame 替代 setInterval（与浏览器刷新同步）：\n    ```javascript\n    const animate = (timestamp) => {\n    \t// 更新动画状态\n    \telement.style.transform = `translateX(${progress}px)`\n    \tif (progress < 100) {\n    \t\trequestAnimationFrame(animate) // 下一帧继续\n    \t}\n    }\n    requestAnimationFrame(animate)\n    ```\n\n- 优化滚动性能\n  滚动时避免 DOM 操作和复杂计算：\n\n  - 用 passive: true 优化触摸滚动（避免滚动阻塞）：\n\n    ```javascript\n    window.addEventListener('scroll', handleScroll, { passive: true })\n    ```\n\n  - 滚动事件中使用 getBoundingClientRect 时，缓存结果避免频繁重排。\n\n**（3）内存管理优化**\n\n- 避免内存泄漏\n  常见内存泄漏场景及解决方案：\n  - 未清理的定时器 / 事件监听：组件卸载时清除\n  - 全局变量：避免意外创建（如 function fn() { a = 1; }中的 a）\n  - 闭包引用：避免长期持有 DOM 或大对象引用；\n  - 使用 WeakMap/WeakSet 存储临时数据（键为对象时，对象销毁后自动回收）\n- 优化大型列表\n  长列表（1000 + 项）一次性渲染会导致 DOM 过多、内存飙升，解决方案：\n  - 虚拟列表：仅渲染可视区域项（如 react-window、vue-virtual-scroller）\n  - 分页加载：每次加载 20-50 项，滚动到底部时加载下一页\n\n### 性能监控与量化指标\n\n优化需结合量化指标持续迭代，核心关注:\n\n- Core Web Vitals（核心 Web 指标）\n  - LCP（最大内容绘制）：目标 < 2.5s（首屏核心内容加载时间）\n  - FID（首次输入延迟）：目标 < 100ms（用户首次交互响应时间）\n  - CLS（累积布局偏移）：目标 < 0.1（页面布局稳定性）\n- 监控工具\n  - 开发阶段：Lighthouse（Chrome 插件）、WebPageTest（详细性能报告）\n  - 生产环境：Chrome User Experience Report（真实用户数据）、Sentry（错误 + 性能监控）\n- 优化流程\n  - 用 Lighthouse 生成性能报告，定位瓶颈（如大图片未压缩、长任务阻塞）\n  - 按优先级实施优化（先解决核心指标不达标项）\n  - 上线后监控指标变化，持续迭代\n\n### 总结\n\n前端性能优化的核心逻辑是：**减少资源体积 → 加速资源传输 → 优化渲染效率 → 避免主线程阻塞**。需结合业务场景（如电商注重首屏加载，后台系统注重交互流畅度）制定优先级，同时通过量化指标验证优化效果。性能优化是持续过程，需随着用户增长和功能迭代不断调整策略\n","slug":"前端性能优化","published":1,"updated":"2025-09-13T08:09:15.107Z","comments":1,"layout":"post","photos":[],"_id":"cmfhzm6b8000biwnc9utkdb91","content":"<p>前端性能优化是提升用户体验的核心环节，直接影响<strong>页面加载速度、交互流畅度和用户留存率</strong>。<br>优化需覆盖<strong>资源加载、渲染执行、运行时效率</strong>三大阶段，结合量化指标（如 Core Web Vitals）制定针对性方案。以下是系统的前端性能优化策略详解：</p>\n<h3 id=\"资源加载阶段优化（减少加载时间）\"><a href=\"#资源加载阶段优化（减少加载时间）\" class=\"headerlink\" title=\"资源加载阶段优化（减少加载时间）\"></a>资源加载阶段优化（减少加载时间）</h3><p>加载阶段是用户对性能的第一感知，目标是<strong>降低首屏加载时间（FCP）和资源传输成本</strong></p>\n<p><strong>（1）资源体积优化</strong></p>\n<ul>\n<li><p><strong>代码压缩与混淆</strong></p>\n<ul>\n<li>JS：使用 Terser 压缩(移除空格&#x2F;换行&#x2F;注释，缩短变量名)，Webpack&#x2F;Vite 生产模式默认开启</li>\n<li>CSS：通过 CSSNano 压缩，配合 PostCSS 移除冗余规则</li>\n<li>HTML：使用 html-minifier 压缩，移除空白字符和注释<br>👉 效果：通常可减少 30%-60% 的资源体积</li>\n</ul>\n</li>\n<li><p><strong>图片与媒体优化</strong></p>\n<ul>\n<li><p>采用精灵图，减少 http 请求次数</p>\n</li>\n<li><p>使用 svg 图，体积小</p>\n</li>\n<li><p><strong>格式转换</strong>：优先使用 WebP&#x2F;AVIF（比 JPG 小 30%-50%），通过<code>&lt;picture&gt;</code>标签兼容旧浏览器</p>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">picture</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">srcset</span>=<span class=\"string\">&quot;image.avif&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;image/avif&quot;</span> /&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">srcset</span>=<span class=\"string\">&quot;image.webp&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;image/webp&quot;</span> /&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;image.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;描述文本&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">picture</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>分辨率适配</strong>：用 srcset 和 sizes 提供多分辨率图片，避免大图片在小屏幕上加载</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span></span></span><br><span class=\"line\"><span class=\"tag\">\t<span class=\"attr\">src</span>=<span class=\"string\">&quot;pic-800.jpg&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t<span class=\"attr\">srcset</span>=<span class=\"string\">&quot;pic-400.jpg 400w, pic-800.jpg 800w&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t<span class=\"attr\">sizes</span>=<span class=\"string\">&quot;(max-width: 600px) 400px, 800px&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">/&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>压缩处理</strong>：通过 Sharp（Node.js 库）或 TinyPNG 批量压缩图片，保留视觉质量的同时减小体积</li>\n</ul>\n</li>\n<li><p><strong>Tree Shaking（树摇）</strong><br>移除未引用的代码（如未使用的函数、库），需满足:</p>\n<ul>\n<li>使用 ES6 模块（import&#x2F;export）而非 CommonJS（require）</li>\n<li>配置 package.json 的 sideEffects: false（标记无副作用文件）</li>\n<li>Webpack&#x2F;Vite 生产模式自动启用</li>\n</ul>\n</li>\n</ul>\n<p><strong>（2）资源加载策略</strong></p>\n<ul>\n<li><p><strong>按需加载</strong></p>\n</li>\n<li><p><strong>预加载与预连接</strong></p>\n<ul>\n<li>preload：提前加载关键资源（如首屏 CSS、字体），优先级高于普通资源</li>\n<li>preconnect：提前建立与第三方域名的连接（如 CDN、API 服务器），减少 DNS 解析和 TCP 握手耗时</li>\n</ul>\n</li>\n<li><p><strong>懒加载（Lazy Load）</strong><br>延迟加载非首屏资源，减少初始请求数</p>\n<ul>\n<li>图片 &#x2F; 视频：使用 loading&#x3D;”lazy”属性（浏览器原生支持）</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;below-fold.jpg&quot;</span> <span class=\"attr\">loading</span>=<span class=\"string\">&quot;lazy&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;折叠区域图片&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>组件：通过 IntersectionObserver 观察者监听元素可见性后加载</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> observer = <span class=\"keyword\">new</span> <span class=\"title class_\">IntersectionObserver</span>(<span class=\"function\">(<span class=\"params\">entries</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\tentries.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">entry</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (entry.<span class=\"property\">isIntersecting</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">import</span>(<span class=\"string\">&#x27;./LazyComponent&#x27;</span>).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\"><span class=\"variable language_\">module</span></span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 渲染组件</span></span><br><span class=\"line\">\t\t\t&#125;)</span><br><span class=\"line\">\t\t\tobserver.<span class=\"title function_\">unobserve</span>(entry.<span class=\"property\">target</span>)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">observer.<span class=\"title function_\">observe</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;lazy-container&#x27;</span>))</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><strong>（3）网络传输优化</strong></p>\n<ul>\n<li><p><strong>CDN 分发静态资源</strong><br>将 JS、CSS、图片等静态资源部署到 CDN（如 Cloudflare、阿里云 CDN），用户从最近的节点加载，减少网络延迟（尤其跨地区用户）</p>\n</li>\n<li><p><strong>启用 HTTP&#x2F;2 或 HTTP&#x2F;3</strong></p>\n<ul>\n<li>HTTP&#x2F;2：支持多路复用（同一连接并发请求），解决 HTTP&#x2F;1.1 的队头阻塞问题</li>\n<li>HTTP&#x2F;3：基于 QUIC 协议（UDP），进一步优化丢包恢复和连接建立速度<br>👉 实施：Nginx&#x2F;Apache 配置启用，大型应用可借助 Cloudflare 等服务商快速支持</li>\n</ul>\n</li>\n<li><p><strong>缓存策略优化</strong></p>\n<ul>\n<li><strong>强缓存</strong>：静态资源（JS&#x2F;CSS&#x2F; 图片）设置长期缓存</li>\n</ul>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Cache-Control</span><span class=\"punctuation\">: </span>max-age=31536000, immutable  # 缓存1年，不验证</span><br></pre></td></tr></table></figure>\n<ul>\n<li><strong>协商缓存</strong>：API 数据或频繁更新的资源用 ETag 或 Last-Modified</li>\n</ul>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">ETag</span><span class=\"punctuation\">: </span>&quot;abc123&quot;  # 资源唯一标识，内容变化则更新</span><br><span class=\"line\"><span class=\"attribute\">Last-Modified</span><span class=\"punctuation\">: </span>Tue, 11 Sep 2024 08:00:00 GMT</span><br></pre></td></tr></table></figure>\n<ul>\n<li><strong>缓存更新</strong>：通过文件名哈希（如 app.8f3d.js）实现缓存击穿，内容变化时文件名更新</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"渲染阶段优化（提升渲染效率）\"><a href=\"#渲染阶段优化（提升渲染效率）\" class=\"headerlink\" title=\"渲染阶段优化（提升渲染效率）\"></a>渲染阶段优化（提升渲染效率）</h3><p>渲染阶段优化的核心是<strong>减少重排（Reflow）和重绘（Repaint）</strong>，提升页面渲染速度和流畅度<br><strong>（1）DOM 优化</strong></p>\n<ul>\n<li><strong>减少 DOM 节点数量与层级</strong><br>DOM 节点越多，浏览器构建渲染树（Render Tree）的耗时越长。优化方向：<ul>\n<li>避免无意义嵌套（如<code>&lt;div&gt;&lt;span&gt;文本&lt;/span&gt;&lt;/div&gt;</code>简化为<code>&lt;span&gt;文本&lt;/span&gt;</code>）</li>\n<li>用 CSS Grid&#x2F;Flex 替代多层嵌套的布局结构</li>\n<li>大型列表使用虚拟列表（如 react-window），仅渲染可视区域节点</li>\n</ul>\n</li>\n<li><strong>批量操作 DOM</strong><br>频繁修改 DOM 会触发多次重排，建议批量操作：<ul>\n<li>使用 documentFragment 或离线 DOM（如 div.innerHTML）暂存修改，完成后一次性插入文档：<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fragment = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createDocumentFragment</span>()</span><br><span class=\"line\">data.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> li = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;li&#x27;</span>)</span><br><span class=\"line\">\tli.<span class=\"property\">textContent</span> = item.<span class=\"property\">name</span></span><br><span class=\"line\">\tfragment.<span class=\"title function_\">appendChild</span>(li)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">list.<span class=\"title function_\">appendChild</span>(fragment) <span class=\"comment\">// 仅触发1次重排</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<p><strong>（2）CSS 优化</strong></p>\n<ul>\n<li><strong>简化选择器与样式</strong><ul>\n<li>避免复杂选择器（如 div:nth-child(2) &gt; .class ~ span），改用类选择器（.item）</li>\n<li>减少通配符（*）和属性选择器（[type&#x3D;”text”]）的使用，匹配效率低</li>\n<li>合并重复样式，使用 CSS 变量（–primary: #000）减少代码冗余</li>\n</ul>\n</li>\n<li><strong>避免触发重排的属性</strong><ul>\n<li>修改布局属性（width、height、margin 等）会触发重排，优先使用仅触发合成（Composite）的属性：</li>\n<li>位移：用 transform: translate(Xpx, Ypx)替代 top&#x2F;left</li>\n<li>透明度：用 opacity 替代 visibility（后者仍会触发重绘）</li>\n</ul>\n</li>\n<li><strong>关键 CSS 内联</strong><br>将首屏必需的 CSS 内联到<code>&lt;style&gt;</code>中，避免外部 CSS 文件加载阻塞渲染：<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"comment\">/* 首屏关键CSS：导航、Banner等 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"selector-class\">.header</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t<span class=\"attribute\">height</span>: <span class=\"number\">60px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"selector-class\">.banner</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t<span class=\"attribute\">background</span>: <span class=\"number\">#f0f0f0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 非关键CSS异步加载 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span></span></span><br><span class=\"line\"><span class=\"tag\">\t<span class=\"attr\">rel</span>=<span class=\"string\">&quot;preload&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t<span class=\"attr\">href</span>=<span class=\"string\">&quot;non-critical.css&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t<span class=\"attr\">as</span>=<span class=\"string\">&quot;style&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t<span class=\"attr\">onload</span>=<span class=\"string\">&quot;this.rel=&#x27;stylesheet&#x27;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">/&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><strong>（3）渲染机制优化</strong></p>\n<ul>\n<li><p><strong>使用 CSS Containment 隔离渲染范围</strong><br>告知浏览器某元素的渲染不会影响其他区域，限制重排 &#x2F; 重绘范围：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.widget</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">contain</span>: layout paint size; <span class=\"comment\">/* 布局、绘制、尺寸均独立 */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>合理使用合成层（Compositor Layers）</strong><br>将频繁动画的元素（如轮播、弹窗）提升为独立合成层，避免影响其他元素：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.animated-element</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">will-change</span>: transform; <span class=\"comment\">/* 提示浏览器该元素将动画，提前准备合成层 */</span></span><br><span class=\"line\">\t<span class=\"comment\">/* 或使用 transform: translateZ(0) 强制创建合成层（兼容性更好） */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>👉 注意：合成层过多会占用更多内存，需控制数量</p>\n<h3 id=\"运行阶段优化（提升交互流畅度）\"><a href=\"#运行阶段优化（提升交互流畅度）\" class=\"headerlink\" title=\"运行阶段优化（提升交互流畅度）\"></a>运行阶段优化（提升交互流畅度）</h3><p>运行阶段优化聚焦于<strong>减少主线程阻塞</strong>，确保用户交互（点击、滚动等）响应迅速<br><strong>（1）JavaScript 优化</strong></p>\n<ul>\n<li><p>避免长任务（Long Tasks）<br>主线程执行超过 50ms 的任务会阻塞渲染，优化方案：</p>\n<ul>\n<li><p>拆分长任务：用 setTimeout 或 queueMicrotask 分批次执行：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 拆分大型循环</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">processChunk</span> = (<span class=\"params\">start, end</span>) =&gt; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = start; i &lt; end &amp;&amp; i &lt; data.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 处理单个数据</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (end &lt; data.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> <span class=\"title function_\">processChunk</span>(end, end + <span class=\"number\">100</span>), <span class=\"number\">0</span>) <span class=\"comment\">// 分批次执行</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">processChunk</span>(<span class=\"number\">0</span>, <span class=\"number\">100</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>复杂计算移至 Web Worker：避免主线程阻塞（如数据解析、图表渲染）：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 主线程</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> worker = <span class=\"keyword\">new</span> <span class=\"title class_\">Worker</span>(<span class=\"string\">&#x27;data-processor.js&#x27;</span>)</span><br><span class=\"line\">worker.<span class=\"title function_\">postMessage</span>(largeDataset)</span><br><span class=\"line\">worker.<span class=\"property\">onmessage</span> = <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;处理结果：&#x27;</span>, e.<span class=\"property\">data</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// data-processor.js（Worker线程）</span></span><br><span class=\"line\">self.<span class=\"property\">onmessage</span> = <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> result = <span class=\"title function_\">heavyComputation</span>(e.<span class=\"property\">data</span>) <span class=\"comment\">// 复杂计算</span></span><br><span class=\"line\">\tself.<span class=\"title function_\">postMessage</span>(result)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>防抖（Debounce）与节流（Throttle）<br>限制高频事件（滚动、输入、resize）的执行频率：</p>\n<ul>\n<li>防抖：延迟 n 秒后执行，若 n 秒内再次触发则重新计时（如搜索输入联想）：<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">debounce</span> = (<span class=\"params\">fn, delay</span>) =&gt; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> timer</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"function\">(<span class=\"params\">...args</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">clearTimeout</span>(timer)</span><br><span class=\"line\">\t\ttimer = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> fn.<span class=\"title function_\">apply</span>(<span class=\"variable language_\">this</span>, args), delay)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">input.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;input&#x27;</span>, <span class=\"title function_\">debounce</span>(handleSearch, <span class=\"number\">500</span>))</span><br></pre></td></tr></table></figure></li>\n<li>节流：每隔 n 秒最多执行一次（如滚动加载）：<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">throttle</span> = (<span class=\"params\">fn, interval</span>) =&gt; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> lastTime = <span class=\"number\">0</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"function\">(<span class=\"params\">...args</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">const</span> now = <span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>()</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (now - lastTime &gt;= interval) &#123;</span><br><span class=\"line\">\t\t\tfn.<span class=\"title function_\">apply</span>(<span class=\"variable language_\">this</span>, args)</span><br><span class=\"line\">\t\t\tlastTime = now</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;scroll&#x27;</span>, <span class=\"title function_\">throttle</span>(loadMore, <span class=\"number\">200</span>))</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>优化事件监听</p>\n<ul>\n<li><p>事件委托：将多个子元素的事件绑定到父元素，减少内存占用：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 代替为每个li绑定click</span></span><br><span class=\"line\">ul.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (e.<span class=\"property\">target</span>.<span class=\"property\">tagName</span> === <span class=\"string\">&#x27;LI&#x27;</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"title function_\">handleLiClick</span>(e.<span class=\"property\">target</span>)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>及时解绑：页面卸载或组件销毁时，移除事件监听和定时器：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// React useEffect示例</span></span><br><span class=\"line\"><span class=\"title function_\">useEffect</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> timer = <span class=\"built_in\">setInterval</span>(updateData, <span class=\"number\">1000</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"function\">() =&gt;</span> <span class=\"built_in\">clearInterval</span>(timer) <span class=\"comment\">// 组件卸载时清理</span></span><br><span class=\"line\">&#125;, [])</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<p><strong>（2）动画与交互优化</strong></p>\n<ul>\n<li><p>优先使用 CSS 动画<br>CSS 动画由浏览器合成线程处理，不阻塞主线程；JS 动画需频繁触发重绘，优先选择：</p>\n<ul>\n<li>@keyframes 或 transition 实现动画；</li>\n<li>复杂动画用 requestAnimationFrame 替代 setInterval（与浏览器刷新同步）：<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">animate</span> = (<span class=\"params\">timestamp</span>) =&gt; &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 更新动画状态</span></span><br><span class=\"line\">\telement.<span class=\"property\">style</span>.<span class=\"property\">transform</span> = <span class=\"string\">`translateX(<span class=\"subst\">$&#123;progress&#125;</span>px)`</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (progress &lt; <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"title function_\">requestAnimationFrame</span>(animate) <span class=\"comment\">// 下一帧继续</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">requestAnimationFrame</span>(animate)</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>优化滚动性能<br>滚动时避免 DOM 操作和复杂计算：</p>\n<ul>\n<li><p>用 passive: true 优化触摸滚动（避免滚动阻塞）：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;scroll&#x27;</span>, handleScroll, &#123; <span class=\"attr\">passive</span>: <span class=\"literal\">true</span> &#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>滚动事件中使用 getBoundingClientRect 时，缓存结果避免频繁重排。</p>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>（3）内存管理优化</strong></p>\n<ul>\n<li>避免内存泄漏<br>常见内存泄漏场景及解决方案：<ul>\n<li>未清理的定时器 &#x2F; 事件监听：组件卸载时清除</li>\n<li>全局变量：避免意外创建（如 function fn() { a &#x3D; 1; }中的 a）</li>\n<li>闭包引用：避免长期持有 DOM 或大对象引用；</li>\n<li>使用 WeakMap&#x2F;WeakSet 存储临时数据（键为对象时，对象销毁后自动回收）</li>\n</ul>\n</li>\n<li>优化大型列表<br>长列表（1000 + 项）一次性渲染会导致 DOM 过多、内存飙升，解决方案：<ul>\n<li>虚拟列表：仅渲染可视区域项（如 react-window、vue-virtual-scroller）</li>\n<li>分页加载：每次加载 20-50 项，滚动到底部时加载下一页</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"性能监控与量化指标\"><a href=\"#性能监控与量化指标\" class=\"headerlink\" title=\"性能监控与量化指标\"></a>性能监控与量化指标</h3><p>优化需结合量化指标持续迭代，核心关注:</p>\n<ul>\n<li>Core Web Vitals（核心 Web 指标）<ul>\n<li>LCP（最大内容绘制）：目标 &lt; 2.5s（首屏核心内容加载时间）</li>\n<li>FID（首次输入延迟）：目标 &lt; 100ms（用户首次交互响应时间）</li>\n<li>CLS（累积布局偏移）：目标 &lt; 0.1（页面布局稳定性）</li>\n</ul>\n</li>\n<li>监控工具<ul>\n<li>开发阶段：Lighthouse（Chrome 插件）、WebPageTest（详细性能报告）</li>\n<li>生产环境：Chrome User Experience Report（真实用户数据）、Sentry（错误 + 性能监控）</li>\n</ul>\n</li>\n<li>优化流程<ul>\n<li>用 Lighthouse 生成性能报告，定位瓶颈（如大图片未压缩、长任务阻塞）</li>\n<li>按优先级实施优化（先解决核心指标不达标项）</li>\n<li>上线后监控指标变化，持续迭代</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>前端性能优化的核心逻辑是：<strong>减少资源体积 → 加速资源传输 → 优化渲染效率 → 避免主线程阻塞</strong>。需结合业务场景（如电商注重首屏加载，后台系统注重交互流畅度）制定优先级，同时通过量化指标验证优化效果。性能优化是持续过程，需随着用户增长和功能迭代不断调整策略</p>\n","excerpt":"","more":"<p>前端性能优化是提升用户体验的核心环节，直接影响<strong>页面加载速度、交互流畅度和用户留存率</strong>。<br>优化需覆盖<strong>资源加载、渲染执行、运行时效率</strong>三大阶段，结合量化指标（如 Core Web Vitals）制定针对性方案。以下是系统的前端性能优化策略详解：</p>\n<h3 id=\"资源加载阶段优化（减少加载时间）\"><a href=\"#资源加载阶段优化（减少加载时间）\" class=\"headerlink\" title=\"资源加载阶段优化（减少加载时间）\"></a>资源加载阶段优化（减少加载时间）</h3><p>加载阶段是用户对性能的第一感知，目标是<strong>降低首屏加载时间（FCP）和资源传输成本</strong></p>\n<p><strong>（1）资源体积优化</strong></p>\n<ul>\n<li><p><strong>代码压缩与混淆</strong></p>\n<ul>\n<li>JS：使用 Terser 压缩(移除空格&#x2F;换行&#x2F;注释，缩短变量名)，Webpack&#x2F;Vite 生产模式默认开启</li>\n<li>CSS：通过 CSSNano 压缩，配合 PostCSS 移除冗余规则</li>\n<li>HTML：使用 html-minifier 压缩，移除空白字符和注释<br>👉 效果：通常可减少 30%-60% 的资源体积</li>\n</ul>\n</li>\n<li><p><strong>图片与媒体优化</strong></p>\n<ul>\n<li><p>采用精灵图，减少 http 请求次数</p>\n</li>\n<li><p>使用 svg 图，体积小</p>\n</li>\n<li><p><strong>格式转换</strong>：优先使用 WebP&#x2F;AVIF（比 JPG 小 30%-50%），通过<code>&lt;picture&gt;</code>标签兼容旧浏览器</p>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">picture</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">srcset</span>=<span class=\"string\">&quot;image.avif&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;image/avif&quot;</span> /&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">srcset</span>=<span class=\"string\">&quot;image.webp&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;image/webp&quot;</span> /&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;image.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;描述文本&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">picture</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>分辨率适配</strong>：用 srcset 和 sizes 提供多分辨率图片，避免大图片在小屏幕上加载</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span></span></span><br><span class=\"line\"><span class=\"tag\">\t<span class=\"attr\">src</span>=<span class=\"string\">&quot;pic-800.jpg&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t<span class=\"attr\">srcset</span>=<span class=\"string\">&quot;pic-400.jpg 400w, pic-800.jpg 800w&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t<span class=\"attr\">sizes</span>=<span class=\"string\">&quot;(max-width: 600px) 400px, 800px&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">/&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>压缩处理</strong>：通过 Sharp（Node.js 库）或 TinyPNG 批量压缩图片，保留视觉质量的同时减小体积</li>\n</ul>\n</li>\n<li><p><strong>Tree Shaking（树摇）</strong><br>移除未引用的代码（如未使用的函数、库），需满足:</p>\n<ul>\n<li>使用 ES6 模块（import&#x2F;export）而非 CommonJS（require）</li>\n<li>配置 package.json 的 sideEffects: false（标记无副作用文件）</li>\n<li>Webpack&#x2F;Vite 生产模式自动启用</li>\n</ul>\n</li>\n</ul>\n<p><strong>（2）资源加载策略</strong></p>\n<ul>\n<li><p><strong>按需加载</strong></p>\n</li>\n<li><p><strong>预加载与预连接</strong></p>\n<ul>\n<li>preload：提前加载关键资源（如首屏 CSS、字体），优先级高于普通资源</li>\n<li>preconnect：提前建立与第三方域名的连接（如 CDN、API 服务器），减少 DNS 解析和 TCP 握手耗时</li>\n</ul>\n</li>\n<li><p><strong>懒加载（Lazy Load）</strong><br>延迟加载非首屏资源，减少初始请求数</p>\n<ul>\n<li>图片 &#x2F; 视频：使用 loading&#x3D;”lazy”属性（浏览器原生支持）</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;below-fold.jpg&quot;</span> <span class=\"attr\">loading</span>=<span class=\"string\">&quot;lazy&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;折叠区域图片&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>组件：通过 IntersectionObserver 观察者监听元素可见性后加载</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> observer = <span class=\"keyword\">new</span> <span class=\"title class_\">IntersectionObserver</span>(<span class=\"function\">(<span class=\"params\">entries</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\tentries.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">entry</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (entry.<span class=\"property\">isIntersecting</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">import</span>(<span class=\"string\">&#x27;./LazyComponent&#x27;</span>).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\"><span class=\"variable language_\">module</span></span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// 渲染组件</span></span><br><span class=\"line\">\t\t\t&#125;)</span><br><span class=\"line\">\t\t\tobserver.<span class=\"title function_\">unobserve</span>(entry.<span class=\"property\">target</span>)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">observer.<span class=\"title function_\">observe</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;lazy-container&#x27;</span>))</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><strong>（3）网络传输优化</strong></p>\n<ul>\n<li><p><strong>CDN 分发静态资源</strong><br>将 JS、CSS、图片等静态资源部署到 CDN（如 Cloudflare、阿里云 CDN），用户从最近的节点加载，减少网络延迟（尤其跨地区用户）</p>\n</li>\n<li><p><strong>启用 HTTP&#x2F;2 或 HTTP&#x2F;3</strong></p>\n<ul>\n<li>HTTP&#x2F;2：支持多路复用（同一连接并发请求），解决 HTTP&#x2F;1.1 的队头阻塞问题</li>\n<li>HTTP&#x2F;3：基于 QUIC 协议（UDP），进一步优化丢包恢复和连接建立速度<br>👉 实施：Nginx&#x2F;Apache 配置启用，大型应用可借助 Cloudflare 等服务商快速支持</li>\n</ul>\n</li>\n<li><p><strong>缓存策略优化</strong></p>\n<ul>\n<li><strong>强缓存</strong>：静态资源（JS&#x2F;CSS&#x2F; 图片）设置长期缓存</li>\n</ul>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Cache-Control</span><span class=\"punctuation\">: </span>max-age=31536000, immutable  # 缓存1年，不验证</span><br></pre></td></tr></table></figure>\n<ul>\n<li><strong>协商缓存</strong>：API 数据或频繁更新的资源用 ETag 或 Last-Modified</li>\n</ul>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">ETag</span><span class=\"punctuation\">: </span>&quot;abc123&quot;  # 资源唯一标识，内容变化则更新</span><br><span class=\"line\"><span class=\"attribute\">Last-Modified</span><span class=\"punctuation\">: </span>Tue, 11 Sep 2024 08:00:00 GMT</span><br></pre></td></tr></table></figure>\n<ul>\n<li><strong>缓存更新</strong>：通过文件名哈希（如 app.8f3d.js）实现缓存击穿，内容变化时文件名更新</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"渲染阶段优化（提升渲染效率）\"><a href=\"#渲染阶段优化（提升渲染效率）\" class=\"headerlink\" title=\"渲染阶段优化（提升渲染效率）\"></a>渲染阶段优化（提升渲染效率）</h3><p>渲染阶段优化的核心是<strong>减少重排（Reflow）和重绘（Repaint）</strong>，提升页面渲染速度和流畅度<br><strong>（1）DOM 优化</strong></p>\n<ul>\n<li><strong>减少 DOM 节点数量与层级</strong><br>DOM 节点越多，浏览器构建渲染树（Render Tree）的耗时越长。优化方向：<ul>\n<li>避免无意义嵌套（如<code>&lt;div&gt;&lt;span&gt;文本&lt;/span&gt;&lt;/div&gt;</code>简化为<code>&lt;span&gt;文本&lt;/span&gt;</code>）</li>\n<li>用 CSS Grid&#x2F;Flex 替代多层嵌套的布局结构</li>\n<li>大型列表使用虚拟列表（如 react-window），仅渲染可视区域节点</li>\n</ul>\n</li>\n<li><strong>批量操作 DOM</strong><br>频繁修改 DOM 会触发多次重排，建议批量操作：<ul>\n<li>使用 documentFragment 或离线 DOM（如 div.innerHTML）暂存修改，完成后一次性插入文档：<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fragment = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createDocumentFragment</span>()</span><br><span class=\"line\">data.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> li = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;li&#x27;</span>)</span><br><span class=\"line\">\tli.<span class=\"property\">textContent</span> = item.<span class=\"property\">name</span></span><br><span class=\"line\">\tfragment.<span class=\"title function_\">appendChild</span>(li)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">list.<span class=\"title function_\">appendChild</span>(fragment) <span class=\"comment\">// 仅触发1次重排</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<p><strong>（2）CSS 优化</strong></p>\n<ul>\n<li><strong>简化选择器与样式</strong><ul>\n<li>避免复杂选择器（如 div:nth-child(2) &gt; .class ~ span），改用类选择器（.item）</li>\n<li>减少通配符（*）和属性选择器（[type&#x3D;”text”]）的使用，匹配效率低</li>\n<li>合并重复样式，使用 CSS 变量（–primary: #000）减少代码冗余</li>\n</ul>\n</li>\n<li><strong>避免触发重排的属性</strong><ul>\n<li>修改布局属性（width、height、margin 等）会触发重排，优先使用仅触发合成（Composite）的属性：</li>\n<li>位移：用 transform: translate(Xpx, Ypx)替代 top&#x2F;left</li>\n<li>透明度：用 opacity 替代 visibility（后者仍会触发重绘）</li>\n</ul>\n</li>\n<li><strong>关键 CSS 内联</strong><br>将首屏必需的 CSS 内联到<code>&lt;style&gt;</code>中，避免外部 CSS 文件加载阻塞渲染：<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"comment\">/* 首屏关键CSS：导航、Banner等 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"selector-class\">.header</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t<span class=\"attribute\">height</span>: <span class=\"number\">60px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"selector-class\">.banner</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t<span class=\"attribute\">background</span>: <span class=\"number\">#f0f0f0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 非关键CSS异步加载 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span></span></span><br><span class=\"line\"><span class=\"tag\">\t<span class=\"attr\">rel</span>=<span class=\"string\">&quot;preload&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t<span class=\"attr\">href</span>=<span class=\"string\">&quot;non-critical.css&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t<span class=\"attr\">as</span>=<span class=\"string\">&quot;style&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t<span class=\"attr\">onload</span>=<span class=\"string\">&quot;this.rel=&#x27;stylesheet&#x27;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">/&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><strong>（3）渲染机制优化</strong></p>\n<ul>\n<li><p><strong>使用 CSS Containment 隔离渲染范围</strong><br>告知浏览器某元素的渲染不会影响其他区域，限制重排 &#x2F; 重绘范围：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.widget</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">contain</span>: layout paint size; <span class=\"comment\">/* 布局、绘制、尺寸均独立 */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>合理使用合成层（Compositor Layers）</strong><br>将频繁动画的元素（如轮播、弹窗）提升为独立合成层，避免影响其他元素：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.animated-element</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">will-change</span>: transform; <span class=\"comment\">/* 提示浏览器该元素将动画，提前准备合成层 */</span></span><br><span class=\"line\">\t<span class=\"comment\">/* 或使用 transform: translateZ(0) 强制创建合成层（兼容性更好） */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>👉 注意：合成层过多会占用更多内存，需控制数量</p>\n<h3 id=\"运行阶段优化（提升交互流畅度）\"><a href=\"#运行阶段优化（提升交互流畅度）\" class=\"headerlink\" title=\"运行阶段优化（提升交互流畅度）\"></a>运行阶段优化（提升交互流畅度）</h3><p>运行阶段优化聚焦于<strong>减少主线程阻塞</strong>，确保用户交互（点击、滚动等）响应迅速<br><strong>（1）JavaScript 优化</strong></p>\n<ul>\n<li><p>避免长任务（Long Tasks）<br>主线程执行超过 50ms 的任务会阻塞渲染，优化方案：</p>\n<ul>\n<li><p>拆分长任务：用 setTimeout 或 queueMicrotask 分批次执行：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 拆分大型循环</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">processChunk</span> = (<span class=\"params\">start, end</span>) =&gt; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = start; i &lt; end &amp;&amp; i &lt; data.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 处理单个数据</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (end &lt; data.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> <span class=\"title function_\">processChunk</span>(end, end + <span class=\"number\">100</span>), <span class=\"number\">0</span>) <span class=\"comment\">// 分批次执行</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">processChunk</span>(<span class=\"number\">0</span>, <span class=\"number\">100</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>复杂计算移至 Web Worker：避免主线程阻塞（如数据解析、图表渲染）：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 主线程</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> worker = <span class=\"keyword\">new</span> <span class=\"title class_\">Worker</span>(<span class=\"string\">&#x27;data-processor.js&#x27;</span>)</span><br><span class=\"line\">worker.<span class=\"title function_\">postMessage</span>(largeDataset)</span><br><span class=\"line\">worker.<span class=\"property\">onmessage</span> = <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;处理结果：&#x27;</span>, e.<span class=\"property\">data</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// data-processor.js（Worker线程）</span></span><br><span class=\"line\">self.<span class=\"property\">onmessage</span> = <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> result = <span class=\"title function_\">heavyComputation</span>(e.<span class=\"property\">data</span>) <span class=\"comment\">// 复杂计算</span></span><br><span class=\"line\">\tself.<span class=\"title function_\">postMessage</span>(result)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>防抖（Debounce）与节流（Throttle）<br>限制高频事件（滚动、输入、resize）的执行频率：</p>\n<ul>\n<li>防抖：延迟 n 秒后执行，若 n 秒内再次触发则重新计时（如搜索输入联想）：<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">debounce</span> = (<span class=\"params\">fn, delay</span>) =&gt; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> timer</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"function\">(<span class=\"params\">...args</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">clearTimeout</span>(timer)</span><br><span class=\"line\">\t\ttimer = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> fn.<span class=\"title function_\">apply</span>(<span class=\"variable language_\">this</span>, args), delay)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">input.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;input&#x27;</span>, <span class=\"title function_\">debounce</span>(handleSearch, <span class=\"number\">500</span>))</span><br></pre></td></tr></table></figure></li>\n<li>节流：每隔 n 秒最多执行一次（如滚动加载）：<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">throttle</span> = (<span class=\"params\">fn, interval</span>) =&gt; &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> lastTime = <span class=\"number\">0</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"function\">(<span class=\"params\">...args</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">const</span> now = <span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>()</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (now - lastTime &gt;= interval) &#123;</span><br><span class=\"line\">\t\t\tfn.<span class=\"title function_\">apply</span>(<span class=\"variable language_\">this</span>, args)</span><br><span class=\"line\">\t\t\tlastTime = now</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;scroll&#x27;</span>, <span class=\"title function_\">throttle</span>(loadMore, <span class=\"number\">200</span>))</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>优化事件监听</p>\n<ul>\n<li><p>事件委托：将多个子元素的事件绑定到父元素，减少内存占用：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 代替为每个li绑定click</span></span><br><span class=\"line\">ul.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (e.<span class=\"property\">target</span>.<span class=\"property\">tagName</span> === <span class=\"string\">&#x27;LI&#x27;</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"title function_\">handleLiClick</span>(e.<span class=\"property\">target</span>)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>及时解绑：页面卸载或组件销毁时，移除事件监听和定时器：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// React useEffect示例</span></span><br><span class=\"line\"><span class=\"title function_\">useEffect</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> timer = <span class=\"built_in\">setInterval</span>(updateData, <span class=\"number\">1000</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"function\">() =&gt;</span> <span class=\"built_in\">clearInterval</span>(timer) <span class=\"comment\">// 组件卸载时清理</span></span><br><span class=\"line\">&#125;, [])</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<p><strong>（2）动画与交互优化</strong></p>\n<ul>\n<li><p>优先使用 CSS 动画<br>CSS 动画由浏览器合成线程处理，不阻塞主线程；JS 动画需频繁触发重绘，优先选择：</p>\n<ul>\n<li>@keyframes 或 transition 实现动画；</li>\n<li>复杂动画用 requestAnimationFrame 替代 setInterval（与浏览器刷新同步）：<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">animate</span> = (<span class=\"params\">timestamp</span>) =&gt; &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 更新动画状态</span></span><br><span class=\"line\">\telement.<span class=\"property\">style</span>.<span class=\"property\">transform</span> = <span class=\"string\">`translateX(<span class=\"subst\">$&#123;progress&#125;</span>px)`</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (progress &lt; <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"title function_\">requestAnimationFrame</span>(animate) <span class=\"comment\">// 下一帧继续</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">requestAnimationFrame</span>(animate)</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>优化滚动性能<br>滚动时避免 DOM 操作和复杂计算：</p>\n<ul>\n<li><p>用 passive: true 优化触摸滚动（避免滚动阻塞）：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;scroll&#x27;</span>, handleScroll, &#123; <span class=\"attr\">passive</span>: <span class=\"literal\">true</span> &#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>滚动事件中使用 getBoundingClientRect 时，缓存结果避免频繁重排。</p>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>（3）内存管理优化</strong></p>\n<ul>\n<li>避免内存泄漏<br>常见内存泄漏场景及解决方案：<ul>\n<li>未清理的定时器 &#x2F; 事件监听：组件卸载时清除</li>\n<li>全局变量：避免意外创建（如 function fn() { a &#x3D; 1; }中的 a）</li>\n<li>闭包引用：避免长期持有 DOM 或大对象引用；</li>\n<li>使用 WeakMap&#x2F;WeakSet 存储临时数据（键为对象时，对象销毁后自动回收）</li>\n</ul>\n</li>\n<li>优化大型列表<br>长列表（1000 + 项）一次性渲染会导致 DOM 过多、内存飙升，解决方案：<ul>\n<li>虚拟列表：仅渲染可视区域项（如 react-window、vue-virtual-scroller）</li>\n<li>分页加载：每次加载 20-50 项，滚动到底部时加载下一页</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"性能监控与量化指标\"><a href=\"#性能监控与量化指标\" class=\"headerlink\" title=\"性能监控与量化指标\"></a>性能监控与量化指标</h3><p>优化需结合量化指标持续迭代，核心关注:</p>\n<ul>\n<li>Core Web Vitals（核心 Web 指标）<ul>\n<li>LCP（最大内容绘制）：目标 &lt; 2.5s（首屏核心内容加载时间）</li>\n<li>FID（首次输入延迟）：目标 &lt; 100ms（用户首次交互响应时间）</li>\n<li>CLS（累积布局偏移）：目标 &lt; 0.1（页面布局稳定性）</li>\n</ul>\n</li>\n<li>监控工具<ul>\n<li>开发阶段：Lighthouse（Chrome 插件）、WebPageTest（详细性能报告）</li>\n<li>生产环境：Chrome User Experience Report（真实用户数据）、Sentry（错误 + 性能监控）</li>\n</ul>\n</li>\n<li>优化流程<ul>\n<li>用 Lighthouse 生成性能报告，定位瓶颈（如大图片未压缩、长任务阻塞）</li>\n<li>按优先级实施优化（先解决核心指标不达标项）</li>\n<li>上线后监控指标变化，持续迭代</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>前端性能优化的核心逻辑是：<strong>减少资源体积 → 加速资源传输 → 优化渲染效率 → 避免主线程阻塞</strong>。需结合业务场景（如电商注重首屏加载，后台系统注重交互流畅度）制定优先级，同时通过量化指标验证优化效果。性能优化是持续过程，需随着用户增长和功能迭代不断调整策略</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cmel89pe30006rwnc1yxa50qn","category_id":"cmel89pe50009rwnchf1x0ses","_id":"cmel89ped000krwnc9mak8rb2"},{"post_id":"cmel89pe40008rwnca5qm43tr","category_id":"cmel89pea000grwncfx7n2yku","_id":"cmel89pee000prwnc48eacusm"},{"post_id":"cmel89pec000jrwncgh71a9np","category_id":"cmel89pea000grwncfx7n2yku","_id":"cmel89peg000srwnc3izw5jnb"},{"post_id":"cmel89ped000nrwnc3akfhhnx","category_id":"cmel89pea000grwncfx7n2yku","_id":"cmel89peg000urwncbv20ffwy"},{"post_id":"cmel89pe6000brwncezxkdmi0","category_id":"cmel89ped000lrwnc34jlbku9","_id":"cmel89peh000yrwncaytcdyre"},{"post_id":"cmel89pe7000erwncajds2znh","category_id":"cmel89pea000grwncfx7n2yku","_id":"cmel89peh0010rwnc12oh0wev"},{"post_id":"cmel89pe9000frwncc11z64dv","category_id":"cmel89peg000vrwnc6e5xc6iv","_id":"cmel89peh0014rwnca6es3ika"},{"post_id":"cmel89pee000orwnc4fspa6m3","category_id":"cmel89peh0011rwnc52v86ozt","_id":"cmel89peh0017rwnc3x6t1m39"},{"post_id":"cmel89pep001trwnc93p77reb","category_id":"cmel89pea000grwncfx7n2yku","_id":"cmel89peq001wrwncdsf0fwhb"},{"post_id":"cmel89pel001prwnchskq6kwe","category_id":"cmel89peo001srwnc7e20g6ui","_id":"cmel89peq001yrwnch6nuf15j"},{"post_id":"cmfhzm6b50001iwnc071fapb6","category_id":"cmel89pea000grwncfx7n2yku","_id":"cmfhzm6b60003iwncdmewalpa"},{"post_id":"cmel89pel001orwnc1qot5o9r","category_id":"cmfhzm6b40000iwnc83c9f2t6","_id":"cmfhzm6b60004iwnc50w96idc"},{"post_id":"cmfhzm6b70008iwnc4pljfxaf","category_id":"cmfhzm6b40000iwnc83c9f2t6","_id":"cmfhzm6b9000ciwnc92bm9pda"},{"post_id":"cmfhzm6b70007iwncdqrr4w99","category_id":"cmfhzm6b80009iwncf8c00vt5","_id":"cmfhzm6b9000giwnchmns6ukc"},{"post_id":"cmfhzm6b8000biwnc9utkdb91","category_id":"cmfhzm6b9000diwnc8sf9bmr1","_id":"cmfhzm6b9000iiwncbpzgg8e5"}],"PostTag":[{"post_id":"cmel89pdy0001rwnc5bm7e2vz","tag_id":"cmel89pe20004rwnc2p3b7o3u","_id":"cmel89pe7000drwnc9da170ra"},{"post_id":"cmel89pe30006rwnc1yxa50qn","tag_id":"cmel89pe7000crwnc9zolhe7f","_id":"cmel89peg000trwnc5gnhdae2"},{"post_id":"cmel89pe30006rwnc1yxa50qn","tag_id":"cmel89pea000hrwnc2moigpl4","_id":"cmel89peh000wrwnc974kfiy0"},{"post_id":"cmel89pe30006rwnc1yxa50qn","tag_id":"cmel89ped000mrwnc83i20xb6","_id":"cmel89peh000zrwncc3h01z7d"},{"post_id":"cmel89pe6000brwncezxkdmi0","tag_id":"cmel89peg000rrwnc2gpc5pvm","_id":"cmel89peh0013rwncaag573ar"},{"post_id":"cmel89pe6000brwncezxkdmi0","tag_id":"cmel89peh000xrwnc4iqa57ip","_id":"cmel89peh0015rwnc8nxphli7"},{"post_id":"cmel89pe7000erwncajds2znh","tag_id":"cmel89peh0012rwncenk9f4m8","_id":"cmel89pei0019rwncd7x2evpz"},{"post_id":"cmel89pe7000erwncajds2znh","tag_id":"cmel89peh0016rwnc80sq4q5g","_id":"cmel89pei001arwnc2fr4dp3z"},{"post_id":"cmel89pe9000frwncc11z64dv","tag_id":"cmel89peh0018rwnc53jq9p5l","_id":"cmel89pei001drwncarsh6zac"},{"post_id":"cmel89pe9000frwncc11z64dv","tag_id":"cmel89pei001brwncccf772x3","_id":"cmel89pei001erwncc9nv31x4"},{"post_id":"cmel89peb000irwnc52ktd2gn","tag_id":"cmel89pei001crwnccih0e22q","_id":"cmel89pej001hrwnc9yc80csj"},{"post_id":"cmel89peb000irwnc52ktd2gn","tag_id":"cmel89pei001frwncbkkadkx1","_id":"cmel89pej001irwnc29qoawvq"},{"post_id":"cmel89pec000jrwncgh71a9np","tag_id":"cmel89pej001grwnceu5ze1d2","_id":"cmel89pej001krwncc799fvcy"},{"post_id":"cmel89ped000nrwnc3akfhhnx","tag_id":"cmel89pej001jrwnc9gokatty","_id":"cmel89pej001mrwncaagecw1m"},{"post_id":"cmel89pee000orwnc4fspa6m3","tag_id":"cmel89pej001lrwncezst7iif","_id":"cmel89pek001nrwncaxbmcjxh"},{"post_id":"cmel89pel001orwnc1qot5o9r","tag_id":"cmel89pen001qrwnc5zvz0o0s","_id":"cmel89peq001zrwncf9xo7ngp"},{"post_id":"cmel89pel001orwnc1qot5o9r","tag_id":"cmel89peq001vrwnc01rdecvx","_id":"cmel89peq0020rwncffc0ec0p"},{"post_id":"cmel89pel001prwnchskq6kwe","tag_id":"cmel89peq001xrwnc0p34cw18","_id":"cmel89peq0022rwnc1ipw3107"},{"post_id":"cmel89pen001rrwnc4whufcai","tag_id":"cmel89peq0021rwnca4km64wo","_id":"cmel89peq0024rwnc0kj88q4f"},{"post_id":"cmel89pep001trwnc93p77reb","tag_id":"cmel89peq0023rwncbaqf0yyq","_id":"cmel89per0026rwnc7z2odw5k"},{"post_id":"cmel89pep001trwnc93p77reb","tag_id":"cmel89per0025rwnc12adg3gc","_id":"cmel89per0027rwncde3debjm"},{"post_id":"cmfhzm6b50001iwnc071fapb6","tag_id":"cmfhzm6b60002iwnc2j3l76ia","_id":"cmfhzm6b70005iwncf5biap7j"},{"post_id":"cmfhzm6b50001iwnc071fapb6","tag_id":"cmel89peq001xrwnc0p34cw18","_id":"cmfhzm6b70006iwnc3g0k6ew0"},{"post_id":"cmfhzm6b70007iwncdqrr4w99","tag_id":"cmfhzm6b8000aiwncfr0s9q09","_id":"cmfhzm6b9000fiwncc74xdi4f"},{"post_id":"cmfhzm6b70008iwnc4pljfxaf","tag_id":"cmfhzm6b9000eiwncbpnr6uwq","_id":"cmfhzm6b9000kiwnccf6jhttj"},{"post_id":"cmfhzm6b70008iwnc4pljfxaf","tag_id":"cmfhzm6b9000hiwncazmu3hmt","_id":"cmfhzm6b9000liwnc6shb2zpo"},{"post_id":"cmfhzm6b8000biwnc9utkdb91","tag_id":"cmfhzm6b9000jiwnc2qsr64qd","_id":"cmfhzm6b9000miwncdd5gczev"}],"Tag":[{"name":"git","_id":"cmel89pe20004rwnc2p3b7o3u"},{"name":"axios","_id":"cmel89pe7000crwnc9zolhe7f"},{"name":"get","_id":"cmel89pea000hrwnc2moigpl4"},{"name":"post","_id":"cmel89ped000mrwnc83i20xb6"},{"name":"hexo","_id":"cmel89peg000rrwnc2gpc5pvm"},{"name":"gitlab","_id":"cmel89peh000xrwnc4iqa57ip"},{"name":"forEach","_id":"cmel89peh0012rwncenk9f4m8"},{"name":"async/await","_id":"cmel89peh0016rwnc80sq4q5g"},{"name":"vite","_id":"cmel89peh0018rwnc53jq9p5l"},{"name":"vue-cli","_id":"cmel89pei001brwncccf772x3"},{"name":"nvm","_id":"cmel89pei001crwnccih0e22q"},{"name":"nodejs","_id":"cmel89pei001frwncbkkadkx1"},{"name":"setTimeout","_id":"cmel89pej001grwnceu5ze1d2"},{"name":"event loop","_id":"cmel89pej001jrwnc9gokatty"},{"name":"微信小程序","_id":"cmel89pej001lrwncezst7iif"},{"name":"上传","_id":"cmel89pen001qrwnc5zvz0o0s"},{"name":"input","_id":"cmel89peq001vrwnc01rdecvx"},{"name":"css","_id":"cmel89peq001xrwnc0p34cw18"},{"name":"Google Maps","_id":"cmel89peq0021rwnca4km64wo"},{"name":"echarts-wordcloud","_id":"cmel89peq0023rwncbaqf0yyq"},{"name":"echarts","_id":"cmel89per0025rwnc12adg3gc"},{"name":"瀑布流布局","_id":"cmfhzm6b60002iwnc2j3l76ia"},{"name":"SEO","_id":"cmfhzm6b8000aiwncfr0s9q09"},{"name":"export","_id":"cmfhzm6b9000eiwncbpnr6uwq"},{"name":"xlsx","_id":"cmfhzm6b9000hiwncazmu3hmt"},{"name":"性能优化","_id":"cmfhzm6b9000jiwnc2qsr64qd"}]}}